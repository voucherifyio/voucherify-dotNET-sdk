/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Defines ParameterCustomerEvent
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ParameterCustomerEvent
    {
        /// <summary>
        /// Enum CustomerConfirmed for value: customer.confirmed
        /// </summary>
        [EnumMember(Value = "customer.confirmed")]
        CustomerConfirmed = 1,

        /// <summary>
        /// Enum CustomerCreated for value: customer.created
        /// </summary>
        [EnumMember(Value = "customer.created")]
        CustomerCreated = 2,

        /// <summary>
        /// Enum CustomerUpdated for value: customer.updated
        /// </summary>
        [EnumMember(Value = "customer.updated")]
        CustomerUpdated = 3,

        /// <summary>
        /// Enum CustomerDeleted for value: customer.deleted
        /// </summary>
        [EnumMember(Value = "customer.deleted")]
        CustomerDeleted = 4,

        /// <summary>
        /// Enum CustomerReferred for value: customer.referred
        /// </summary>
        [EnumMember(Value = "customer.referred")]
        CustomerReferred = 5,

        /// <summary>
        /// Enum CustomerCustomEvent for value: customer.custom_event
        /// </summary>
        [EnumMember(Value = "customer.custom_event")]
        CustomerCustomEvent = 6,

        /// <summary>
        /// Enum CustomerSegmentEntered for value: customer.segment.entered
        /// </summary>
        [EnumMember(Value = "customer.segment.entered")]
        CustomerSegmentEntered = 7,

        /// <summary>
        /// Enum CustomerSegmentLeft for value: customer.segment.left
        /// </summary>
        [EnumMember(Value = "customer.segment.left")]
        CustomerSegmentLeft = 8,

        /// <summary>
        /// Enum CustomerSmsSent for value: customer.sms.sent
        /// </summary>
        [EnumMember(Value = "customer.sms.sent")]
        CustomerSmsSent = 9,

        /// <summary>
        /// Enum CustomerSmsRecovered for value: customer.sms.recovered
        /// </summary>
        [EnumMember(Value = "customer.sms.recovered")]
        CustomerSmsRecovered = 10,

        /// <summary>
        /// Enum CustomerSmsFailed for value: customer.sms.failed
        /// </summary>
        [EnumMember(Value = "customer.sms.failed")]
        CustomerSmsFailed = 11,

        /// <summary>
        /// Enum CustomerEmailSent for value: customer.email.sent
        /// </summary>
        [EnumMember(Value = "customer.email.sent")]
        CustomerEmailSent = 12,

        /// <summary>
        /// Enum CustomerEmailRecovered for value: customer.email.recovered
        /// </summary>
        [EnumMember(Value = "customer.email.recovered")]
        CustomerEmailRecovered = 13,

        /// <summary>
        /// Enum CustomerEmailFailed for value: customer.email.failed
        /// </summary>
        [EnumMember(Value = "customer.email.failed")]
        CustomerEmailFailed = 14,

        /// <summary>
        /// Enum CustomerActivecampaignSent for value: customer.activecampaign.sent
        /// </summary>
        [EnumMember(Value = "customer.activecampaign.sent")]
        CustomerActivecampaignSent = 15,

        /// <summary>
        /// Enum CustomerActivecampaignRecovered for value: customer.activecampaign.recovered
        /// </summary>
        [EnumMember(Value = "customer.activecampaign.recovered")]
        CustomerActivecampaignRecovered = 16,

        /// <summary>
        /// Enum CustomerActivecampaignFailed for value: customer.activecampaign.failed
        /// </summary>
        [EnumMember(Value = "customer.activecampaign.failed")]
        CustomerActivecampaignFailed = 17,

        /// <summary>
        /// Enum CustomerBrazeSent for value: customer.braze.sent
        /// </summary>
        [EnumMember(Value = "customer.braze.sent")]
        CustomerBrazeSent = 18,

        /// <summary>
        /// Enum CustomerBrazeRecovered for value: customer.braze.recovered
        /// </summary>
        [EnumMember(Value = "customer.braze.recovered")]
        CustomerBrazeRecovered = 19,

        /// <summary>
        /// Enum CustomerBrazeFailed for value: customer.braze.failed
        /// </summary>
        [EnumMember(Value = "customer.braze.failed")]
        CustomerBrazeFailed = 20,

        /// <summary>
        /// Enum CustomerMailchimpSent for value: customer.mailchimp.sent
        /// </summary>
        [EnumMember(Value = "customer.mailchimp.sent")]
        CustomerMailchimpSent = 21,

        /// <summary>
        /// Enum CustomerMailchimpRecovered for value: customer.mailchimp.recovered
        /// </summary>
        [EnumMember(Value = "customer.mailchimp.recovered")]
        CustomerMailchimpRecovered = 22,

        /// <summary>
        /// Enum CustomerMailchimpFailed for value: customer.mailchimp.failed
        /// </summary>
        [EnumMember(Value = "customer.mailchimp.failed")]
        CustomerMailchimpFailed = 23,

        /// <summary>
        /// Enum CustomerIntercomSent for value: customer.intercom.sent
        /// </summary>
        [EnumMember(Value = "customer.intercom.sent")]
        CustomerIntercomSent = 24,

        /// <summary>
        /// Enum CustomerIntercomRecovered for value: customer.intercom.recovered
        /// </summary>
        [EnumMember(Value = "customer.intercom.recovered")]
        CustomerIntercomRecovered = 25,

        /// <summary>
        /// Enum CustomerIntercomFailed for value: customer.intercom.failed
        /// </summary>
        [EnumMember(Value = "customer.intercom.failed")]
        CustomerIntercomFailed = 26,

        /// <summary>
        /// Enum CustomerShopifySent for value: customer.shopify.sent
        /// </summary>
        [EnumMember(Value = "customer.shopify.sent")]
        CustomerShopifySent = 27,

        /// <summary>
        /// Enum CustomerShopifyRecovered for value: customer.shopify.recovered
        /// </summary>
        [EnumMember(Value = "customer.shopify.recovered")]
        CustomerShopifyRecovered = 28,

        /// <summary>
        /// Enum CustomerShopifyFailed for value: customer.shopify.failed
        /// </summary>
        [EnumMember(Value = "customer.shopify.failed")]
        CustomerShopifyFailed = 29,

        /// <summary>
        /// Enum CustomerKlaviyoSent for value: customer.klaviyo.sent
        /// </summary>
        [EnumMember(Value = "customer.klaviyo.sent")]
        CustomerKlaviyoSent = 30,

        /// <summary>
        /// Enum CustomerKlaviyoRecovered for value: customer.klaviyo.recovered
        /// </summary>
        [EnumMember(Value = "customer.klaviyo.recovered")]
        CustomerKlaviyoRecovered = 31,

        /// <summary>
        /// Enum CustomerKlaviyoFailed for value: customer.klaviyo.failed
        /// </summary>
        [EnumMember(Value = "customer.klaviyo.failed")]
        CustomerKlaviyoFailed = 32,

        /// <summary>
        /// Enum CustomerBatchSent for value: customer.batch.sent
        /// </summary>
        [EnumMember(Value = "customer.batch.sent")]
        CustomerBatchSent = 33,

        /// <summary>
        /// Enum CustomerBatchRecovered for value: customer.batch.recovered
        /// </summary>
        [EnumMember(Value = "customer.batch.recovered")]
        CustomerBatchRecovered = 34,

        /// <summary>
        /// Enum CustomerBatchFailed for value: customer.batch.failed
        /// </summary>
        [EnumMember(Value = "customer.batch.failed")]
        CustomerBatchFailed = 35,

        /// <summary>
        /// Enum CustomerRewarded for value: customer.rewarded
        /// </summary>
        [EnumMember(Value = "customer.rewarded")]
        CustomerRewarded = 36,

        /// <summary>
        /// Enum CustomerRewardedLoyaltyPoints for value: customer.rewarded.loyalty_points
        /// </summary>
        [EnumMember(Value = "customer.rewarded.loyalty_points")]
        CustomerRewardedLoyaltyPoints = 37,

        /// <summary>
        /// Enum CustomerVoucherGiftBalanceAdded for value: customer.voucher.gift.balance_added
        /// </summary>
        [EnumMember(Value = "customer.voucher.gift.balance_added")]
        CustomerVoucherGiftBalanceAdded = 38,

        /// <summary>
        /// Enum CustomerVoucherLoyaltyCardPointsAdded for value: customer.voucher.loyalty_card.points_added
        /// </summary>
        [EnumMember(Value = "customer.voucher.loyalty_card.points_added")]
        CustomerVoucherLoyaltyCardPointsAdded = 39,

        /// <summary>
        /// Enum CustomerVoucherLoyaltyCardPointsTransferred for value: customer.voucher.loyalty_card.points_transferred
        /// </summary>
        [EnumMember(Value = "customer.voucher.loyalty_card.points_transferred")]
        CustomerVoucherLoyaltyCardPointsTransferred = 40,

        /// <summary>
        /// Enum CustomerVoucherLoyaltyCardPointsExpired for value: customer.voucher.loyalty_card.points_expired
        /// </summary>
        [EnumMember(Value = "customer.voucher.loyalty_card.points_expired")]
        CustomerVoucherLoyaltyCardPointsExpired = 41,

        /// <summary>
        /// Enum CustomerVoucherDeleted for value: customer.voucher.deleted
        /// </summary>
        [EnumMember(Value = "customer.voucher.deleted")]
        CustomerVoucherDeleted = 42,

        /// <summary>
        /// Enum CustomerPublicationSucceeded for value: customer.publication.succeeded
        /// </summary>
        [EnumMember(Value = "customer.publication.succeeded")]
        CustomerPublicationSucceeded = 43,

        /// <summary>
        /// Enum CustomerPublicationFailed for value: customer.publication.failed
        /// </summary>
        [EnumMember(Value = "customer.publication.failed")]
        CustomerPublicationFailed = 44,

        /// <summary>
        /// Enum CustomerValidationSucceeded for value: customer.validation.succeeded
        /// </summary>
        [EnumMember(Value = "customer.validation.succeeded")]
        CustomerValidationSucceeded = 45,

        /// <summary>
        /// Enum CustomerValidationFailed for value: customer.validation.failed
        /// </summary>
        [EnumMember(Value = "customer.validation.failed")]
        CustomerValidationFailed = 46,

        /// <summary>
        /// Enum CustomerRedemptionFailed for value: customer.redemption.failed
        /// </summary>
        [EnumMember(Value = "customer.redemption.failed")]
        CustomerRedemptionFailed = 47,

        /// <summary>
        /// Enum CustomerRedemptionSucceeded for value: customer.redemption.succeeded
        /// </summary>
        [EnumMember(Value = "customer.redemption.succeeded")]
        CustomerRedemptionSucceeded = 48,

        /// <summary>
        /// Enum CustomerRedemptionRollbackFailed for value: customer.redemption.rollback.failed
        /// </summary>
        [EnumMember(Value = "customer.redemption.rollback.failed")]
        CustomerRedemptionRollbackFailed = 49,

        /// <summary>
        /// Enum CustomerRedemptionRollbackSucceeded for value: customer.redemption.rollback.succeeded
        /// </summary>
        [EnumMember(Value = "customer.redemption.rollback.succeeded")]
        CustomerRedemptionRollbackSucceeded = 50,

        /// <summary>
        /// Enum CustomerOrderCanceled for value: customer.order.canceled
        /// </summary>
        [EnumMember(Value = "customer.order.canceled")]
        CustomerOrderCanceled = 51,

        /// <summary>
        /// Enum CustomerOrderCreated for value: customer.order.created
        /// </summary>
        [EnumMember(Value = "customer.order.created")]
        CustomerOrderCreated = 52,

        /// <summary>
        /// Enum CustomerOrderFulfilled for value: customer.order.fulfilled
        /// </summary>
        [EnumMember(Value = "customer.order.fulfilled")]
        CustomerOrderFulfilled = 53,

        /// <summary>
        /// Enum CustomerOrderPaid for value: customer.order.paid
        /// </summary>
        [EnumMember(Value = "customer.order.paid")]
        CustomerOrderPaid = 54,

        /// <summary>
        /// Enum CustomerOrderProcessing for value: customer.order.processing
        /// </summary>
        [EnumMember(Value = "customer.order.processing")]
        CustomerOrderProcessing = 55,

        /// <summary>
        /// Enum CustomerOrderUpdated for value: customer.order.updated
        /// </summary>
        [EnumMember(Value = "customer.order.updated")]
        CustomerOrderUpdated = 56,

        /// <summary>
        /// Enum CustomerRewardRedemptionsCreated for value: customer.reward_redemptions.created
        /// </summary>
        [EnumMember(Value = "customer.reward_redemptions.created")]
        CustomerRewardRedemptionsCreated = 57,

        /// <summary>
        /// Enum CustomerRewardRedemptionsPending for value: customer.reward_redemptions.pending
        /// </summary>
        [EnumMember(Value = "customer.reward_redemptions.pending")]
        CustomerRewardRedemptionsPending = 58,

        /// <summary>
        /// Enum CustomerRewardRedemptionsCompleted for value: customer.reward_redemptions.completed
        /// </summary>
        [EnumMember(Value = "customer.reward_redemptions.completed")]
        CustomerRewardRedemptionsCompleted = 59,

        /// <summary>
        /// Enum CustomerRewardRedemptionsRolledback for value: customer.reward_redemptions.rolledback
        /// </summary>
        [EnumMember(Value = "customer.reward_redemptions.rolledback")]
        CustomerRewardRedemptionsRolledback = 60,

        /// <summary>
        /// Enum CustomerLoyaltyUpdated for value: customer.loyalty.updated
        /// </summary>
        [EnumMember(Value = "customer.loyalty.updated")]
        CustomerLoyaltyUpdated = 61,

        /// <summary>
        /// Enum CustomerLoyaltyTierUpgraded for value: customer.loyalty.tier.upgraded
        /// </summary>
        [EnumMember(Value = "customer.loyalty.tier.upgraded")]
        CustomerLoyaltyTierUpgraded = 62,

        /// <summary>
        /// Enum CustomerLoyaltyTierDowngraded for value: customer.loyalty.tier.downgraded
        /// </summary>
        [EnumMember(Value = "customer.loyalty.tier.downgraded")]
        CustomerLoyaltyTierDowngraded = 63,

        /// <summary>
        /// Enum CustomerLoyaltyTierProlonged for value: customer.loyalty.tier.prolonged
        /// </summary>
        [EnumMember(Value = "customer.loyalty.tier.prolonged")]
        CustomerLoyaltyTierProlonged = 64,

        /// <summary>
        /// Enum CustomerLoyaltyTierExpirationChanged for value: customer.loyalty.tier.expiration.changed
        /// </summary>
        [EnumMember(Value = "customer.loyalty.tier.expiration.changed")]
        CustomerLoyaltyTierExpirationChanged = 65,

        /// <summary>
        /// Enum CustomerLoyaltyTierJoined for value: customer.loyalty.tier.joined
        /// </summary>
        [EnumMember(Value = "customer.loyalty.tier.joined")]
        CustomerLoyaltyTierJoined = 66,

        /// <summary>
        /// Enum CustomerLoyaltyTierLeft for value: customer.loyalty.tier.left
        /// </summary>
        [EnumMember(Value = "customer.loyalty.tier.left")]
        CustomerLoyaltyTierLeft = 67
    }

}
