/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// RewardsUpdateRequestBodyParameters
    /// </summary>
    [DataContract(Name = "RewardsUpdateRequestBodyParameters")]
    public partial class RewardsUpdateRequestBodyParameters : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RewardsUpdateRequestBodyParameters" /> class.
        /// </summary>
        /// <param name="campaign">campaign.</param>
        /// <param name="product">product.</param>
        /// <param name="coin">coin.</param>
        public RewardsUpdateRequestBodyParameters(RewardsUpdateRequestBodyParametersCampaign campaign = default(RewardsUpdateRequestBodyParametersCampaign), RewardsUpdateRequestBodyParametersProduct product = default(RewardsUpdateRequestBodyParametersProduct), RewardsUpdateRequestBodyParametersCoin coin = default(RewardsUpdateRequestBodyParametersCoin))
        {
            this._Campaign = campaign;
            if (this.Campaign != null)
            {
                this._flagCampaign = true;
            }
            this._Product = product;
            if (this.Product != null)
            {
                this._flagProduct = true;
            }
            this._Coin = coin;
            if (this.Coin != null)
            {
                this._flagCoin = true;
            }
        }

        /// <summary>
        /// Gets or Sets Campaign
        /// </summary>
        [DataMember(Name = "campaign", EmitDefaultValue = true)]
        public RewardsUpdateRequestBodyParametersCampaign Campaign
        {
            get{ return _Campaign;}
            set
            {
                _Campaign = value;
                _flagCampaign = true;
            }
        }
        private RewardsUpdateRequestBodyParametersCampaign _Campaign;
        private bool _flagCampaign;

        /// <summary>
        /// Returns false as Campaign should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaign()
        {
            return _flagCampaign;
        }
        /// <summary>
        /// Gets or Sets Product
        /// </summary>
        [DataMember(Name = "product", EmitDefaultValue = true)]
        public RewardsUpdateRequestBodyParametersProduct Product
        {
            get{ return _Product;}
            set
            {
                _Product = value;
                _flagProduct = true;
            }
        }
        private RewardsUpdateRequestBodyParametersProduct _Product;
        private bool _flagProduct;

        /// <summary>
        /// Returns false as Product should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeProduct()
        {
            return _flagProduct;
        }
        /// <summary>
        /// Gets or Sets Coin
        /// </summary>
        [DataMember(Name = "coin", EmitDefaultValue = true)]
        public RewardsUpdateRequestBodyParametersCoin Coin
        {
            get{ return _Coin;}
            set
            {
                _Coin = value;
                _flagCoin = true;
            }
        }
        private RewardsUpdateRequestBodyParametersCoin _Coin;
        private bool _flagCoin;

        /// <summary>
        /// Returns false as Coin should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCoin()
        {
            return _flagCoin;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RewardsUpdateRequestBodyParameters {\n");
            sb.Append("  Campaign: ").Append(Campaign).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("  Coin: ").Append(Coin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
