/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Request body schema for **POST** &#x60;v1/validation-rules/{validationRuleId}/assignments&#x60;.
    /// </summary>
    [DataContract(Name = "ValidationRulesAssignmentsCreateRequestBody")]
    public partial class ValidationRulesAssignmentsCreateRequestBody : IValidatableObject
    {
        /// <summary>
        /// Defines the related object, e.g. &#x60;voucher&#x60;.
        /// </summary>
        /// <value>Defines the related object, e.g. &#x60;voucher&#x60;.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RelatedObjectTypeEnum
        {
            /// <summary>
            /// Enum Voucher for value: voucher
            /// </summary>
            [EnumMember(Value = "voucher")]
            Voucher = 1,

            /// <summary>
            /// Enum PromotionTier for value: promotion_tier
            /// </summary>
            [EnumMember(Value = "promotion_tier")]
            PromotionTier = 2,

            /// <summary>
            /// Enum Campaign for value: campaign
            /// </summary>
            [EnumMember(Value = "campaign")]
            Campaign = 3,

            /// <summary>
            /// Enum EarningRule for value: earning_rule
            /// </summary>
            [EnumMember(Value = "earning_rule")]
            EarningRule = 4,

            /// <summary>
            /// Enum Distribution for value: distribution
            /// </summary>
            [EnumMember(Value = "distribution")]
            Distribution = 5,

            /// <summary>
            /// Enum RewardAssignment for value: reward_assignment
            /// </summary>
            [EnumMember(Value = "reward_assignment")]
            RewardAssignment = 6
        }


        /// <summary>
        /// Defines the related object, e.g. &#x60;voucher&#x60;.
        /// </summary>
        /// <value>Defines the related object, e.g. &#x60;voucher&#x60;.</value>

        [DataMember(Name = "related_object_type", EmitDefaultValue = true)]
        public RelatedObjectTypeEnum? RelatedObjectType
        {
            get{ return _RelatedObjectType;}
            set
            {
                _RelatedObjectType = value;
                _flagRelatedObjectType = true;
            }
        }
        private RelatedObjectTypeEnum? _RelatedObjectType;
        private bool _flagRelatedObjectType;

        /// <summary>
        /// Returns false as RelatedObjectType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectType()
        {
            return _flagRelatedObjectType;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidationRulesAssignmentsCreateRequestBody" /> class.
        /// </summary>
        /// <param name="relatedObjectType">Defines the related object, e.g. &#x60;voucher&#x60;. (default to RelatedObjectTypeEnum.Voucher).</param>
        /// <param name="relatedObjectId">Unique related object ID assigned by Voucherify, e.g. &#x60;v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno&#x60; for a voucher..</param>
        public ValidationRulesAssignmentsCreateRequestBody(RelatedObjectTypeEnum? relatedObjectType = RelatedObjectTypeEnum.Voucher, string relatedObjectId = default(string))
        {
            this._RelatedObjectId = relatedObjectId;
            if (this.RelatedObjectId != null)
            {
                this._flagRelatedObjectId = true;
            }
        }

        /// <summary>
        /// Unique related object ID assigned by Voucherify, e.g. &#x60;v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno&#x60; for a voucher.
        /// </summary>
        /// <value>Unique related object ID assigned by Voucherify, e.g. &#x60;v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno&#x60; for a voucher.</value>
        [DataMember(Name = "related_object_id", EmitDefaultValue = true)]
        public string RelatedObjectId
        {
            get{ return _RelatedObjectId;}
            set
            {
                _RelatedObjectId = value;
                _flagRelatedObjectId = true;
            }
        }
        private string _RelatedObjectId;
        private bool _flagRelatedObjectId;

        /// <summary>
        /// Returns false as RelatedObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectId()
        {
            return _flagRelatedObjectId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ValidationRulesAssignmentsCreateRequestBody {\n");
            sb.Append("  RelatedObjectType: ").Append(RelatedObjectType).Append("\n");
            sb.Append("  RelatedObjectId: ").Append(RelatedObjectId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
