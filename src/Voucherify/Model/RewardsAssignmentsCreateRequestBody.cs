/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// RewardsAssignmentsCreateRequestBody
    /// </summary>
    [DataContract(Name = "RewardsAssignmentsCreateRequestBody")]
    public partial class RewardsAssignmentsCreateRequestBody : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RewardsAssignmentsCreateRequestBody" /> class.
        /// </summary>
        /// <param name="campaign">The campaign ID of the campaign to which the reward is to be assigned..</param>
        /// <param name="parameters">parameters.</param>
        /// <param name="validationRules">validationRules.</param>
        public RewardsAssignmentsCreateRequestBody(string campaign = default(string), RewardsAssignmentsCreateRequestBodyParameters parameters = default(RewardsAssignmentsCreateRequestBodyParameters), List<string> validationRules = default(List<string>))
        {
            this._Campaign = campaign;
            if (this.Campaign != null)
            {
                this._flagCampaign = true;
            }
            this._Parameters = parameters;
            if (this.Parameters != null)
            {
                this._flagParameters = true;
            }
            this._ValidationRules = validationRules;
            if (this.ValidationRules != null)
            {
                this._flagValidationRules = true;
            }
        }

        /// <summary>
        /// The campaign ID of the campaign to which the reward is to be assigned.
        /// </summary>
        /// <value>The campaign ID of the campaign to which the reward is to be assigned.</value>
        [DataMember(Name = "campaign", EmitDefaultValue = true)]
        public string Campaign
        {
            get{ return _Campaign;}
            set
            {
                _Campaign = value;
                _flagCampaign = true;
            }
        }
        private string _Campaign;
        private bool _flagCampaign;

        /// <summary>
        /// Returns false as Campaign should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaign()
        {
            return _flagCampaign;
        }
        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name = "parameters", EmitDefaultValue = true)]
        public RewardsAssignmentsCreateRequestBodyParameters Parameters
        {
            get{ return _Parameters;}
            set
            {
                _Parameters = value;
                _flagParameters = true;
            }
        }
        private RewardsAssignmentsCreateRequestBodyParameters _Parameters;
        private bool _flagParameters;

        /// <summary>
        /// Returns false as Parameters should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeParameters()
        {
            return _flagParameters;
        }
        /// <summary>
        /// Gets or Sets ValidationRules
        /// </summary>
        [DataMember(Name = "validation_rules", EmitDefaultValue = true)]
        public List<string> ValidationRules
        {
            get{ return _ValidationRules;}
            set
            {
                _ValidationRules = value;
                _flagValidationRules = true;
            }
        }
        private List<string> _ValidationRules;
        private bool _flagValidationRules;

        /// <summary>
        /// Returns false as ValidationRules should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeValidationRules()
        {
            return _flagValidationRules;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RewardsAssignmentsCreateRequestBody {\n");
            sb.Append("  Campaign: ").Append(Campaign).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("  ValidationRules: ").Append(ValidationRules).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
