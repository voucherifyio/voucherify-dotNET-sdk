/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Contains information about the source of the referral.
    /// </summary>
    [DataContract(Name = "CustomerReferralsCampaignsItem")]
    public partial class CustomerReferralsCampaignsItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerReferralsCampaignsItem" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CustomerReferralsCampaignsItem() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerReferralsCampaignsItem" /> class.
        /// </summary>
        /// <param name="campaignId">Unique campaign ID, assigned by Voucherify. (required).</param>
        /// <param name="referrerId">Unique referrer ID, assigned by Voucherify. This is the customer ID of a customer that is referring this customer. (required).</param>
        /// <param name="relatedObjectId">Related object id (required).</param>
        /// <param name="relatedObjectType">Related object type, i.e. &#x60;redemption&#x60;. (required).</param>
        /// <param name="date">Timestamp representing the date and time when the customer was referred in ISO 8601 format. (required).</param>
        public CustomerReferralsCampaignsItem(string campaignId = default(string), string referrerId = default(string), string relatedObjectId = default(string), string relatedObjectType = default(string), DateTimeOffset date = default(DateTimeOffset))
        {
            // to ensure "campaignId" is required (not null)
            if (campaignId == null)
            {
                throw new ArgumentNullException("campaignId is a required property for CustomerReferralsCampaignsItem and cannot be null");
            }
            this._CampaignId = campaignId;
            // to ensure "referrerId" is required (not null)
            if (referrerId == null)
            {
                throw new ArgumentNullException("referrerId is a required property for CustomerReferralsCampaignsItem and cannot be null");
            }
            this._ReferrerId = referrerId;
            // to ensure "relatedObjectId" is required (not null)
            if (relatedObjectId == null)
            {
                throw new ArgumentNullException("relatedObjectId is a required property for CustomerReferralsCampaignsItem and cannot be null");
            }
            this._RelatedObjectId = relatedObjectId;
            // to ensure "relatedObjectType" is required (not null)
            if (relatedObjectType == null)
            {
                throw new ArgumentNullException("relatedObjectType is a required property for CustomerReferralsCampaignsItem and cannot be null");
            }
            this._RelatedObjectType = relatedObjectType;
            this._Date = date;
        }

        /// <summary>
        /// Unique campaign ID, assigned by Voucherify.
        /// </summary>
        /// <value>Unique campaign ID, assigned by Voucherify.</value>
        /*
        <example>camp_rRsfatlwN7unSeUIJDCYedal</example>
        */
        [DataMember(Name = "campaign_id", IsRequired = true, EmitDefaultValue = true)]
        public string CampaignId
        {
            get{ return _CampaignId;}
            set
            {
                _CampaignId = value;
                _flagCampaignId = true;
            }
        }
        private string _CampaignId;
        private bool _flagCampaignId;

        /// <summary>
        /// Returns false as CampaignId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignId()
        {
            return _flagCampaignId;
        }
        /// <summary>
        /// Unique referrer ID, assigned by Voucherify. This is the customer ID of a customer that is referring this customer.
        /// </summary>
        /// <value>Unique referrer ID, assigned by Voucherify. This is the customer ID of a customer that is referring this customer.</value>
        /*
        <example>cust_sehkNIi8Uq2qQuRqSr7xn4Zi</example>
        */
        [DataMember(Name = "referrer_id", IsRequired = true, EmitDefaultValue = true)]
        public string ReferrerId
        {
            get{ return _ReferrerId;}
            set
            {
                _ReferrerId = value;
                _flagReferrerId = true;
            }
        }
        private string _ReferrerId;
        private bool _flagReferrerId;

        /// <summary>
        /// Returns false as ReferrerId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeReferrerId()
        {
            return _flagReferrerId;
        }
        /// <summary>
        /// Related object id
        /// </summary>
        /// <value>Related object id</value>
        /*
        <example>r_0b9d4cc4aa164dd073</example>
        */
        [DataMember(Name = "related_object_id", IsRequired = true, EmitDefaultValue = true)]
        public string RelatedObjectId
        {
            get{ return _RelatedObjectId;}
            set
            {
                _RelatedObjectId = value;
                _flagRelatedObjectId = true;
            }
        }
        private string _RelatedObjectId;
        private bool _flagRelatedObjectId;

        /// <summary>
        /// Returns false as RelatedObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectId()
        {
            return _flagRelatedObjectId;
        }
        /// <summary>
        /// Related object type, i.e. &#x60;redemption&#x60;.
        /// </summary>
        /// <value>Related object type, i.e. &#x60;redemption&#x60;.</value>
        [DataMember(Name = "related_object_type", IsRequired = true, EmitDefaultValue = true)]
        public string RelatedObjectType
        {
            get{ return _RelatedObjectType;}
            set
            {
                _RelatedObjectType = value;
                _flagRelatedObjectType = true;
            }
        }
        private string _RelatedObjectType;
        private bool _flagRelatedObjectType;

        /// <summary>
        /// Returns false as RelatedObjectType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectType()
        {
            return _flagRelatedObjectType;
        }
        /// <summary>
        /// Timestamp representing the date and time when the customer was referred in ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the customer was referred in ISO 8601 format.</value>
        /*
        <example>2022-08-30T10:19:39.196Z</example>
        */
        [DataMember(Name = "date", IsRequired = true, EmitDefaultValue = true)]
        public DateTimeOffset Date
        {
            get{ return _Date;}
            set
            {
                _Date = value;
                _flagDate = true;
            }
        }
        private DateTimeOffset _Date;
        private bool _flagDate;

        /// <summary>
        /// Returns false as Date should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDate()
        {
            return _flagDate;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerReferralsCampaignsItem {\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  ReferrerId: ").Append(ReferrerId).Append("\n");
            sb.Append("  RelatedObjectId: ").Append(RelatedObjectId).Append("\n");
            sb.Append("  RelatedObjectType: ").Append(RelatedObjectType).Append("\n");
            sb.Append("  Date: ").Append(Date).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
