/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// CampaignsTransactionsExportCreateResponseBodyParameters
    /// </summary>
    [DataContract(Name = "CampaignsTransactionsExportCreateResponseBodyParameters")]
    public partial class CampaignsTransactionsExportCreateResponseBodyParameters : IValidatableObject
    {
        /// <summary>
        /// How the export is ordered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
        /// </summary>
        /// <value>How the export is ordered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OrderEnum
        {
            /// <summary>
            /// Enum CreatedAt for value: -created_at
            /// </summary>
            [EnumMember(Value = "-created_at")]
            CreatedAt = 1,

            /// <summary>
            /// Enum CreatedAt2 for value: created_at
            /// </summary>
            [EnumMember(Value = "created_at")]
            CreatedAt2 = 2
        }


        /// <summary>
        /// How the export is ordered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
        /// </summary>
        /// <value>How the export is ordered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.</value>

        [DataMember(Name = "order", EmitDefaultValue = true)]
        public OrderEnum? Order
        {
            get{ return _Order;}
            set
            {
                _Order = value;
                _flagOrder = true;
            }
        }
        private OrderEnum? _Order;
        private bool _flagOrder;

        /// <summary>
        /// Returns false as Order should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrder()
        {
            return _flagOrder;
        }
        /// <summary>
        /// Defines Fields
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum FieldsEnum
        {
            /// <summary>
            /// Enum Id for value: id
            /// </summary>
            [EnumMember(Value = "id")]
            Id = 1,

            /// <summary>
            /// Enum Type for value: type
            /// </summary>
            [EnumMember(Value = "type")]
            Type = 2,

            /// <summary>
            /// Enum SourceId for value: source_id
            /// </summary>
            [EnumMember(Value = "source_id")]
            SourceId = 3,

            /// <summary>
            /// Enum Reason for value: reason
            /// </summary>
            [EnumMember(Value = "reason")]
            Reason = 4,

            /// <summary>
            /// Enum Balance for value: balance
            /// </summary>
            [EnumMember(Value = "balance")]
            Balance = 5,

            /// <summary>
            /// Enum Amount for value: amount
            /// </summary>
            [EnumMember(Value = "amount")]
            Amount = 6,

            /// <summary>
            /// Enum CreatedAt for value: created_at
            /// </summary>
            [EnumMember(Value = "created_at")]
            CreatedAt = 7,

            /// <summary>
            /// Enum VoucherId for value: voucher_id
            /// </summary>
            [EnumMember(Value = "voucher_id")]
            VoucherId = 8,

            /// <summary>
            /// Enum Source for value: source
            /// </summary>
            [EnumMember(Value = "source")]
            Source = 9,

            /// <summary>
            /// Enum Details for value: details
            /// </summary>
            [EnumMember(Value = "details")]
            Details = 10,

            /// <summary>
            /// Enum RelatedTransactionId for value: related_transaction_id
            /// </summary>
            [EnumMember(Value = "related_transaction_id")]
            RelatedTransactionId = 11
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CampaignsTransactionsExportCreateResponseBodyParameters" /> class.
        /// </summary>
        /// <param name="order">How the export is ordered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order..</param>
        /// <param name="fields">Data fields that will be exported for the transactions that are associated with balance movements on cards in a campaign..</param>
        /// <param name="filters">filters.</param>
        public CampaignsTransactionsExportCreateResponseBodyParameters(OrderEnum? order = default(OrderEnum?), List<FieldsEnum> fields = default(List<FieldsEnum>), CampaignsTransactionsExportCreateResponseBodyParametersFilters filters = default(CampaignsTransactionsExportCreateResponseBodyParametersFilters))
        {
            this._Order = order;
            if (this.Order != null)
            {
                this._flagOrder = true;
            }
            this._Fields = fields;
            if (this.Fields != null)
            {
                this._flagFields = true;
            }
            this._Filters = filters;
            if (this.Filters != null)
            {
                this._flagFilters = true;
            }
        }

        /// <summary>
        /// Data fields that will be exported for the transactions that are associated with balance movements on cards in a campaign.
        /// </summary>
        /// <value>Data fields that will be exported for the transactions that are associated with balance movements on cards in a campaign.</value>
        [DataMember(Name = "fields", EmitDefaultValue = true)]
        public List<CampaignsTransactionsExportCreateResponseBodyParameters.FieldsEnum> Fields
        {
            get{ return _Fields;}
            set
            {
                _Fields = value;
                _flagFields = true;
            }
        }
        private List<CampaignsTransactionsExportCreateResponseBodyParameters.FieldsEnum> _Fields;
        private bool _flagFields;

        /// <summary>
        /// Returns false as Fields should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeFields()
        {
            return _flagFields;
        }
        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name = "filters", EmitDefaultValue = true)]
        public CampaignsTransactionsExportCreateResponseBodyParametersFilters Filters
        {
            get{ return _Filters;}
            set
            {
                _Filters = value;
                _flagFilters = true;
            }
        }
        private CampaignsTransactionsExportCreateResponseBodyParametersFilters _Filters;
        private bool _flagFilters;

        /// <summary>
        /// Returns false as Filters should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeFilters()
        {
            return _flagFilters;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CampaignsTransactionsExportCreateResponseBodyParameters {\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("  Fields: ").Append(Fields).Append("\n");
            sb.Append("  Filters: ").Append(Filters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
