/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// ParameterFiltersListPublications
    /// </summary>
    [DataContract(Name = "ParameterFiltersListPublications")]
    public partial class ParameterFiltersListPublications : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Junction
        /// </summary>

        [DataMember(Name = "junction", EmitDefaultValue = true)]
        public Junction? Junction
        {
            get{ return _Junction;}
            set
            {
                _Junction = value;
                _flagJunction = true;
            }
        }
        private Junction? _Junction;
        private bool _flagJunction;

        /// <summary>
        /// Returns false as Junction should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeJunction()
        {
            return _flagJunction;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterFiltersListPublications" /> class.
        /// </summary>
        /// <param name="junction">junction.</param>
        /// <param name="failureCode">failureCode.</param>
        /// <param name="result">result.</param>
        /// <param name="customerId">customerId.</param>
        /// <param name="campaignName">campaignName.</param>
        /// <param name="voucherType">voucherType.</param>
        /// <param name="isReferralCode">isReferralCode.</param>
        /// <param name="parentObjectId">parentObjectId.</param>
        /// <param name="relatedObjectId">relatedObjectId.</param>
        /// <param name="sourceId">sourceId.</param>
        public ParameterFiltersListPublications(Junction? junction = default(Junction?), ParameterFiltersListPublicationsFailureCode failureCode = default(ParameterFiltersListPublicationsFailureCode), ParameterFiltersListPublicationsResult result = default(ParameterFiltersListPublicationsResult), ParameterFiltersListPublicationsCustomerId customerId = default(ParameterFiltersListPublicationsCustomerId), ParameterFiltersListPublicationsCampaignName campaignName = default(ParameterFiltersListPublicationsCampaignName), ParameterFiltersListPublicationsVoucherType voucherType = default(ParameterFiltersListPublicationsVoucherType), ParameterFiltersListPublicationsIsReferralCode isReferralCode = default(ParameterFiltersListPublicationsIsReferralCode), ParameterFiltersListPublicationsParentObjectId parentObjectId = default(ParameterFiltersListPublicationsParentObjectId), ParameterFiltersListPublicationsRelatedObjectId relatedObjectId = default(ParameterFiltersListPublicationsRelatedObjectId), ParameterFiltersListPublicationsSourceId sourceId = default(ParameterFiltersListPublicationsSourceId))
        {
            this._Junction = junction;
            if (this.Junction != null)
            {
                this._flagJunction = true;
            }
            this._FailureCode = failureCode;
            if (this.FailureCode != null)
            {
                this._flagFailureCode = true;
            }
            this._Result = result;
            if (this.Result != null)
            {
                this._flagResult = true;
            }
            this._CustomerId = customerId;
            if (this.CustomerId != null)
            {
                this._flagCustomerId = true;
            }
            this._CampaignName = campaignName;
            if (this.CampaignName != null)
            {
                this._flagCampaignName = true;
            }
            this._VoucherType = voucherType;
            if (this.VoucherType != null)
            {
                this._flagVoucherType = true;
            }
            this._IsReferralCode = isReferralCode;
            if (this.IsReferralCode != null)
            {
                this._flagIsReferralCode = true;
            }
            this._ParentObjectId = parentObjectId;
            if (this.ParentObjectId != null)
            {
                this._flagParentObjectId = true;
            }
            this._RelatedObjectId = relatedObjectId;
            if (this.RelatedObjectId != null)
            {
                this._flagRelatedObjectId = true;
            }
            this._SourceId = sourceId;
            if (this.SourceId != null)
            {
                this._flagSourceId = true;
            }
        }

        /// <summary>
        /// Gets or Sets FailureCode
        /// </summary>
        [DataMember(Name = "failure_code", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsFailureCode FailureCode
        {
            get{ return _FailureCode;}
            set
            {
                _FailureCode = value;
                _flagFailureCode = true;
            }
        }
        private ParameterFiltersListPublicationsFailureCode _FailureCode;
        private bool _flagFailureCode;

        /// <summary>
        /// Returns false as FailureCode should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeFailureCode()
        {
            return _flagFailureCode;
        }
        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name = "result", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsResult Result
        {
            get{ return _Result;}
            set
            {
                _Result = value;
                _flagResult = true;
            }
        }
        private ParameterFiltersListPublicationsResult _Result;
        private bool _flagResult;

        /// <summary>
        /// Returns false as Result should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResult()
        {
            return _flagResult;
        }
        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name = "customer_id", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsCustomerId CustomerId
        {
            get{ return _CustomerId;}
            set
            {
                _CustomerId = value;
                _flagCustomerId = true;
            }
        }
        private ParameterFiltersListPublicationsCustomerId _CustomerId;
        private bool _flagCustomerId;

        /// <summary>
        /// Returns false as CustomerId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCustomerId()
        {
            return _flagCustomerId;
        }
        /// <summary>
        /// Gets or Sets CampaignName
        /// </summary>
        [DataMember(Name = "campaign_name", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsCampaignName CampaignName
        {
            get{ return _CampaignName;}
            set
            {
                _CampaignName = value;
                _flagCampaignName = true;
            }
        }
        private ParameterFiltersListPublicationsCampaignName _CampaignName;
        private bool _flagCampaignName;

        /// <summary>
        /// Returns false as CampaignName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignName()
        {
            return _flagCampaignName;
        }
        /// <summary>
        /// Gets or Sets VoucherType
        /// </summary>
        [DataMember(Name = "voucher_type", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsVoucherType VoucherType
        {
            get{ return _VoucherType;}
            set
            {
                _VoucherType = value;
                _flagVoucherType = true;
            }
        }
        private ParameterFiltersListPublicationsVoucherType _VoucherType;
        private bool _flagVoucherType;

        /// <summary>
        /// Returns false as VoucherType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeVoucherType()
        {
            return _flagVoucherType;
        }
        /// <summary>
        /// Gets or Sets IsReferralCode
        /// </summary>
        [DataMember(Name = "is_referral_code", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsIsReferralCode IsReferralCode
        {
            get{ return _IsReferralCode;}
            set
            {
                _IsReferralCode = value;
                _flagIsReferralCode = true;
            }
        }
        private ParameterFiltersListPublicationsIsReferralCode _IsReferralCode;
        private bool _flagIsReferralCode;

        /// <summary>
        /// Returns false as IsReferralCode should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIsReferralCode()
        {
            return _flagIsReferralCode;
        }
        /// <summary>
        /// Gets or Sets ParentObjectId
        /// </summary>
        [DataMember(Name = "parent_object_id", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsParentObjectId ParentObjectId
        {
            get{ return _ParentObjectId;}
            set
            {
                _ParentObjectId = value;
                _flagParentObjectId = true;
            }
        }
        private ParameterFiltersListPublicationsParentObjectId _ParentObjectId;
        private bool _flagParentObjectId;

        /// <summary>
        /// Returns false as ParentObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeParentObjectId()
        {
            return _flagParentObjectId;
        }
        /// <summary>
        /// Gets or Sets RelatedObjectId
        /// </summary>
        [DataMember(Name = "related_object_id", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsRelatedObjectId RelatedObjectId
        {
            get{ return _RelatedObjectId;}
            set
            {
                _RelatedObjectId = value;
                _flagRelatedObjectId = true;
            }
        }
        private ParameterFiltersListPublicationsRelatedObjectId _RelatedObjectId;
        private bool _flagRelatedObjectId;

        /// <summary>
        /// Returns false as RelatedObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectId()
        {
            return _flagRelatedObjectId;
        }
        /// <summary>
        /// Gets or Sets SourceId
        /// </summary>
        [DataMember(Name = "source_id", EmitDefaultValue = true)]
        public ParameterFiltersListPublicationsSourceId SourceId
        {
            get{ return _SourceId;}
            set
            {
                _SourceId = value;
                _flagSourceId = true;
            }
        }
        private ParameterFiltersListPublicationsSourceId _SourceId;
        private bool _flagSourceId;

        /// <summary>
        /// Returns false as SourceId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeSourceId()
        {
            return _flagSourceId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ParameterFiltersListPublications {\n");
            sb.Append("  Junction: ").Append(Junction).Append("\n");
            sb.Append("  FailureCode: ").Append(FailureCode).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  CampaignName: ").Append(CampaignName).Append("\n");
            sb.Append("  VoucherType: ").Append(VoucherType).Append("\n");
            sb.Append("  IsReferralCode: ").Append(IsReferralCode).Append("\n");
            sb.Append("  ParentObjectId: ").Append(ParentObjectId).Append("\n");
            sb.Append("  RelatedObjectId: ").Append(RelatedObjectId).Append("\n");
            sb.Append("  SourceId: ").Append(SourceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
