/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Data conditions used to narrow down the data records to be returned in the result.
    /// </summary>
    [DataContract(Name = "ParameterFiltersListCampaignsValidityDayOfWeekConditions")]
    public partial class ParameterFiltersListCampaignsValidityDayOfWeekConditions : IValidatableObject
    {
        /// <summary>
        /// Defines Is
        /// </summary>
        public enum IsEnum
        {
            /// <summary>
            /// Enum NUMBER_0 for value: 0
            /// </summary>
            NUMBER_0 = 0,

            /// <summary>
            /// Enum NUMBER_1 for value: 1
            /// </summary>
            NUMBER_1 = 1,

            /// <summary>
            /// Enum NUMBER_2 for value: 2
            /// </summary>
            NUMBER_2 = 2,

            /// <summary>
            /// Enum NUMBER_3 for value: 3
            /// </summary>
            NUMBER_3 = 3,

            /// <summary>
            /// Enum NUMBER_4 for value: 4
            /// </summary>
            NUMBER_4 = 4,

            /// <summary>
            /// Enum NUMBER_5 for value: 5
            /// </summary>
            NUMBER_5 = 5,

            /// <summary>
            /// Enum NUMBER_6 for value: 6
            /// </summary>
            NUMBER_6 = 6
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterFiltersListCampaignsValidityDayOfWeekConditions" /> class.
        /// </summary>
        /// <param name="varIs">Array of resource values that should be included in the results (multiple values)..</param>
        public ParameterFiltersListCampaignsValidityDayOfWeekConditions(List<IsEnum> varIs = default(List<IsEnum>))
        {
            this._Is = varIs;
            if (this.Is != null)
            {
                this._flagIs = true;
            }
        }

        /// <summary>
        /// Array of resource values that should be included in the results (multiple values).
        /// </summary>
        /// <value>Array of resource values that should be included in the results (multiple values).</value>
        [DataMember(Name = "$is", EmitDefaultValue = true)]
        public List<ParameterFiltersListCampaignsValidityDayOfWeekConditions.IsEnum> Is
        {
            get{ return _Is;}
            set
            {
                _Is = value;
                _flagIs = true;
            }
        }
        private List<ParameterFiltersListCampaignsValidityDayOfWeekConditions.IsEnum> _Is;
        private bool _flagIs;

        /// <summary>
        /// Returns false as Is should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIs()
        {
            return _flagIs;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ParameterFiltersListCampaignsValidityDayOfWeekConditions {\n");
            sb.Append("  Is: ").Append(Is).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
