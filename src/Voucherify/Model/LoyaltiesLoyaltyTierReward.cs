/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// This is an object representing a loyalty tier reward.
    /// </summary>
    [DataContract(Name = "LoyaltiesLoyaltyTierReward")]
    public partial class LoyaltiesLoyaltyTierReward : IValidatableObject
    {
        /// <summary>
        /// The type of the object represented by JSON. This object stores information about the loyalty tier reward.
        /// </summary>
        /// <value>The type of the object represented by JSON. This object stores information about the loyalty tier reward.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum LoyaltyTierReward for value: loyalty_tier_reward
            /// </summary>
            [EnumMember(Value = "loyalty_tier_reward")]
            LoyaltyTierReward = 1
        }


        /// <summary>
        /// The type of the object represented by JSON. This object stores information about the loyalty tier reward.
        /// </summary>
        /// <value>The type of the object represented by JSON. This object stores information about the loyalty tier reward.</value>

        [DataMember(Name = "object", IsRequired = true, EmitDefaultValue = true)]
        public ObjectEnum Object
        {
            get{ return _Object;}
            set
            {
                _Object = value;
                _flagObject = true;
            }
        }
        private ObjectEnum _Object;
        private bool _flagObject;

        /// <summary>
        /// Returns false as Object should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObject()
        {
            return _flagObject;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="LoyaltiesLoyaltyTierReward" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LoyaltiesLoyaltyTierReward() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LoyaltiesLoyaltyTierReward" /> class.
        /// </summary>
        /// <param name="reward">reward (required).</param>
        /// <param name="assignment">assignment (required).</param>
        /// <param name="varObject">The type of the object represented by JSON. This object stores information about the loyalty tier reward. (required) (default to ObjectEnum.LoyaltyTierReward).</param>
        public LoyaltiesLoyaltyTierReward(Reward reward = default(Reward), RewardAssignment assignment = default(RewardAssignment), ObjectEnum varObject = ObjectEnum.LoyaltyTierReward)
        {
            // to ensure "reward" is required (not null)
            if (reward == null)
            {
                throw new ArgumentNullException("reward is a required property for LoyaltiesLoyaltyTierReward and cannot be null");
            }
            this._Reward = reward;
            // to ensure "assignment" is required (not null)
            if (assignment == null)
            {
                throw new ArgumentNullException("assignment is a required property for LoyaltiesLoyaltyTierReward and cannot be null");
            }
            this._Assignment = assignment;
            this._Object = varObject;
        }

        /// <summary>
        /// Gets or Sets Reward
        /// </summary>
        [DataMember(Name = "reward", IsRequired = true, EmitDefaultValue = true)]
        public Reward Reward
        {
            get{ return _Reward;}
            set
            {
                _Reward = value;
                _flagReward = true;
            }
        }
        private Reward _Reward;
        private bool _flagReward;

        /// <summary>
        /// Returns false as Reward should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeReward()
        {
            return _flagReward;
        }
        /// <summary>
        /// Gets or Sets Assignment
        /// </summary>
        [DataMember(Name = "assignment", IsRequired = true, EmitDefaultValue = true)]
        public RewardAssignment Assignment
        {
            get{ return _Assignment;}
            set
            {
                _Assignment = value;
                _flagAssignment = true;
            }
        }
        private RewardAssignment _Assignment;
        private bool _flagAssignment;

        /// <summary>
        /// Returns false as Assignment should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAssignment()
        {
            return _flagAssignment;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LoyaltiesLoyaltyTierReward {\n");
            sb.Append("  Reward: ").Append(Reward).Append("\n");
            sb.Append("  Assignment: ").Append(Assignment).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
