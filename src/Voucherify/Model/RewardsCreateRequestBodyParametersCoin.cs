/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Define the ratio by mapping the number of loyalty points in &#x60;points_ratio&#x60; to a predefined cash amount in &#x60;exchange_ratio&#x60;.
    /// </summary>
    [DataContract(Name = "RewardsCreateRequestBodyParametersCoin")]
    public partial class RewardsCreateRequestBodyParametersCoin : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RewardsCreateRequestBodyParametersCoin" /> class.
        /// </summary>
        /// <param name="exchangeRatio">The cash equivalent of the points defined in the &#x60;points_ratio&#x60; property..</param>
        /// <param name="pointsRatio">The number of loyalty points that will map to the predefined cash amount defined by the &#x60;exchange_ratio&#x60; property..</param>
        public RewardsCreateRequestBodyParametersCoin(string exchangeRatio = default(string), string pointsRatio = default(string))
        {
            this._ExchangeRatio = exchangeRatio;
            if (this.ExchangeRatio != null)
            {
                this._flagExchangeRatio = true;
            }
            this._PointsRatio = pointsRatio;
            if (this.PointsRatio != null)
            {
                this._flagPointsRatio = true;
            }
        }

        /// <summary>
        /// The cash equivalent of the points defined in the &#x60;points_ratio&#x60; property.
        /// </summary>
        /// <value>The cash equivalent of the points defined in the &#x60;points_ratio&#x60; property.</value>
        [DataMember(Name = "exchange_ratio", EmitDefaultValue = true)]
        public string ExchangeRatio
        {
            get{ return _ExchangeRatio;}
            set
            {
                _ExchangeRatio = value;
                _flagExchangeRatio = true;
            }
        }
        private string _ExchangeRatio;
        private bool _flagExchangeRatio;

        /// <summary>
        /// Returns false as ExchangeRatio should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeExchangeRatio()
        {
            return _flagExchangeRatio;
        }
        /// <summary>
        /// The number of loyalty points that will map to the predefined cash amount defined by the &#x60;exchange_ratio&#x60; property.
        /// </summary>
        /// <value>The number of loyalty points that will map to the predefined cash amount defined by the &#x60;exchange_ratio&#x60; property.</value>
        [DataMember(Name = "points_ratio", EmitDefaultValue = true)]
        public string PointsRatio
        {
            get{ return _PointsRatio;}
            set
            {
                _PointsRatio = value;
                _flagPointsRatio = true;
            }
        }
        private string _PointsRatio;
        private bool _flagPointsRatio;

        /// <summary>
        /// Returns false as PointsRatio should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializePointsRatio()
        {
            return _flagPointsRatio;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RewardsCreateRequestBodyParametersCoin {\n");
            sb.Append("  ExchangeRatio: ").Append(ExchangeRatio).Append("\n");
            sb.Append("  PointsRatio: ").Append(PointsRatio).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
