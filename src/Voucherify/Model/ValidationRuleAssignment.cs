/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// This is an object representing a validation rule assignment.
    /// </summary>
    [DataContract(Name = "ValidationRuleAssignment")]
    public partial class ValidationRuleAssignment : IValidatableObject
    {
        /// <summary>
        /// The type of resource to which the validation rule was assigned.
        /// </summary>
        /// <value>The type of resource to which the validation rule was assigned.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum RelatedObjectTypeEnum
        {
            /// <summary>
            /// Enum Voucher for value: voucher
            /// </summary>
            [EnumMember(Value = "voucher")]
            Voucher = 1,

            /// <summary>
            /// Enum Campaign for value: campaign
            /// </summary>
            [EnumMember(Value = "campaign")]
            Campaign = 2,

            /// <summary>
            /// Enum EarningRule for value: earning_rule
            /// </summary>
            [EnumMember(Value = "earning_rule")]
            EarningRule = 3,

            /// <summary>
            /// Enum RewardAssignment for value: reward_assignment
            /// </summary>
            [EnumMember(Value = "reward_assignment")]
            RewardAssignment = 4,

            /// <summary>
            /// Enum PromotionTier for value: promotion_tier
            /// </summary>
            [EnumMember(Value = "promotion_tier")]
            PromotionTier = 5,

            /// <summary>
            /// Enum Distribution for value: distribution
            /// </summary>
            [EnumMember(Value = "distribution")]
            Distribution = 6
        }


        /// <summary>
        /// The type of resource to which the validation rule was assigned.
        /// </summary>
        /// <value>The type of resource to which the validation rule was assigned.</value>

        [DataMember(Name = "related_object_type", EmitDefaultValue = true)]
        public RelatedObjectTypeEnum? RelatedObjectType
        {
            get{ return _RelatedObjectType;}
            set
            {
                _RelatedObjectType = value;
                _flagRelatedObjectType = true;
            }
        }
        private RelatedObjectTypeEnum? _RelatedObjectType;
        private bool _flagRelatedObjectType;

        /// <summary>
        /// Returns false as RelatedObjectType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectType()
        {
            return _flagRelatedObjectType;
        }
        /// <summary>
        /// The type of the object represented by the ID.
        /// </summary>
        /// <value>The type of the object represented by the ID.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum ValidationRulesAssignment for value: validation_rules_assignment
            /// </summary>
            [EnumMember(Value = "validation_rules_assignment")]
            ValidationRulesAssignment = 1
        }


        /// <summary>
        /// The type of the object represented by the ID.
        /// </summary>
        /// <value>The type of the object represented by the ID.</value>

        [DataMember(Name = "object", EmitDefaultValue = true)]
        public ObjectEnum? Object
        {
            get{ return _Object;}
            set
            {
                _Object = value;
                _flagObject = true;
            }
        }
        private ObjectEnum? _Object;
        private bool _flagObject;

        /// <summary>
        /// Returns false as Object should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObject()
        {
            return _flagObject;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidationRuleAssignment" /> class.
        /// </summary>
        /// <param name="id">Validation rule assignment ID..</param>
        /// <param name="ruleId">Validation rule ID..</param>
        /// <param name="relatedObjectId">The resource ID to which the validation rule was assigned..</param>
        /// <param name="relatedObjectType">The type of resource to which the validation rule was assigned..</param>
        /// <param name="createdAt">Timestamp representing the date and time when the validation rule assignment was created. The value is shown in the ISO 8601 format..</param>
        /// <param name="varObject">The type of the object represented by the ID. (default to ObjectEnum.ValidationRulesAssignment).</param>
        public ValidationRuleAssignment(string id = default(string), string ruleId = default(string), string relatedObjectId = default(string), RelatedObjectTypeEnum? relatedObjectType = default(RelatedObjectTypeEnum?), DateTimeOffset? createdAt = default(DateTimeOffset?), ObjectEnum? varObject = ObjectEnum.ValidationRulesAssignment)
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._RuleId = ruleId;
            if (this.RuleId != null)
            {
                this._flagRuleId = true;
            }
            this._RelatedObjectId = relatedObjectId;
            if (this.RelatedObjectId != null)
            {
                this._flagRelatedObjectId = true;
            }
            this._RelatedObjectType = relatedObjectType;
            if (this.RelatedObjectType != null)
            {
                this._flagRelatedObjectType = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
        }

        /// <summary>
        /// Validation rule assignment ID.
        /// </summary>
        /// <value>Validation rule assignment ID.</value>
        /*
        <example>asgm_74F7QZoYbUoljwQO</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Validation rule ID.
        /// </summary>
        /// <value>Validation rule ID.</value>
        /*
        <example>val_4j7DCRm2IS59</example>
        */
        [DataMember(Name = "rule_id", EmitDefaultValue = true)]
        public string RuleId
        {
            get{ return _RuleId;}
            set
            {
                _RuleId = value;
                _flagRuleId = true;
            }
        }
        private string _RuleId;
        private bool _flagRuleId;

        /// <summary>
        /// Returns false as RuleId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRuleId()
        {
            return _flagRuleId;
        }
        /// <summary>
        /// The resource ID to which the validation rule was assigned.
        /// </summary>
        /// <value>The resource ID to which the validation rule was assigned.</value>
        /*
        <example>v_JtWunK6jUo7X2qOFj0SyRHq4p9tgENlT</example>
        */
        [DataMember(Name = "related_object_id", EmitDefaultValue = true)]
        public string RelatedObjectId
        {
            get{ return _RelatedObjectId;}
            set
            {
                _RelatedObjectId = value;
                _flagRelatedObjectId = true;
            }
        }
        private string _RelatedObjectId;
        private bool _flagRelatedObjectId;

        /// <summary>
        /// Returns false as RelatedObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectId()
        {
            return _flagRelatedObjectId;
        }
        /// <summary>
        /// Timestamp representing the date and time when the validation rule assignment was created. The value is shown in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the validation rule assignment was created. The value is shown in the ISO 8601 format.</value>
        /*
        <example>2022-02-17T08:18:15.085Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public DateTimeOffset? CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private DateTimeOffset? _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ValidationRuleAssignment {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  RuleId: ").Append(RuleId).Append("\n");
            sb.Append("  RelatedObjectId: ").Append(RelatedObjectId).Append("\n");
            sb.Append("  RelatedObjectType: ").Append(RelatedObjectType).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
