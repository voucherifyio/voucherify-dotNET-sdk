/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Error details
    /// </summary>
    [DataContract(Name = "Error")]
    public partial class Error : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Error" /> class.
        /// </summary>
        /// <param name="code">Error&#39;s HTTP status code..</param>
        /// <param name="key">Short string describing the kind of error which occurred..</param>
        /// <param name="message">A human-readable message providing a short description of the error..</param>
        /// <param name="details">A human-readable message providing more details about the error..</param>
        /// <param name="requestId">This ID is useful when troubleshooting and/or finding the root cause of an error response by our support team..</param>
        /// <param name="resourceId">Unique resource ID that can be used in another endpoint to get more details..</param>
        /// <param name="resourceType">The resource type..</param>
        /// <param name="varError">varError.</param>
        public Error(int? code = default(int?), string key = default(string), string message = default(string), string details = default(string), string requestId = default(string), string resourceId = default(string), string resourceType = default(string), ErrorError varError = default(ErrorError))
        {
            this._Code = code;
            if (this.Code != null)
            {
                this._flagCode = true;
            }
            this._Key = key;
            if (this.Key != null)
            {
                this._flagKey = true;
            }
            this._Message = message;
            if (this.Message != null)
            {
                this._flagMessage = true;
            }
            this._Details = details;
            if (this.Details != null)
            {
                this._flagDetails = true;
            }
            this._RequestId = requestId;
            if (this.RequestId != null)
            {
                this._flagRequestId = true;
            }
            this._ResourceId = resourceId;
            if (this.ResourceId != null)
            {
                this._flagResourceId = true;
            }
            this._ResourceType = resourceType;
            if (this.ResourceType != null)
            {
                this._flagResourceType = true;
            }
            this._VarError = varError;
            if (this.VarError != null)
            {
                this._flagVarError = true;
            }
        }

        /// <summary>
        /// Error&#39;s HTTP status code.
        /// </summary>
        /// <value>Error&#39;s HTTP status code.</value>
        [DataMember(Name = "code", EmitDefaultValue = true)]
        public int? Code
        {
            get{ return _Code;}
            set
            {
                _Code = value;
                _flagCode = true;
            }
        }
        private int? _Code;
        private bool _flagCode;

        /// <summary>
        /// Returns false as Code should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCode()
        {
            return _flagCode;
        }
        /// <summary>
        /// Short string describing the kind of error which occurred.
        /// </summary>
        /// <value>Short string describing the kind of error which occurred.</value>
        [DataMember(Name = "key", EmitDefaultValue = true)]
        public string Key
        {
            get{ return _Key;}
            set
            {
                _Key = value;
                _flagKey = true;
            }
        }
        private string _Key;
        private bool _flagKey;

        /// <summary>
        /// Returns false as Key should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeKey()
        {
            return _flagKey;
        }
        /// <summary>
        /// A human-readable message providing a short description of the error.
        /// </summary>
        /// <value>A human-readable message providing a short description of the error.</value>
        [DataMember(Name = "message", EmitDefaultValue = true)]
        public string Message
        {
            get{ return _Message;}
            set
            {
                _Message = value;
                _flagMessage = true;
            }
        }
        private string _Message;
        private bool _flagMessage;

        /// <summary>
        /// Returns false as Message should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeMessage()
        {
            return _flagMessage;
        }
        /// <summary>
        /// A human-readable message providing more details about the error.
        /// </summary>
        /// <value>A human-readable message providing more details about the error.</value>
        [DataMember(Name = "details", EmitDefaultValue = true)]
        public string Details
        {
            get{ return _Details;}
            set
            {
                _Details = value;
                _flagDetails = true;
            }
        }
        private string _Details;
        private bool _flagDetails;

        /// <summary>
        /// Returns false as Details should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDetails()
        {
            return _flagDetails;
        }
        /// <summary>
        /// This ID is useful when troubleshooting and/or finding the root cause of an error response by our support team.
        /// </summary>
        /// <value>This ID is useful when troubleshooting and/or finding the root cause of an error response by our support team.</value>
        /*
        <example>v-0a885062c80375740f</example>
        */
        [DataMember(Name = "request_id", EmitDefaultValue = true)]
        public string RequestId
        {
            get{ return _RequestId;}
            set
            {
                _RequestId = value;
                _flagRequestId = true;
            }
        }
        private string _RequestId;
        private bool _flagRequestId;

        /// <summary>
        /// Returns false as RequestId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRequestId()
        {
            return _flagRequestId;
        }
        /// <summary>
        /// Unique resource ID that can be used in another endpoint to get more details.
        /// </summary>
        /// <value>Unique resource ID that can be used in another endpoint to get more details.</value>
        /*
        <example>rf_0c5d710a87c8a31f86</example>
        */
        [DataMember(Name = "resource_id", EmitDefaultValue = true)]
        public string ResourceId
        {
            get{ return _ResourceId;}
            set
            {
                _ResourceId = value;
                _flagResourceId = true;
            }
        }
        private string _ResourceId;
        private bool _flagResourceId;

        /// <summary>
        /// Returns false as ResourceId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceId()
        {
            return _flagResourceId;
        }
        /// <summary>
        /// The resource type.
        /// </summary>
        /// <value>The resource type.</value>
        /*
        <example>voucher</example>
        */
        [DataMember(Name = "resource_type", EmitDefaultValue = true)]
        public string ResourceType
        {
            get{ return _ResourceType;}
            set
            {
                _ResourceType = value;
                _flagResourceType = true;
            }
        }
        private string _ResourceType;
        private bool _flagResourceType;

        /// <summary>
        /// Returns false as ResourceType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceType()
        {
            return _flagResourceType;
        }
        /// <summary>
        /// Gets or Sets VarError
        /// </summary>
        [DataMember(Name = "error", EmitDefaultValue = true)]
        public ErrorError VarError
        {
            get{ return _VarError;}
            set
            {
                _VarError = value;
                _flagVarError = true;
            }
        }
        private ErrorError _VarError;
        private bool _flagVarError;

        /// <summary>
        /// Returns false as VarError should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeVarError()
        {
            return _flagVarError;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Error {\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Key: ").Append(Key).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Details: ").Append(Details).Append("\n");
            sb.Append("  RequestId: ").Append(RequestId).Append("\n");
            sb.Append("  ResourceId: ").Append(ResourceId).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  VarError: ").Append(VarError).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
