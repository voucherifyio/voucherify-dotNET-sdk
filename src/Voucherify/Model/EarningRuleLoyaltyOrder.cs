/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// EarningRuleLoyaltyOrder
    /// </summary>
    [DataContract(Name = "EarningRuleLoyaltyOrder")]
    public partial class EarningRuleLoyaltyOrder : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EarningRuleLoyaltyOrder" /> class.
        /// </summary>
        /// <param name="amount">amount.</param>
        /// <param name="totalAmount">totalAmount.</param>
        /// <param name="metadata">metadata.</param>
        public EarningRuleLoyaltyOrder(EarningRuleLoyaltyOrderAmount amount = default(EarningRuleLoyaltyOrderAmount), EarningRuleLoyaltyOrderTotalAmount totalAmount = default(EarningRuleLoyaltyOrderTotalAmount), EarningRuleLoyaltyOrderMetadata metadata = default(EarningRuleLoyaltyOrderMetadata))
        {
            this._Amount = amount;
            if (this.Amount != null)
            {
                this._flagAmount = true;
            }
            this._TotalAmount = totalAmount;
            if (this.TotalAmount != null)
            {
                this._flagTotalAmount = true;
            }
            this._Metadata = metadata;
            if (this.Metadata != null)
            {
                this._flagMetadata = true;
            }
        }

        /// <summary>
        /// Gets or Sets Amount
        /// </summary>
        [DataMember(Name = "amount", EmitDefaultValue = true)]
        public EarningRuleLoyaltyOrderAmount Amount
        {
            get{ return _Amount;}
            set
            {
                _Amount = value;
                _flagAmount = true;
            }
        }
        private EarningRuleLoyaltyOrderAmount _Amount;
        private bool _flagAmount;

        /// <summary>
        /// Returns false as Amount should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAmount()
        {
            return _flagAmount;
        }
        /// <summary>
        /// Gets or Sets TotalAmount
        /// </summary>
        [DataMember(Name = "total_amount", EmitDefaultValue = true)]
        public EarningRuleLoyaltyOrderTotalAmount TotalAmount
        {
            get{ return _TotalAmount;}
            set
            {
                _TotalAmount = value;
                _flagTotalAmount = true;
            }
        }
        private EarningRuleLoyaltyOrderTotalAmount _TotalAmount;
        private bool _flagTotalAmount;

        /// <summary>
        /// Returns false as TotalAmount should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTotalAmount()
        {
            return _flagTotalAmount;
        }
        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name = "metadata", EmitDefaultValue = true)]
        public EarningRuleLoyaltyOrderMetadata Metadata
        {
            get{ return _Metadata;}
            set
            {
                _Metadata = value;
                _flagMetadata = true;
            }
        }
        private EarningRuleLoyaltyOrderMetadata _Metadata;
        private bool _flagMetadata;

        /// <summary>
        /// Returns false as Metadata should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeMetadata()
        {
            return _flagMetadata;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EarningRuleLoyaltyOrder {\n");
            sb.Append("  Amount: ").Append(Amount).Append("\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
