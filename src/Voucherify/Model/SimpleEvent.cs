/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Simplified event data.
    /// </summary>
    [DataContract(Name = "SimpleEvent")]
    public partial class SimpleEvent : IValidatableObject
    {
        /// <summary>
        /// Type of the event.
        /// </summary>
        /// <value>Type of the event.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CategoryEnum
        {
            /// <summary>
            /// Enum EFFECT for value: EFFECT
            /// </summary>
            [EnumMember(Value = "EFFECT")]
            EFFECT = 1,

            /// <summary>
            /// Enum ACTION for value: ACTION
            /// </summary>
            [EnumMember(Value = "ACTION")]
            ACTION = 2
        }


        /// <summary>
        /// Type of the event.
        /// </summary>
        /// <value>Type of the event.</value>

        [DataMember(Name = "category", EmitDefaultValue = true)]
        public CategoryEnum? Category
        {
            get{ return _Category;}
            set
            {
                _Category = value;
                _flagCategory = true;
            }
        }
        private CategoryEnum? _Category;
        private bool _flagCategory;

        /// <summary>
        /// Returns false as Category should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCategory()
        {
            return _flagCategory;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="SimpleEvent" /> class.
        /// </summary>
        /// <param name="id">Unique identifier assigned by Voucherify that will be linked to the this event..</param>
        /// <param name="type">Type of the triggering event..</param>
        /// <param name="category">Type of the event..</param>
        /// <param name="entityId">ID of the entity that initiated the event..</param>
        /// <param name="createdAt">Timestamp representing the date and time when the event was created in the ISO 8601 format..</param>
        /// <param name="groupId">Unique identifier of the request that triggered the event..</param>
        public SimpleEvent(string id = default(string), string type = default(string), CategoryEnum? category = default(CategoryEnum?), string entityId = default(string), DateTimeOffset? createdAt = default(DateTimeOffset?), string groupId = default(string))
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._Type = type;
            if (this.Type != null)
            {
                this._flagType = true;
            }
            this._Category = category;
            if (this.Category != null)
            {
                this._flagCategory = true;
            }
            this._EntityId = entityId;
            if (this.EntityId != null)
            {
                this._flagEntityId = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
            this._GroupId = groupId;
            if (this.GroupId != null)
            {
                this._flagGroupId = true;
            }
        }

        /// <summary>
        /// Unique identifier assigned by Voucherify that will be linked to the this event.
        /// </summary>
        /// <value>Unique identifier assigned by Voucherify that will be linked to the this event.</value>
        /*
        <example>evcus_0e3070fef399b70b00</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Type of the triggering event.
        /// </summary>
        /// <value>Type of the triggering event.</value>
        /*
        <example>customer.order.paid</example>
        */
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type
        {
            get{ return _Type;}
            set
            {
                _Type = value;
                _flagType = true;
            }
        }
        private string _Type;
        private bool _flagType;

        /// <summary>
        /// Returns false as Type should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeType()
        {
            return _flagType;
        }
        /// <summary>
        /// ID of the entity that initiated the event.
        /// </summary>
        /// <value>ID of the entity that initiated the event.</value>
        /*
        <example>cust_ADqZIwGvWFvugWXVbrHwXRHO</example>
        */
        [DataMember(Name = "entity_id", EmitDefaultValue = true)]
        public string EntityId
        {
            get{ return _EntityId;}
            set
            {
                _EntityId = value;
                _flagEntityId = true;
            }
        }
        private string _EntityId;
        private bool _flagEntityId;

        /// <summary>
        /// Returns false as EntityId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEntityId()
        {
            return _flagEntityId;
        }
        /// <summary>
        /// Timestamp representing the date and time when the event was created in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the event was created in the ISO 8601 format.</value>
        /*
        <example>2024-01-01T11:11:11.111Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public DateTimeOffset? CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private DateTimeOffset? _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Unique identifier of the request that triggered the event.
        /// </summary>
        /// <value>Unique identifier of the request that triggered the event.</value>
        /*
        <example>v-1f36113948e50fc4ge</example>
        */
        [DataMember(Name = "group_id", EmitDefaultValue = true)]
        public string GroupId
        {
            get{ return _GroupId;}
            set
            {
                _GroupId = value;
                _flagGroupId = true;
            }
        }
        private string _GroupId;
        private bool _flagGroupId;

        /// <summary>
        /// Returns false as GroupId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeGroupId()
        {
            return _flagGroupId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SimpleEvent {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Category: ").Append(Category).Append("\n");
            sb.Append("  EntityId: ").Append(EntityId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  GroupId: ").Append(GroupId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
