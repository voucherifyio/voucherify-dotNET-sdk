/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Details about how the pending points were earned.
    /// </summary>
    [DataContract(Name = "LoyaltyPendingPointsDetails")]
    public partial class LoyaltyPendingPointsDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LoyaltyPendingPointsDetails" /> class.
        /// </summary>
        /// <param name="loyaltyTier">loyaltyTier.</param>
        /// <param name="holderLoyaltyTier">holderLoyaltyTier.</param>
        /// <param name="varEvent">varEvent.</param>
        /// <param name="earningRule">earningRule.</param>
        /// <param name="order">order.</param>
        public LoyaltyPendingPointsDetails(LoyaltyPendingPointsDetailsLoyaltyTier loyaltyTier = default(LoyaltyPendingPointsDetailsLoyaltyTier), LoyaltyPendingPointsDetailsHolderLoyaltyTier holderLoyaltyTier = default(LoyaltyPendingPointsDetailsHolderLoyaltyTier), LoyaltyPendingPointsDetailsEvent varEvent = default(LoyaltyPendingPointsDetailsEvent), LoyaltyPendingPointsDetailsEarningRule earningRule = default(LoyaltyPendingPointsDetailsEarningRule), LoyaltyPendingPointsDetailsOrder order = default(LoyaltyPendingPointsDetailsOrder))
        {
            this._LoyaltyTier = loyaltyTier;
            if (this.LoyaltyTier != null)
            {
                this._flagLoyaltyTier = true;
            }
            this._HolderLoyaltyTier = holderLoyaltyTier;
            if (this.HolderLoyaltyTier != null)
            {
                this._flagHolderLoyaltyTier = true;
            }
            this._Event = varEvent;
            if (this.Event != null)
            {
                this._flagEvent = true;
            }
            this._EarningRule = earningRule;
            if (this.EarningRule != null)
            {
                this._flagEarningRule = true;
            }
            this._Order = order;
            if (this.Order != null)
            {
                this._flagOrder = true;
            }
        }

        /// <summary>
        /// Gets or Sets LoyaltyTier
        /// </summary>
        [DataMember(Name = "loyalty_tier", EmitDefaultValue = true)]
        public LoyaltyPendingPointsDetailsLoyaltyTier LoyaltyTier
        {
            get{ return _LoyaltyTier;}
            set
            {
                _LoyaltyTier = value;
                _flagLoyaltyTier = true;
            }
        }
        private LoyaltyPendingPointsDetailsLoyaltyTier _LoyaltyTier;
        private bool _flagLoyaltyTier;

        /// <summary>
        /// Returns false as LoyaltyTier should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeLoyaltyTier()
        {
            return _flagLoyaltyTier;
        }
        /// <summary>
        /// Gets or Sets HolderLoyaltyTier
        /// </summary>
        [DataMember(Name = "holder_loyalty_tier", EmitDefaultValue = true)]
        public LoyaltyPendingPointsDetailsHolderLoyaltyTier HolderLoyaltyTier
        {
            get{ return _HolderLoyaltyTier;}
            set
            {
                _HolderLoyaltyTier = value;
                _flagHolderLoyaltyTier = true;
            }
        }
        private LoyaltyPendingPointsDetailsHolderLoyaltyTier _HolderLoyaltyTier;
        private bool _flagHolderLoyaltyTier;

        /// <summary>
        /// Returns false as HolderLoyaltyTier should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeHolderLoyaltyTier()
        {
            return _flagHolderLoyaltyTier;
        }
        /// <summary>
        /// Gets or Sets Event
        /// </summary>
        [DataMember(Name = "event", EmitDefaultValue = true)]
        public LoyaltyPendingPointsDetailsEvent Event
        {
            get{ return _Event;}
            set
            {
                _Event = value;
                _flagEvent = true;
            }
        }
        private LoyaltyPendingPointsDetailsEvent _Event;
        private bool _flagEvent;

        /// <summary>
        /// Returns false as Event should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEvent()
        {
            return _flagEvent;
        }
        /// <summary>
        /// Gets or Sets EarningRule
        /// </summary>
        [DataMember(Name = "earning_rule", EmitDefaultValue = true)]
        public LoyaltyPendingPointsDetailsEarningRule EarningRule
        {
            get{ return _EarningRule;}
            set
            {
                _EarningRule = value;
                _flagEarningRule = true;
            }
        }
        private LoyaltyPendingPointsDetailsEarningRule _EarningRule;
        private bool _flagEarningRule;

        /// <summary>
        /// Returns false as EarningRule should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeEarningRule()
        {
            return _flagEarningRule;
        }
        /// <summary>
        /// Gets or Sets Order
        /// </summary>
        [DataMember(Name = "order", EmitDefaultValue = true)]
        public LoyaltyPendingPointsDetailsOrder Order
        {
            get{ return _Order;}
            set
            {
                _Order = value;
                _flagOrder = true;
            }
        }
        private LoyaltyPendingPointsDetailsOrder _Order;
        private bool _flagOrder;

        /// <summary>
        /// Returns false as Order should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOrder()
        {
            return _flagOrder;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LoyaltyPendingPointsDetails {\n");
            sb.Append("  LoyaltyTier: ").Append(LoyaltyTier).Append("\n");
            sb.Append("  HolderLoyaltyTier: ").Append(HolderLoyaltyTier).Append("\n");
            sb.Append("  Event: ").Append(Event).Append("\n");
            sb.Append("  EarningRule: ").Append(EarningRule).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
