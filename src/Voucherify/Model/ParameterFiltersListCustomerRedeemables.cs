/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// ParameterFiltersListCustomerRedeemables
    /// </summary>
    [DataContract(Name = "ParameterFiltersListCustomerRedeemables")]
    public partial class ParameterFiltersListCustomerRedeemables : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Junction
        /// </summary>

        [DataMember(Name = "junction", EmitDefaultValue = true)]
        public Junction? Junction
        {
            get{ return _Junction;}
            set
            {
                _Junction = value;
                _flagJunction = true;
            }
        }
        private Junction? _Junction;
        private bool _flagJunction;

        /// <summary>
        /// Returns false as Junction should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeJunction()
        {
            return _flagJunction;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterFiltersListCustomerRedeemables" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="redeemableId">redeemableId.</param>
        /// <param name="redeemableObject">redeemableObject.</param>
        /// <param name="holderRole">holderRole.</param>
        /// <param name="campaignId">campaignId.</param>
        /// <param name="campaignType">campaignType.</param>
        /// <param name="voucherType">voucherType.</param>
        /// <param name="junction">junction.</param>
        public ParameterFiltersListCustomerRedeemables(ParameterFiltersListCustomerRedeemablesId id = default(ParameterFiltersListCustomerRedeemablesId), ParameterFiltersListCustomerRedeemablesCreatedAt createdAt = default(ParameterFiltersListCustomerRedeemablesCreatedAt), ParameterFiltersListCustomerRedeemablesRedeemableId redeemableId = default(ParameterFiltersListCustomerRedeemablesRedeemableId), ParameterFiltersListCustomerRedeemablesRedeemableObject redeemableObject = default(ParameterFiltersListCustomerRedeemablesRedeemableObject), ParameterFiltersListCustomerRedeemablesHolderRole holderRole = default(ParameterFiltersListCustomerRedeemablesHolderRole), ParameterFiltersListCustomerRedeemablesCampaignId campaignId = default(ParameterFiltersListCustomerRedeemablesCampaignId), ParameterFiltersListCustomerRedeemablesCampaignType campaignType = default(ParameterFiltersListCustomerRedeemablesCampaignType), ParameterFiltersListCustomerRedeemablesVoucherType voucherType = default(ParameterFiltersListCustomerRedeemablesVoucherType), Junction? junction = default(Junction?))
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
            this._RedeemableId = redeemableId;
            if (this.RedeemableId != null)
            {
                this._flagRedeemableId = true;
            }
            this._RedeemableObject = redeemableObject;
            if (this.RedeemableObject != null)
            {
                this._flagRedeemableObject = true;
            }
            this._HolderRole = holderRole;
            if (this.HolderRole != null)
            {
                this._flagHolderRole = true;
            }
            this._CampaignId = campaignId;
            if (this.CampaignId != null)
            {
                this._flagCampaignId = true;
            }
            this._CampaignType = campaignType;
            if (this.CampaignType != null)
            {
                this._flagCampaignType = true;
            }
            this._VoucherType = voucherType;
            if (this.VoucherType != null)
            {
                this._flagVoucherType = true;
            }
            this._Junction = junction;
            if (this.Junction != null)
            {
                this._flagJunction = true;
            }
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesId Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesId _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesCreatedAt CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesCreatedAt _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Gets or Sets RedeemableId
        /// </summary>
        [DataMember(Name = "redeemable_id", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesRedeemableId RedeemableId
        {
            get{ return _RedeemableId;}
            set
            {
                _RedeemableId = value;
                _flagRedeemableId = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesRedeemableId _RedeemableId;
        private bool _flagRedeemableId;

        /// <summary>
        /// Returns false as RedeemableId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRedeemableId()
        {
            return _flagRedeemableId;
        }
        /// <summary>
        /// Gets or Sets RedeemableObject
        /// </summary>
        [DataMember(Name = "redeemable_object", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesRedeemableObject RedeemableObject
        {
            get{ return _RedeemableObject;}
            set
            {
                _RedeemableObject = value;
                _flagRedeemableObject = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesRedeemableObject _RedeemableObject;
        private bool _flagRedeemableObject;

        /// <summary>
        /// Returns false as RedeemableObject should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRedeemableObject()
        {
            return _flagRedeemableObject;
        }
        /// <summary>
        /// Gets or Sets HolderRole
        /// </summary>
        [DataMember(Name = "holder_role", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesHolderRole HolderRole
        {
            get{ return _HolderRole;}
            set
            {
                _HolderRole = value;
                _flagHolderRole = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesHolderRole _HolderRole;
        private bool _flagHolderRole;

        /// <summary>
        /// Returns false as HolderRole should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeHolderRole()
        {
            return _flagHolderRole;
        }
        /// <summary>
        /// Gets or Sets CampaignId
        /// </summary>
        [DataMember(Name = "campaign_id", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesCampaignId CampaignId
        {
            get{ return _CampaignId;}
            set
            {
                _CampaignId = value;
                _flagCampaignId = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesCampaignId _CampaignId;
        private bool _flagCampaignId;

        /// <summary>
        /// Returns false as CampaignId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignId()
        {
            return _flagCampaignId;
        }
        /// <summary>
        /// Gets or Sets CampaignType
        /// </summary>
        [DataMember(Name = "campaign_type", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesCampaignType CampaignType
        {
            get{ return _CampaignType;}
            set
            {
                _CampaignType = value;
                _flagCampaignType = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesCampaignType _CampaignType;
        private bool _flagCampaignType;

        /// <summary>
        /// Returns false as CampaignType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignType()
        {
            return _flagCampaignType;
        }
        /// <summary>
        /// Gets or Sets VoucherType
        /// </summary>
        [DataMember(Name = "voucher_type", EmitDefaultValue = true)]
        public ParameterFiltersListCustomerRedeemablesVoucherType VoucherType
        {
            get{ return _VoucherType;}
            set
            {
                _VoucherType = value;
                _flagVoucherType = true;
            }
        }
        private ParameterFiltersListCustomerRedeemablesVoucherType _VoucherType;
        private bool _flagVoucherType;

        /// <summary>
        /// Returns false as VoucherType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeVoucherType()
        {
            return _flagVoucherType;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ParameterFiltersListCustomerRedeemables {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  RedeemableId: ").Append(RedeemableId).Append("\n");
            sb.Append("  RedeemableObject: ").Append(RedeemableObject).Append("\n");
            sb.Append("  HolderRole: ").Append(HolderRole).Append("\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  CampaignType: ").Append(CampaignType).Append("\n");
            sb.Append("  VoucherType: ").Append(VoucherType).Append("\n");
            sb.Append("  Junction: ").Append(Junction).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
