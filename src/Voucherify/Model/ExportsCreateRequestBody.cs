/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// ExportsCreateRequestBody
    /// </summary>
    [DataContract(Name = "ExportsCreateRequestBody")]
    public partial class ExportsCreateRequestBody : IValidatableObject
    {
        /// <summary>
        /// Defines ExportedObject
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ExportedObjectEnum
        {
            /// <summary>
            /// Enum Voucher for value: voucher
            /// </summary>
            [EnumMember(Value = "voucher")]
            Voucher = 1,

            /// <summary>
            /// Enum Redemption for value: redemption
            /// </summary>
            [EnumMember(Value = "redemption")]
            Redemption = 2,

            /// <summary>
            /// Enum Customer for value: customer
            /// </summary>
            [EnumMember(Value = "customer")]
            Customer = 3,

            /// <summary>
            /// Enum Publication for value: publication
            /// </summary>
            [EnumMember(Value = "publication")]
            Publication = 4,

            /// <summary>
            /// Enum Order for value: order
            /// </summary>
            [EnumMember(Value = "order")]
            Order = 5,

            /// <summary>
            /// Enum PointsExpiration for value: points_expiration
            /// </summary>
            [EnumMember(Value = "points_expiration")]
            PointsExpiration = 6,

            /// <summary>
            /// Enum VoucherTransactions for value: voucher_transactions
            /// </summary>
            [EnumMember(Value = "voucher_transactions")]
            VoucherTransactions = 7
        }


        /// <summary>
        /// Gets or Sets ExportedObject
        /// </summary>

        [DataMember(Name = "exported_object", EmitDefaultValue = true)]
        public ExportedObjectEnum? ExportedObject
        {
            get{ return _ExportedObject;}
            set
            {
                _ExportedObject = value;
                _flagExportedObject = true;
            }
        }
        private ExportedObjectEnum? _ExportedObject;
        private bool _flagExportedObject;

        /// <summary>
        /// Returns false as ExportedObject should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeExportedObject()
        {
            return _flagExportedObject;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ExportsCreateRequestBody" /> class.
        /// </summary>
        /// <param name="exportedObject">exportedObject.</param>
        /// <param name="parameters">parameters.</param>
        public ExportsCreateRequestBody(ExportedObjectEnum? exportedObject = default(ExportedObjectEnum?), ExportsCreateRequestBodyParameters parameters = default(ExportsCreateRequestBodyParameters))
        {
            this._ExportedObject = exportedObject;
            if (this.ExportedObject != null)
            {
                this._flagExportedObject = true;
            }
            this._Parameters = parameters;
            if (this.Parameters != null)
            {
                this._flagParameters = true;
            }
        }

        /// <summary>
        /// Gets or Sets Parameters
        /// </summary>
        [DataMember(Name = "parameters", EmitDefaultValue = true)]
        public ExportsCreateRequestBodyParameters Parameters
        {
            get{ return _Parameters;}
            set
            {
                _Parameters = value;
                _flagParameters = true;
            }
        }
        private ExportsCreateRequestBodyParameters _Parameters;
        private bool _flagParameters;

        /// <summary>
        /// Returns false as Parameters should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeParameters()
        {
            return _flagParameters;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ExportsCreateRequestBody {\n");
            sb.Append("  ExportedObject: ").Append(ExportedObject).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
