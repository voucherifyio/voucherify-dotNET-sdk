/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Contains the &#x60;app_id&#x60; and &#x60;app_token&#x60; to authenticate client-side requests.
    /// </summary>
    [DataContract(Name = "ManagementProjectsCreateResponseBodyClientSideKey")]
    public partial class ManagementProjectsCreateResponseBodyClientSideKey : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManagementProjectsCreateResponseBodyClientSideKey" /> class.
        /// </summary>
        /// <param name="appId">Application ID to be used as &#x60;X-App-Id&#x60; header in every HTTP request..</param>
        /// <param name="appToken">Application token to be used as &#x60;X-App-Token&#x60; header in every HTTP request.  The application token (secret key) for the client-side authentication is visible in the Project Settings for 14 days when it is first generated in a newly-created project. Write your application token down and keep it in a safe place..</param>
        public ManagementProjectsCreateResponseBodyClientSideKey(string appId = default(string), string appToken = default(string))
        {
            this._AppId = appId;
            if (this.AppId != null)
            {
                this._flagAppId = true;
            }
            this._AppToken = appToken;
            if (this.AppToken != null)
            {
                this._flagAppToken = true;
            }
        }

        /// <summary>
        /// Application ID to be used as &#x60;X-App-Id&#x60; header in every HTTP request.
        /// </summary>
        /// <value>Application ID to be used as &#x60;X-App-Id&#x60; header in every HTTP request.</value>
        [DataMember(Name = "app_id", EmitDefaultValue = true)]
        public string AppId
        {
            get{ return _AppId;}
            set
            {
                _AppId = value;
                _flagAppId = true;
            }
        }
        private string _AppId;
        private bool _flagAppId;

        /// <summary>
        /// Returns false as AppId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAppId()
        {
            return _flagAppId;
        }
        /// <summary>
        /// Application token to be used as &#x60;X-App-Token&#x60; header in every HTTP request.  The application token (secret key) for the client-side authentication is visible in the Project Settings for 14 days when it is first generated in a newly-created project. Write your application token down and keep it in a safe place.
        /// </summary>
        /// <value>Application token to be used as &#x60;X-App-Token&#x60; header in every HTTP request.  The application token (secret key) for the client-side authentication is visible in the Project Settings for 14 days when it is first generated in a newly-created project. Write your application token down and keep it in a safe place.</value>
        [DataMember(Name = "app_token", EmitDefaultValue = true)]
        public string AppToken
        {
            get{ return _AppToken;}
            set
            {
                _AppToken = value;
                _flagAppToken = true;
            }
        }
        private string _AppToken;
        private bool _flagAppToken;

        /// <summary>
        /// Returns false as AppToken should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAppToken()
        {
            return _flagAppToken;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManagementProjectsCreateResponseBodyClientSideKey {\n");
            sb.Append("  AppId: ").Append(AppId).Append("\n");
            sb.Append("  AppToken: ").Append(AppToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
