/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Determines the limit of API calls per given unit time.
    /// </summary>
    [DataContract(Name = "ManagementProjectLimitsApiCallsItem")]
    public partial class ManagementProjectLimitsApiCallsItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManagementProjectLimitsApiCallsItem" /> class.
        /// </summary>
        /// <param name="value">Determines the maximum number of API calls per time set in &#x60;\&quot;duration\&quot;&#x60;..</param>
        /// <param name="duration">Determines the amount of time during which the calls up to the number specified in the &#x60;value&#x60; can be made. The duration is presented in the ISO 8601 format, e.g. &#x60;PT1H&#x60; means one hour..</param>
        public ManagementProjectLimitsApiCallsItem(int value = default(int), string duration = default(string))
        {
            this._Value = value;
            if (this.Value != null)
            {
                this._flagValue = true;
            }
            this._Duration = duration;
            if (this.Duration != null)
            {
                this._flagDuration = true;
            }
        }

        /// <summary>
        /// Determines the maximum number of API calls per time set in &#x60;\&quot;duration\&quot;&#x60;.
        /// </summary>
        /// <value>Determines the maximum number of API calls per time set in &#x60;\&quot;duration\&quot;&#x60;.</value>
        [DataMember(Name = "value", EmitDefaultValue = true)]
        public int Value
        {
            get{ return _Value;}
            set
            {
                _Value = value;
                _flagValue = true;
            }
        }
        private int _Value;
        private bool _flagValue;

        /// <summary>
        /// Returns false as Value should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeValue()
        {
            return _flagValue;
        }
        /// <summary>
        /// Determines the amount of time during which the calls up to the number specified in the &#x60;value&#x60; can be made. The duration is presented in the ISO 8601 format, e.g. &#x60;PT1H&#x60; means one hour.
        /// </summary>
        /// <value>Determines the amount of time during which the calls up to the number specified in the &#x60;value&#x60; can be made. The duration is presented in the ISO 8601 format, e.g. &#x60;PT1H&#x60; means one hour.</value>
        [DataMember(Name = "duration", EmitDefaultValue = true)]
        public string Duration
        {
            get{ return _Duration;}
            set
            {
                _Duration = value;
                _flagDuration = true;
            }
        }
        private string _Duration;
        private bool _flagDuration;

        /// <summary>
        /// Returns false as Duration should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDuration()
        {
            return _flagDuration;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManagementProjectLimitsApiCallsItem {\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
