/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Defines the details of the channel through which the redemption was issued.
    /// </summary>
    [DataContract(Name = "MemberActivityDataRedemptionChannel")]
    public partial class MemberActivityDataRedemptionChannel : IValidatableObject
    {
        /// <summary>
        /// The source of the channel for the redemption: &#x60;USER&#x60; - the redemption was made in the Voucherify Dashboard by a user,  &#x60;API&#x60; - redemption was made through the API, &#x60;AUTO_REDEEM&#x60; - the redemption was made automatically for a reward.
        /// </summary>
        /// <value>The source of the channel for the redemption: &#x60;USER&#x60; - the redemption was made in the Voucherify Dashboard by a user,  &#x60;API&#x60; - redemption was made through the API, &#x60;AUTO_REDEEM&#x60; - the redemption was made automatically for a reward.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ChannelTypeEnum
        {
            /// <summary>
            /// Enum API for value: API
            /// </summary>
            [EnumMember(Value = "API")]
            API = 1,

            /// <summary>
            /// Enum AUTOREDEEM for value: AUTO_REDEEM
            /// </summary>
            [EnumMember(Value = "AUTO_REDEEM")]
            AUTOREDEEM = 2,

            /// <summary>
            /// Enum USER for value: USER
            /// </summary>
            [EnumMember(Value = "USER")]
            USER = 3
        }


        /// <summary>
        /// The source of the channel for the redemption: &#x60;USER&#x60; - the redemption was made in the Voucherify Dashboard by a user,  &#x60;API&#x60; - redemption was made through the API, &#x60;AUTO_REDEEM&#x60; - the redemption was made automatically for a reward.
        /// </summary>
        /// <value>The source of the channel for the redemption: &#x60;USER&#x60; - the redemption was made in the Voucherify Dashboard by a user,  &#x60;API&#x60; - redemption was made through the API, &#x60;AUTO_REDEEM&#x60; - the redemption was made automatically for a reward.</value>

        [DataMember(Name = "channel_type", EmitDefaultValue = true)]
        public ChannelTypeEnum? ChannelType
        {
            get{ return _ChannelType;}
            set
            {
                _ChannelType = value;
                _flagChannelType = true;
            }
        }
        private ChannelTypeEnum? _ChannelType;
        private bool _flagChannelType;

        /// <summary>
        /// Returns false as ChannelType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeChannelType()
        {
            return _flagChannelType;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="MemberActivityDataRedemptionChannel" /> class.
        /// </summary>
        /// <param name="channelId">Unique channel ID of the user performing the redemption. This is either a user ID from a user using the Voucherify Dashboard, an X-APP-Id of a user using the API, or the reward assignment ID for automatic reward redemption..</param>
        /// <param name="channelType">The source of the channel for the redemption: &#x60;USER&#x60; - the redemption was made in the Voucherify Dashboard by a user,  &#x60;API&#x60; - redemption was made through the API, &#x60;AUTO_REDEEM&#x60; - the redemption was made automatically for a reward..</param>
        public MemberActivityDataRedemptionChannel(string channelId = default(string), ChannelTypeEnum? channelType = default(ChannelTypeEnum?))
        {
            this._ChannelId = channelId;
            if (this.ChannelId != null)
            {
                this._flagChannelId = true;
            }
            this._ChannelType = channelType;
            if (this.ChannelType != null)
            {
                this._flagChannelType = true;
            }
        }

        /// <summary>
        /// Unique channel ID of the user performing the redemption. This is either a user ID from a user using the Voucherify Dashboard, an X-APP-Id of a user using the API, or the reward assignment ID for automatic reward redemption.
        /// </summary>
        /// <value>Unique channel ID of the user performing the redemption. This is either a user ID from a user using the Voucherify Dashboard, an X-APP-Id of a user using the API, or the reward assignment ID for automatic reward redemption.</value>
        [DataMember(Name = "channel_id", EmitDefaultValue = true)]
        public string ChannelId
        {
            get{ return _ChannelId;}
            set
            {
                _ChannelId = value;
                _flagChannelId = true;
            }
        }
        private string _ChannelId;
        private bool _flagChannelId;

        /// <summary>
        /// Returns false as ChannelId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeChannelId()
        {
            return _flagChannelId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MemberActivityDataRedemptionChannel {\n");
            sb.Append("  ChannelId: ").Append(ChannelId).Append("\n");
            sb.Append("  ChannelType: ").Append(ChannelType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
