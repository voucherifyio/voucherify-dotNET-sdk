/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Referral object.
    /// </summary>
    [DataContract(Name = "CustomEventReferral")]
    public partial class CustomEventReferral : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomEventReferral" /> class.
        /// </summary>
        /// <param name="referrerId">Unique referrer ID..</param>
        /// <param name="code">Voucher code..</param>
        /// <param name="id">Unique voucher ID..</param>
        public CustomEventReferral(string referrerId = default(string), string code = default(string), string id = default(string))
        {
            this._ReferrerId = referrerId;
            if (this.ReferrerId != null)
            {
                this._flagReferrerId = true;
            }
            this._Code = code;
            if (this.Code != null)
            {
                this._flagCode = true;
            }
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
        }

        /// <summary>
        /// Unique referrer ID.
        /// </summary>
        /// <value>Unique referrer ID.</value>
        /*
        <example>cust_nM4jqPiaXUvQdVSA6vTRUnix</example>
        */
        [DataMember(Name = "referrer_id", EmitDefaultValue = true)]
        public string ReferrerId
        {
            get{ return _ReferrerId;}
            set
            {
                _ReferrerId = value;
                _flagReferrerId = true;
            }
        }
        private string _ReferrerId;
        private bool _flagReferrerId;

        /// <summary>
        /// Returns false as ReferrerId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeReferrerId()
        {
            return _flagReferrerId;
        }
        /// <summary>
        /// Voucher code.
        /// </summary>
        /// <value>Voucher code.</value>
        [DataMember(Name = "code", EmitDefaultValue = true)]
        public string Code
        {
            get{ return _Code;}
            set
            {
                _Code = value;
                _flagCode = true;
            }
        }
        private string _Code;
        private bool _flagCode;

        /// <summary>
        /// Returns false as Code should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCode()
        {
            return _flagCode;
        }
        /// <summary>
        /// Unique voucher ID.
        /// </summary>
        /// <value>Unique voucher ID.</value>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomEventReferral {\n");
            sb.Append("  ReferrerId: ").Append(ReferrerId).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
