/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Response body schema for **POST** &#x60;/oauth/token&#x60;.
    /// </summary>
    [DataContract(Name = "OAuthTokenGenerateResponseBody")]
    public partial class OAuthTokenGenerateResponseBody : IValidatableObject
    {
        /// <summary>
        /// Type of the token. Use the value as the header prefix for authorization.
        /// </summary>
        /// <value>Type of the token. Use the value as the header prefix for authorization.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TokenTypeEnum
        {
            /// <summary>
            /// Enum Bearer for value: Bearer
            /// </summary>
            [EnumMember(Value = "Bearer")]
            Bearer = 1
        }


        /// <summary>
        /// Type of the token. Use the value as the header prefix for authorization.
        /// </summary>
        /// <value>Type of the token. Use the value as the header prefix for authorization.</value>

        [DataMember(Name = "token_type", EmitDefaultValue = true)]
        public TokenTypeEnum? TokenType
        {
            get{ return _TokenType;}
            set
            {
                _TokenType = value;
                _flagTokenType = true;
            }
        }
        private TokenTypeEnum? _TokenType;
        private bool _flagTokenType;

        /// <summary>
        /// Returns false as TokenType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTokenType()
        {
            return _flagTokenType;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="OAuthTokenGenerateResponseBody" /> class.
        /// </summary>
        /// <param name="accessToken">The access token used to authorize access to the Voucherify API..</param>
        /// <param name="clientId">Unique client identifier, assigned by Voucherify, for OAuth..</param>
        /// <param name="expiresAt">Timestamp in seconds in the Unix format indicating when the token expires..</param>
        /// <param name="expiresIn">Number of seconds left until the token expires..</param>
        /// <param name="scope">Defines the scope of possible actions that can be done with the OAuth token. The &#x60;api&#x60; scope allows using the server-side API. The &#x60;client_api&#x60; scope allows using the whole client-side API. Possible values: &#x60;api&#x60;, &#x60;assets&#x60;, &#x60;async-actions&#x60;, &#x60;campaigns&#x60;, &#x60;categories&#x60;, &#x60;client_api&#x60;, &#x60;client_consents&#x60;, &#x60;client_customers&#x60;, &#x60;client_events&#x60;, &#x60;client_promotions&#x60;, &#x60;client_publish&#x60;, &#x60;client_qualifications&#x60;, &#x60;client_redeem&#x60;, &#x60;client_redemptions&#x60;, &#x60;client_validate&#x60;, &#x60;client_validations&#x60;, &#x60;client_vouchers&#x60;, &#x60;consents&#x60;, &#x60;customers&#x60;, &#x60;events&#x60;, &#x60;exports&#x60;, &#x60;locations&#x60;, &#x60;loyalties&#x60;, &#x60;metadata-schemas&#x60;, &#x60;orders&#x60;, &#x60;product-collections&#x60;, &#x60;products&#x60;, &#x60;promotions&#x60;, &#x60;publications&#x60;, &#x60;qualifications&#x60;, &#x60;redemptions&#x60;, &#x60;referrals&#x60;, &#x60;rewards&#x60;, &#x60;segments&#x60;, &#x60;skus&#x60;, &#x60;task-results&#x60;, &#x60;templates&#x60;, &#x60;trash-bin&#x60;, &#x60;validation-rules-assignments&#x60;, &#x60;validation-rules&#x60;, &#x60;validations&#x60;, &#x60;vouchers&#x60;..</param>
        /// <param name="tokenType">Type of the token. Use the value as the header prefix for authorization..</param>
        public OAuthTokenGenerateResponseBody(string accessToken = default(string), string clientId = default(string), int? expiresAt = default(int?), int? expiresIn = default(int?), string scope = default(string), TokenTypeEnum? tokenType = default(TokenTypeEnum?))
        {
            this._AccessToken = accessToken;
            if (this.AccessToken != null)
            {
                this._flagAccessToken = true;
            }
            this._ClientId = clientId;
            if (this.ClientId != null)
            {
                this._flagClientId = true;
            }
            this._ExpiresAt = expiresAt;
            if (this.ExpiresAt != null)
            {
                this._flagExpiresAt = true;
            }
            this._ExpiresIn = expiresIn;
            if (this.ExpiresIn != null)
            {
                this._flagExpiresIn = true;
            }
            this._Scope = scope;
            if (this.Scope != null)
            {
                this._flagScope = true;
            }
            this._TokenType = tokenType;
            if (this.TokenType != null)
            {
                this._flagTokenType = true;
            }
        }

        /// <summary>
        /// The access token used to authorize access to the Voucherify API.
        /// </summary>
        /// <value>The access token used to authorize access to the Voucherify API.</value>
        [DataMember(Name = "access_token", EmitDefaultValue = true)]
        public string AccessToken
        {
            get{ return _AccessToken;}
            set
            {
                _AccessToken = value;
                _flagAccessToken = true;
            }
        }
        private string _AccessToken;
        private bool _flagAccessToken;

        /// <summary>
        /// Returns false as AccessToken should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAccessToken()
        {
            return _flagAccessToken;
        }
        /// <summary>
        /// Unique client identifier, assigned by Voucherify, for OAuth.
        /// </summary>
        /// <value>Unique client identifier, assigned by Voucherify, for OAuth.</value>
        [DataMember(Name = "client_id", EmitDefaultValue = true)]
        public string ClientId
        {
            get{ return _ClientId;}
            set
            {
                _ClientId = value;
                _flagClientId = true;
            }
        }
        private string _ClientId;
        private bool _flagClientId;

        /// <summary>
        /// Returns false as ClientId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeClientId()
        {
            return _flagClientId;
        }
        /// <summary>
        /// Timestamp in seconds in the Unix format indicating when the token expires.
        /// </summary>
        /// <value>Timestamp in seconds in the Unix format indicating when the token expires.</value>
        [DataMember(Name = "expires_at", EmitDefaultValue = true)]
        public int? ExpiresAt
        {
            get{ return _ExpiresAt;}
            set
            {
                _ExpiresAt = value;
                _flagExpiresAt = true;
            }
        }
        private int? _ExpiresAt;
        private bool _flagExpiresAt;

        /// <summary>
        /// Returns false as ExpiresAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeExpiresAt()
        {
            return _flagExpiresAt;
        }
        /// <summary>
        /// Number of seconds left until the token expires.
        /// </summary>
        /// <value>Number of seconds left until the token expires.</value>
        [DataMember(Name = "expires_in", EmitDefaultValue = true)]
        public int? ExpiresIn
        {
            get{ return _ExpiresIn;}
            set
            {
                _ExpiresIn = value;
                _flagExpiresIn = true;
            }
        }
        private int? _ExpiresIn;
        private bool _flagExpiresIn;

        /// <summary>
        /// Returns false as ExpiresIn should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeExpiresIn()
        {
            return _flagExpiresIn;
        }
        /// <summary>
        /// Defines the scope of possible actions that can be done with the OAuth token. The &#x60;api&#x60; scope allows using the server-side API. The &#x60;client_api&#x60; scope allows using the whole client-side API. Possible values: &#x60;api&#x60;, &#x60;assets&#x60;, &#x60;async-actions&#x60;, &#x60;campaigns&#x60;, &#x60;categories&#x60;, &#x60;client_api&#x60;, &#x60;client_consents&#x60;, &#x60;client_customers&#x60;, &#x60;client_events&#x60;, &#x60;client_promotions&#x60;, &#x60;client_publish&#x60;, &#x60;client_qualifications&#x60;, &#x60;client_redeem&#x60;, &#x60;client_redemptions&#x60;, &#x60;client_validate&#x60;, &#x60;client_validations&#x60;, &#x60;client_vouchers&#x60;, &#x60;consents&#x60;, &#x60;customers&#x60;, &#x60;events&#x60;, &#x60;exports&#x60;, &#x60;locations&#x60;, &#x60;loyalties&#x60;, &#x60;metadata-schemas&#x60;, &#x60;orders&#x60;, &#x60;product-collections&#x60;, &#x60;products&#x60;, &#x60;promotions&#x60;, &#x60;publications&#x60;, &#x60;qualifications&#x60;, &#x60;redemptions&#x60;, &#x60;referrals&#x60;, &#x60;rewards&#x60;, &#x60;segments&#x60;, &#x60;skus&#x60;, &#x60;task-results&#x60;, &#x60;templates&#x60;, &#x60;trash-bin&#x60;, &#x60;validation-rules-assignments&#x60;, &#x60;validation-rules&#x60;, &#x60;validations&#x60;, &#x60;vouchers&#x60;.
        /// </summary>
        /// <value>Defines the scope of possible actions that can be done with the OAuth token. The &#x60;api&#x60; scope allows using the server-side API. The &#x60;client_api&#x60; scope allows using the whole client-side API. Possible values: &#x60;api&#x60;, &#x60;assets&#x60;, &#x60;async-actions&#x60;, &#x60;campaigns&#x60;, &#x60;categories&#x60;, &#x60;client_api&#x60;, &#x60;client_consents&#x60;, &#x60;client_customers&#x60;, &#x60;client_events&#x60;, &#x60;client_promotions&#x60;, &#x60;client_publish&#x60;, &#x60;client_qualifications&#x60;, &#x60;client_redeem&#x60;, &#x60;client_redemptions&#x60;, &#x60;client_validate&#x60;, &#x60;client_validations&#x60;, &#x60;client_vouchers&#x60;, &#x60;consents&#x60;, &#x60;customers&#x60;, &#x60;events&#x60;, &#x60;exports&#x60;, &#x60;locations&#x60;, &#x60;loyalties&#x60;, &#x60;metadata-schemas&#x60;, &#x60;orders&#x60;, &#x60;product-collections&#x60;, &#x60;products&#x60;, &#x60;promotions&#x60;, &#x60;publications&#x60;, &#x60;qualifications&#x60;, &#x60;redemptions&#x60;, &#x60;referrals&#x60;, &#x60;rewards&#x60;, &#x60;segments&#x60;, &#x60;skus&#x60;, &#x60;task-results&#x60;, &#x60;templates&#x60;, &#x60;trash-bin&#x60;, &#x60;validation-rules-assignments&#x60;, &#x60;validation-rules&#x60;, &#x60;validations&#x60;, &#x60;vouchers&#x60;.</value>
        [DataMember(Name = "scope", EmitDefaultValue = true)]
        public string Scope
        {
            get{ return _Scope;}
            set
            {
                _Scope = value;
                _flagScope = true;
            }
        }
        private string _Scope;
        private bool _flagScope;

        /// <summary>
        /// Returns false as Scope should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeScope()
        {
            return _flagScope;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OAuthTokenGenerateResponseBody {\n");
            sb.Append("  AccessToken: ").Append(AccessToken).Append("\n");
            sb.Append("  ClientId: ").Append(ClientId).Append("\n");
            sb.Append("  ExpiresAt: ").Append(ExpiresAt).Append("\n");
            sb.Append("  ExpiresIn: ").Append(ExpiresIn).Append("\n");
            sb.Append("  Scope: ").Append(Scope).Append("\n");
            sb.Append("  TokenType: ").Append(TokenType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
