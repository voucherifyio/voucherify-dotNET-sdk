/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// SimpleReferralTier
    /// </summary>
    [DataContract(Name = "SimpleReferralTier")]
    public partial class SimpleReferralTier : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimpleReferralTier" /> class.
        /// </summary>
        /// <param name="id">Unique referral tier ID..</param>
        /// <param name="campaignId">Campaign Id..</param>
        /// <param name="banner">Text to be displayed to your customers on your website..</param>
        /// <param name="parameters">Referral tier parameters.</param>
        public SimpleReferralTier(string id = default(string), string campaignId = default(string), string banner = default(string), Object parameters = default(Object))
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._CampaignId = campaignId;
            if (this.CampaignId != null)
            {
                this._flagCampaignId = true;
            }
            this._Banner = banner;
            if (this.Banner != null)
            {
                this._flagBanner = true;
            }
            this._Parameters = parameters;
            if (this.Parameters != null)
            {
                this._flagParameters = true;
            }
        }

        /// <summary>
        /// Unique referral tier ID.
        /// </summary>
        /// <value>Unique referral tier ID.</value>
        /*
        <example>seg_DNAOhUtJffvX0f57ajLMFBYR</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Campaign Id.
        /// </summary>
        /// <value>Campaign Id.</value>
        [DataMember(Name = "campaign_id", EmitDefaultValue = true)]
        public string CampaignId
        {
            get{ return _CampaignId;}
            set
            {
                _CampaignId = value;
                _flagCampaignId = true;
            }
        }
        private string _CampaignId;
        private bool _flagCampaignId;

        /// <summary>
        /// Returns false as CampaignId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignId()
        {
            return _flagCampaignId;
        }
        /// <summary>
        /// Text to be displayed to your customers on your website.
        /// </summary>
        /// <value>Text to be displayed to your customers on your website.</value>
        [DataMember(Name = "banner", EmitDefaultValue = true)]
        public string Banner
        {
            get{ return _Banner;}
            set
            {
                _Banner = value;
                _flagBanner = true;
            }
        }
        private string _Banner;
        private bool _flagBanner;

        /// <summary>
        /// Returns false as Banner should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeBanner()
        {
            return _flagBanner;
        }
        /// <summary>
        /// Referral tier parameters
        /// </summary>
        /// <value>Referral tier parameters</value>
        [DataMember(Name = "parameters", EmitDefaultValue = true)]
        public Object Parameters
        {
            get{ return _Parameters;}
            set
            {
                _Parameters = value;
                _flagParameters = true;
            }
        }
        private Object _Parameters;
        private bool _flagParameters;

        /// <summary>
        /// Returns false as Parameters should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeParameters()
        {
            return _flagParameters;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SimpleReferralTier {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  Banner: ").Append(Banner).Append("\n");
            sb.Append("  Parameters: ").Append(Parameters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
