/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Summary of customer&#39;s referrals, in this case, the customer being the referee, i.e. information about the source of referrals and number of times the customer was referred by other customers.
    /// </summary>
    [DataContract(Name = "CustomerReferrals")]
    public partial class CustomerReferrals : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomerReferrals" /> class.
        /// </summary>
        /// <param name="total">Total number of times this customer received a referral, i.e. was referred by another customer..</param>
        /// <param name="campaigns">Contains an array of campaigns that served as the source of a referral for the customer..</param>
        public CustomerReferrals(int? total = default(int?), List<CustomerReferralsCampaignsItem> campaigns = default(List<CustomerReferralsCampaignsItem>))
        {
            this._Total = total;
            if (this.Total != null)
            {
                this._flagTotal = true;
            }
            this._Campaigns = campaigns;
            if (this.Campaigns != null)
            {
                this._flagCampaigns = true;
            }
        }

        /// <summary>
        /// Total number of times this customer received a referral, i.e. was referred by another customer.
        /// </summary>
        /// <value>Total number of times this customer received a referral, i.e. was referred by another customer.</value>
        [DataMember(Name = "total", EmitDefaultValue = true)]
        public int? Total
        {
            get{ return _Total;}
            set
            {
                _Total = value;
                _flagTotal = true;
            }
        }
        private int? _Total;
        private bool _flagTotal;

        /// <summary>
        /// Returns false as Total should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTotal()
        {
            return _flagTotal;
        }
        /// <summary>
        /// Contains an array of campaigns that served as the source of a referral for the customer.
        /// </summary>
        /// <value>Contains an array of campaigns that served as the source of a referral for the customer.</value>
        [DataMember(Name = "campaigns", EmitDefaultValue = true)]
        public List<CustomerReferralsCampaignsItem> Campaigns
        {
            get{ return _Campaigns;}
            set
            {
                _Campaigns = value;
                _flagCampaigns = true;
            }
        }
        private List<CustomerReferralsCampaignsItem> _Campaigns;
        private bool _flagCampaigns;

        /// <summary>
        /// Returns false as Campaigns should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaigns()
        {
            return _flagCampaigns;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomerReferrals {\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  Campaigns: ").Append(Campaigns).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
