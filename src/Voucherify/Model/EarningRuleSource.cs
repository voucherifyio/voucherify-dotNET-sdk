/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Contains the custom earning rule name and parent campaign.
    /// </summary>
    [DataContract(Name = "EarningRuleSource")]
    public partial class EarningRuleSource : IValidatableObject
    {
        /// <summary>
        /// Defines the object associated with the earning rule. Defaults to &#x60;campaign&#x60;.
        /// </summary>
        /// <value>Defines the object associated with the earning rule. Defaults to &#x60;campaign&#x60;.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectTypeEnum
        {
            /// <summary>
            /// Enum Campaign for value: campaign
            /// </summary>
            [EnumMember(Value = "campaign")]
            Campaign = 1
        }


        /// <summary>
        /// Defines the object associated with the earning rule. Defaults to &#x60;campaign&#x60;.
        /// </summary>
        /// <value>Defines the object associated with the earning rule. Defaults to &#x60;campaign&#x60;.</value>

        [DataMember(Name = "object_type", EmitDefaultValue = true)]
        public ObjectTypeEnum? ObjectType
        {
            get{ return _ObjectType;}
            set
            {
                _ObjectType = value;
                _flagObjectType = true;
            }
        }
        private ObjectTypeEnum? _ObjectType;
        private bool _flagObjectType;

        /// <summary>
        /// Returns false as ObjectType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObjectType()
        {
            return _flagObjectType;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="EarningRuleSource" /> class.
        /// </summary>
        /// <param name="banner">Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard..</param>
        /// <param name="objectId">A unique campaign identifier assigned by the Voucherify API..</param>
        /// <param name="objectType">Defines the object associated with the earning rule. Defaults to &#x60;campaign&#x60;..</param>
        public EarningRuleSource(string banner = default(string), string objectId = default(string), ObjectTypeEnum? objectType = default(ObjectTypeEnum?))
        {
            this._Banner = banner;
            if (this.Banner != null)
            {
                this._flagBanner = true;
            }
            this._ObjectId = objectId;
            if (this.ObjectId != null)
            {
                this._flagObjectId = true;
            }
            this._ObjectType = objectType;
            if (this.ObjectType != null)
            {
                this._flagObjectType = true;
            }
        }

        /// <summary>
        /// Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.
        /// </summary>
        /// <value>Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.</value>
        [DataMember(Name = "banner", EmitDefaultValue = true)]
        public string Banner
        {
            get{ return _Banner;}
            set
            {
                _Banner = value;
                _flagBanner = true;
            }
        }
        private string _Banner;
        private bool _flagBanner;

        /// <summary>
        /// Returns false as Banner should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeBanner()
        {
            return _flagBanner;
        }
        /// <summary>
        /// A unique campaign identifier assigned by the Voucherify API.
        /// </summary>
        /// <value>A unique campaign identifier assigned by the Voucherify API.</value>
        [DataMember(Name = "object_id", EmitDefaultValue = true)]
        public string ObjectId
        {
            get{ return _ObjectId;}
            set
            {
                _ObjectId = value;
                _flagObjectId = true;
            }
        }
        private string _ObjectId;
        private bool _flagObjectId;

        /// <summary>
        /// Returns false as ObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObjectId()
        {
            return _flagObjectId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class EarningRuleSource {\n");
            sb.Append("  Banner: ").Append(Banner).Append("\n");
            sb.Append("  ObjectId: ").Append(ObjectId).Append("\n");
            sb.Append("  ObjectType: ").Append(ObjectType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
