/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Create publication with campaign.
    /// </summary>
    [DataContract(Name = "CreatePublicationCampaign")]
    public partial class CreatePublicationCampaign : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreatePublicationCampaign" /> class.
        /// </summary>
        /// <param name="name">Name of voucher&#39;s parent campaign or unique campaign ID that was assigned by Voucherify..</param>
        /// <param name="count">Number of vouchers to be published to customer..</param>
        public CreatePublicationCampaign(string name = default(string), int? count = default(int?))
        {
            this._Name = name;
            if (this.Name != null)
            {
                this._flagName = true;
            }
            this._Count = count;
            if (this.Count != null)
            {
                this._flagCount = true;
            }
        }

        /// <summary>
        /// Name of voucher&#39;s parent campaign or unique campaign ID that was assigned by Voucherify.
        /// </summary>
        /// <value>Name of voucher&#39;s parent campaign or unique campaign ID that was assigned by Voucherify.</value>
        /*
        <example>camp_dphuwqH7BOVkgh4JmpDtS32l</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name
        {
            get{ return _Name;}
            set
            {
                _Name = value;
                _flagName = true;
            }
        }
        private string _Name;
        private bool _flagName;

        /// <summary>
        /// Returns false as Name should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeName()
        {
            return _flagName;
        }
        /// <summary>
        /// Number of vouchers to be published to customer.
        /// </summary>
        /// <value>Number of vouchers to be published to customer.</value>
        [DataMember(Name = "count", EmitDefaultValue = true)]
        public int? Count
        {
            get{ return _Count;}
            set
            {
                _Count = value;
                _flagCount = true;
            }
        }
        private int? _Count;
        private bool _flagCount;

        /// <summary>
        /// Returns false as Count should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCount()
        {
            return _flagCount;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreatePublicationCampaign {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Count: ").Append(Count).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Count (int?) maximum
            if (this.Count > (int?)20)
            {
                yield return new ValidationResult("Invalid value for Count, must be a value less than or equal to 20.", new [] { "Count" });
            }

            // Count (int?) minimum
            if (this.Count < (int?)1)
            {
                yield return new ValidationResult("Invalid value for Count, must be a value greater than or equal to 1.", new [] { "Count" });
            }

            yield break;
        }
    }

}
