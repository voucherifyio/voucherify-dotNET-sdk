/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// ValidationsValidateRequestBodyRedeemablesItem
    /// </summary>
    [DataContract(Name = "ValidationsValidateRequestBodyRedeemablesItem")]
    public partial class ValidationsValidateRequestBodyRedeemablesItem : IValidatableObject
    {
        /// <summary>
        /// Defines Object
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum Voucher for value: voucher
            /// </summary>
            [EnumMember(Value = "voucher")]
            Voucher = 1,

            /// <summary>
            /// Enum PromotionTier for value: promotion_tier
            /// </summary>
            [EnumMember(Value = "promotion_tier")]
            PromotionTier = 2,

            /// <summary>
            /// Enum PromotionStack for value: promotion_stack
            /// </summary>
            [EnumMember(Value = "promotion_stack")]
            PromotionStack = 3
        }


        /// <summary>
        /// Gets or Sets Object
        /// </summary>

        [DataMember(Name = "object", EmitDefaultValue = true)]
        public ObjectEnum? Object
        {
            get{ return _Object;}
            set
            {
                _Object = value;
                _flagObject = true;
            }
        }
        private ObjectEnum? _Object;
        private bool _flagObject;

        /// <summary>
        /// Returns false as Object should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObject()
        {
            return _flagObject;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidationsValidateRequestBodyRedeemablesItem" /> class.
        /// </summary>
        /// <param name="varObject">varObject.</param>
        /// <param name="id">id.</param>
        /// <param name="gift">gift.</param>
        /// <param name="reward">reward.</param>
        public ValidationsValidateRequestBodyRedeemablesItem(ObjectEnum? varObject = default(ObjectEnum?), string id = default(string), ValidationsValidateRequestBodyRedeemablesItemGift gift = default(ValidationsValidateRequestBodyRedeemablesItemGift), ValidationsValidateRequestBodyRedeemablesItemReward reward = default(ValidationsValidateRequestBodyRedeemablesItemReward))
        {
            this._Object = varObject;
            if (this.Object != null)
            {
                this._flagObject = true;
            }
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._Gift = gift;
            if (this.Gift != null)
            {
                this._flagGift = true;
            }
            this._Reward = reward;
            if (this.Reward != null)
            {
                this._flagReward = true;
            }
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Gets or Sets Gift
        /// </summary>
        [DataMember(Name = "gift", EmitDefaultValue = true)]
        public ValidationsValidateRequestBodyRedeemablesItemGift Gift
        {
            get{ return _Gift;}
            set
            {
                _Gift = value;
                _flagGift = true;
            }
        }
        private ValidationsValidateRequestBodyRedeemablesItemGift _Gift;
        private bool _flagGift;

        /// <summary>
        /// Returns false as Gift should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeGift()
        {
            return _flagGift;
        }
        /// <summary>
        /// Gets or Sets Reward
        /// </summary>
        [DataMember(Name = "reward", EmitDefaultValue = true)]
        public ValidationsValidateRequestBodyRedeemablesItemReward Reward
        {
            get{ return _Reward;}
            set
            {
                _Reward = value;
                _flagReward = true;
            }
        }
        private ValidationsValidateRequestBodyRedeemablesItemReward _Reward;
        private bool _flagReward;

        /// <summary>
        /// Returns false as Reward should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeReward()
        {
            return _flagReward;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ValidationsValidateRequestBodyRedeemablesItem {\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Gift: ").Append(Gift).Append("\n");
            sb.Append("  Reward: ").Append(Reward).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
