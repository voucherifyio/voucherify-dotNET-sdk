/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Resource moved to the bin, i.e. a campaign, product, SKU, or voucher.
    /// </summary>
    [DataContract(Name = "TrashBinItem")]
    public partial class TrashBinItem : IValidatableObject
    {
        /// <summary>
        /// Type of the resource moved to the bin.
        /// </summary>
        /// <value>Type of the resource moved to the bin.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ResourceTypeEnum
        {
            /// <summary>
            /// Enum Campaign for value: campaign
            /// </summary>
            [EnumMember(Value = "campaign")]
            Campaign = 1,

            /// <summary>
            /// Enum Product for value: product
            /// </summary>
            [EnumMember(Value = "product")]
            Product = 2,

            /// <summary>
            /// Enum Sku for value: sku
            /// </summary>
            [EnumMember(Value = "sku")]
            Sku = 3,

            /// <summary>
            /// Enum Voucher for value: voucher
            /// </summary>
            [EnumMember(Value = "voucher")]
            Voucher = 4
        }


        /// <summary>
        /// Type of the resource moved to the bin.
        /// </summary>
        /// <value>Type of the resource moved to the bin.</value>
        /*
        <example>voucher</example>
        */

        [DataMember(Name = "resource_type", EmitDefaultValue = true)]
        public ResourceTypeEnum? ResourceType
        {
            get{ return _ResourceType;}
            set
            {
                _ResourceType = value;
                _flagResourceType = true;
            }
        }
        private ResourceTypeEnum? _ResourceType;
        private bool _flagResourceType;

        /// <summary>
        /// Returns false as ResourceType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceType()
        {
            return _flagResourceType;
        }
        /// <summary>
        /// The type of the object represented by JSON. It is equal to the &#x60;resource_type&#x60;.
        /// </summary>
        /// <value>The type of the object represented by JSON. It is equal to the &#x60;resource_type&#x60;.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum Campaign for value: campaign
            /// </summary>
            [EnumMember(Value = "campaign")]
            Campaign = 1,

            /// <summary>
            /// Enum Product for value: product
            /// </summary>
            [EnumMember(Value = "product")]
            Product = 2,

            /// <summary>
            /// Enum Sku for value: sku
            /// </summary>
            [EnumMember(Value = "sku")]
            Sku = 3,

            /// <summary>
            /// Enum Voucher for value: voucher
            /// </summary>
            [EnumMember(Value = "voucher")]
            Voucher = 4
        }


        /// <summary>
        /// The type of the object represented by JSON. It is equal to the &#x60;resource_type&#x60;.
        /// </summary>
        /// <value>The type of the object represented by JSON. It is equal to the &#x60;resource_type&#x60;.</value>
        /*
        <example>voucher</example>
        */

        [DataMember(Name = "object", EmitDefaultValue = true)]
        public ObjectEnum? Object
        {
            get{ return _Object;}
            set
            {
                _Object = value;
                _flagObject = true;
            }
        }
        private ObjectEnum? _Object;
        private bool _flagObject;

        /// <summary>
        /// Returns false as Object should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObject()
        {
            return _flagObject;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="TrashBinItem" /> class.
        /// </summary>
        /// <param name="id">Unique identifier of the trash bin entry. It should not be confused with the ID of the resource moved to the bin..</param>
        /// <param name="createdAt">Timestamp representing the date and time when the resource was moved to the bin. The value for this parameter is shown in the ISO 8601 format..</param>
        /// <param name="deletedByUserId">Unique identifier of the user who moved the resource to the bin. It returns a user ID if the resource was moved to the bin through an action in the website. It returns a &#x60;null&#x60; if the resource was deleted through the API..</param>
        /// <param name="resourceId">Unique identifier of the resource moved to the bin, i.e. an ID of a campaign, product, SKU, or voucher..</param>
        /// <param name="resourceType">Type of the resource moved to the bin..</param>
        /// <param name="resourceName">Name of the resouce moved to the bin. It is the name of the campaign, product or SKU, or the voucher code..</param>
        /// <param name="resourceParentId">Unique identifier of the parent resource. For a voucher, it is a campaign ID, except for standalone vouchers. For an SKU, it is the product ID. It returns &#x60;null&#x60; for campaigns and base products..</param>
        /// <param name="varObject">The type of the object represented by JSON. It is equal to the &#x60;resource_type&#x60;..</param>
        public TrashBinItem(string id = default(string), DateTimeOffset? createdAt = default(DateTimeOffset?), string deletedByUserId = default(string), string resourceId = default(string), ResourceTypeEnum? resourceType = default(ResourceTypeEnum?), string resourceName = default(string), string resourceParentId = default(string), ObjectEnum? varObject = default(ObjectEnum?))
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
            this._DeletedByUserId = deletedByUserId;
            if (this.DeletedByUserId != null)
            {
                this._flagDeletedByUserId = true;
            }
            this._ResourceId = resourceId;
            if (this.ResourceId != null)
            {
                this._flagResourceId = true;
            }
            this._ResourceType = resourceType;
            if (this.ResourceType != null)
            {
                this._flagResourceType = true;
            }
            this._ResourceName = resourceName;
            if (this.ResourceName != null)
            {
                this._flagResourceName = true;
            }
            this._ResourceParentId = resourceParentId;
            if (this.ResourceParentId != null)
            {
                this._flagResourceParentId = true;
            }
            this._Object = varObject;
            if (this.Object != null)
            {
                this._flagObject = true;
            }
        }

        /// <summary>
        /// Unique identifier of the trash bin entry. It should not be confused with the ID of the resource moved to the bin.
        /// </summary>
        /// <value>Unique identifier of the trash bin entry. It should not be confused with the ID of the resource moved to the bin.</value>
        /*
        <example>tbe_0e8213a0a78020ec64</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Timestamp representing the date and time when the resource was moved to the bin. The value for this parameter is shown in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the resource was moved to the bin. The value for this parameter is shown in the ISO 8601 format.</value>
        /*
        <example>2024-03-27T19:24:26.142Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public DateTimeOffset? CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private DateTimeOffset? _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Unique identifier of the user who moved the resource to the bin. It returns a user ID if the resource was moved to the bin through an action in the website. It returns a &#x60;null&#x60; if the resource was deleted through the API.
        /// </summary>
        /// <value>Unique identifier of the user who moved the resource to the bin. It returns a user ID if the resource was moved to the bin through an action in the website. It returns a &#x60;null&#x60; if the resource was deleted through the API.</value>
        /*
        <example>user_lNTg47u7Ip0Smgcm1k3ShHuUdH4qToNc</example>
        */
        [DataMember(Name = "deleted_by_user_id", EmitDefaultValue = true)]
        public string DeletedByUserId
        {
            get{ return _DeletedByUserId;}
            set
            {
                _DeletedByUserId = value;
                _flagDeletedByUserId = true;
            }
        }
        private string _DeletedByUserId;
        private bool _flagDeletedByUserId;

        /// <summary>
        /// Returns false as DeletedByUserId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDeletedByUserId()
        {
            return _flagDeletedByUserId;
        }
        /// <summary>
        /// Unique identifier of the resource moved to the bin, i.e. an ID of a campaign, product, SKU, or voucher.
        /// </summary>
        /// <value>Unique identifier of the resource moved to the bin, i.e. an ID of a campaign, product, SKU, or voucher.</value>
        /*
        <example>v_ZUFwkglCEWaEfXqkJYd3uogTEEHEEU8S</example>
        */
        [DataMember(Name = "resource_id", EmitDefaultValue = true)]
        public string ResourceId
        {
            get{ return _ResourceId;}
            set
            {
                _ResourceId = value;
                _flagResourceId = true;
            }
        }
        private string _ResourceId;
        private bool _flagResourceId;

        /// <summary>
        /// Returns false as ResourceId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceId()
        {
            return _flagResourceId;
        }
        /// <summary>
        /// Name of the resouce moved to the bin. It is the name of the campaign, product or SKU, or the voucher code.
        /// </summary>
        /// <value>Name of the resouce moved to the bin. It is the name of the campaign, product or SKU, or the voucher code.</value>
        /*
        <example>BLCKFRIDAY_2024</example>
        */
        [DataMember(Name = "resource_name", EmitDefaultValue = true)]
        public string ResourceName
        {
            get{ return _ResourceName;}
            set
            {
                _ResourceName = value;
                _flagResourceName = true;
            }
        }
        private string _ResourceName;
        private bool _flagResourceName;

        /// <summary>
        /// Returns false as ResourceName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceName()
        {
            return _flagResourceName;
        }
        /// <summary>
        /// Unique identifier of the parent resource. For a voucher, it is a campaign ID, except for standalone vouchers. For an SKU, it is the product ID. It returns &#x60;null&#x60; for campaigns and base products.
        /// </summary>
        /// <value>Unique identifier of the parent resource. For a voucher, it is a campaign ID, except for standalone vouchers. For an SKU, it is the product ID. It returns &#x60;null&#x60; for campaigns and base products.</value>
        /*
        <example>camp_snn0eQL0PYWl5b6lY6HQNPfb</example>
        */
        [DataMember(Name = "resource_parent_id", EmitDefaultValue = true)]
        public string ResourceParentId
        {
            get{ return _ResourceParentId;}
            set
            {
                _ResourceParentId = value;
                _flagResourceParentId = true;
            }
        }
        private string _ResourceParentId;
        private bool _flagResourceParentId;

        /// <summary>
        /// Returns false as ResourceParentId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceParentId()
        {
            return _flagResourceParentId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TrashBinItem {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  DeletedByUserId: ").Append(DeletedByUserId).Append("\n");
            sb.Append("  ResourceId: ").Append(ResourceId).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  ResourceName: ").Append(ResourceName).Append("\n");
            sb.Append("  ResourceParentId: ").Append(ResourceParentId).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
