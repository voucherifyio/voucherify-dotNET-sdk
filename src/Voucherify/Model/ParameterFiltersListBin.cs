/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// ParameterFiltersListBin
    /// </summary>
    [DataContract(Name = "ParameterFiltersListBin")]
    public partial class ParameterFiltersListBin : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Junction
        /// </summary>

        [DataMember(Name = "junction", EmitDefaultValue = true)]
        public Junction? Junction
        {
            get{ return _Junction;}
            set
            {
                _Junction = value;
                _flagJunction = true;
            }
        }
        private Junction? _Junction;
        private bool _flagJunction;

        /// <summary>
        /// Returns false as Junction should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeJunction()
        {
            return _flagJunction;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterFiltersListBin" /> class.
        /// </summary>
        /// <param name="junction">junction.</param>
        /// <param name="id">id.</param>
        /// <param name="resourceType">resourceType.</param>
        /// <param name="resourceName">resourceName.</param>
        /// <param name="resourceId">resourceId.</param>
        public ParameterFiltersListBin(Junction? junction = default(Junction?), ParameterFiltersListBinId id = default(ParameterFiltersListBinId), ParameterFiltersListBinResourceType resourceType = default(ParameterFiltersListBinResourceType), ParameterFiltersListBinResourceName resourceName = default(ParameterFiltersListBinResourceName), ParameterFiltersListBinResourceId resourceId = default(ParameterFiltersListBinResourceId))
        {
            this._Junction = junction;
            if (this.Junction != null)
            {
                this._flagJunction = true;
            }
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._ResourceType = resourceType;
            if (this.ResourceType != null)
            {
                this._flagResourceType = true;
            }
            this._ResourceName = resourceName;
            if (this.ResourceName != null)
            {
                this._flagResourceName = true;
            }
            this._ResourceId = resourceId;
            if (this.ResourceId != null)
            {
                this._flagResourceId = true;
            }
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public ParameterFiltersListBinId Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private ParameterFiltersListBinId _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Gets or Sets ResourceType
        /// </summary>
        [DataMember(Name = "resource_type", EmitDefaultValue = true)]
        public ParameterFiltersListBinResourceType ResourceType
        {
            get{ return _ResourceType;}
            set
            {
                _ResourceType = value;
                _flagResourceType = true;
            }
        }
        private ParameterFiltersListBinResourceType _ResourceType;
        private bool _flagResourceType;

        /// <summary>
        /// Returns false as ResourceType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceType()
        {
            return _flagResourceType;
        }
        /// <summary>
        /// Gets or Sets ResourceName
        /// </summary>
        [DataMember(Name = "resource_name", EmitDefaultValue = true)]
        public ParameterFiltersListBinResourceName ResourceName
        {
            get{ return _ResourceName;}
            set
            {
                _ResourceName = value;
                _flagResourceName = true;
            }
        }
        private ParameterFiltersListBinResourceName _ResourceName;
        private bool _flagResourceName;

        /// <summary>
        /// Returns false as ResourceName should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceName()
        {
            return _flagResourceName;
        }
        /// <summary>
        /// Gets or Sets ResourceId
        /// </summary>
        [DataMember(Name = "resource_id", EmitDefaultValue = true)]
        public ParameterFiltersListBinResourceId ResourceId
        {
            get{ return _ResourceId;}
            set
            {
                _ResourceId = value;
                _flagResourceId = true;
            }
        }
        private ParameterFiltersListBinResourceId _ResourceId;
        private bool _flagResourceId;

        /// <summary>
        /// Returns false as ResourceId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeResourceId()
        {
            return _flagResourceId;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ParameterFiltersListBin {\n");
            sb.Append("  Junction: ").Append(Junction).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ResourceType: ").Append(ResourceType).Append("\n");
            sb.Append("  ResourceName: ").Append(ResourceName).Append("\n");
            sb.Append("  ResourceId: ").Append(ResourceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
