/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// ParameterFiltersListCampaigns
    /// </summary>
    [DataContract(Name = "ParameterFiltersListCampaigns")]
    public partial class ParameterFiltersListCampaigns : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Junction
        /// </summary>

        [DataMember(Name = "junction", EmitDefaultValue = true)]
        public Junction? Junction
        {
            get{ return _Junction;}
            set
            {
                _Junction = value;
                _flagJunction = true;
            }
        }
        private Junction? _Junction;
        private bool _flagJunction;

        /// <summary>
        /// Returns false as Junction should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeJunction()
        {
            return _flagJunction;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ParameterFiltersListCampaigns" /> class.
        /// </summary>
        /// <param name="campaigns">campaigns.</param>
        /// <param name="campaignsId">campaignsId.</param>
        /// <param name="campaignStatus">campaignStatus.</param>
        /// <param name="status">status.</param>
        /// <param name="active">active.</param>
        /// <param name="isReferralCode">isReferralCode.</param>
        /// <param name="validityTimeframe">validityTimeframe.</param>
        /// <param name="voucherType">voucherType.</param>
        /// <param name="categories">categories.</param>
        /// <param name="categoryIds">categoryIds.</param>
        /// <param name="type">type.</param>
        /// <param name="createdDate">createdDate.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="expirationDate">expirationDate.</param>
        /// <param name="validityDayOfWeek">validityDayOfWeek.</param>
        /// <param name="junction">junction.</param>
        public ParameterFiltersListCampaigns(ParameterFiltersListCampaignsCampaigns campaigns = default(ParameterFiltersListCampaignsCampaigns), ParameterFiltersListCampaignsCampaignsId campaignsId = default(ParameterFiltersListCampaignsCampaignsId), ParameterFiltersListCampaignsCampaignStatus campaignStatus = default(ParameterFiltersListCampaignsCampaignStatus), ParameterFiltersListCampaignsStatus status = default(ParameterFiltersListCampaignsStatus), ParameterFiltersListCampaignsActive active = default(ParameterFiltersListCampaignsActive), ParameterFiltersListCampaignsIsReferralCode isReferralCode = default(ParameterFiltersListCampaignsIsReferralCode), ParameterFiltersListCampaignsValidityTimeframe validityTimeframe = default(ParameterFiltersListCampaignsValidityTimeframe), ParameterFiltersListCampaignsVoucherType voucherType = default(ParameterFiltersListCampaignsVoucherType), ParameterFiltersListCampaignsCategories categories = default(ParameterFiltersListCampaignsCategories), ParameterFiltersListCampaignsCategoryIds categoryIds = default(ParameterFiltersListCampaignsCategoryIds), ParameterFiltersListCampaignsType type = default(ParameterFiltersListCampaignsType), ParameterFiltersListCampaignsCreatedDate createdDate = default(ParameterFiltersListCampaignsCreatedDate), ParameterFiltersListCampaignsUpdatedAt updatedAt = default(ParameterFiltersListCampaignsUpdatedAt), ParameterFiltersListCampaignsStartDate startDate = default(ParameterFiltersListCampaignsStartDate), ParameterFiltersListCampaignsExpirationDate expirationDate = default(ParameterFiltersListCampaignsExpirationDate), ParameterFiltersListCampaignsValidityDayOfWeek validityDayOfWeek = default(ParameterFiltersListCampaignsValidityDayOfWeek), Junction? junction = default(Junction?))
        {
            this._Campaigns = campaigns;
            if (this.Campaigns != null)
            {
                this._flagCampaigns = true;
            }
            this._CampaignsId = campaignsId;
            if (this.CampaignsId != null)
            {
                this._flagCampaignsId = true;
            }
            this._CampaignStatus = campaignStatus;
            if (this.CampaignStatus != null)
            {
                this._flagCampaignStatus = true;
            }
            this._Status = status;
            if (this.Status != null)
            {
                this._flagStatus = true;
            }
            this._Active = active;
            if (this.Active != null)
            {
                this._flagActive = true;
            }
            this._IsReferralCode = isReferralCode;
            if (this.IsReferralCode != null)
            {
                this._flagIsReferralCode = true;
            }
            this._ValidityTimeframe = validityTimeframe;
            if (this.ValidityTimeframe != null)
            {
                this._flagValidityTimeframe = true;
            }
            this._VoucherType = voucherType;
            if (this.VoucherType != null)
            {
                this._flagVoucherType = true;
            }
            this._Categories = categories;
            if (this.Categories != null)
            {
                this._flagCategories = true;
            }
            this._CategoryIds = categoryIds;
            if (this.CategoryIds != null)
            {
                this._flagCategoryIds = true;
            }
            this._Type = type;
            if (this.Type != null)
            {
                this._flagType = true;
            }
            this._CreatedDate = createdDate;
            if (this.CreatedDate != null)
            {
                this._flagCreatedDate = true;
            }
            this._UpdatedAt = updatedAt;
            if (this.UpdatedAt != null)
            {
                this._flagUpdatedAt = true;
            }
            this._StartDate = startDate;
            if (this.StartDate != null)
            {
                this._flagStartDate = true;
            }
            this._ExpirationDate = expirationDate;
            if (this.ExpirationDate != null)
            {
                this._flagExpirationDate = true;
            }
            this._ValidityDayOfWeek = validityDayOfWeek;
            if (this.ValidityDayOfWeek != null)
            {
                this._flagValidityDayOfWeek = true;
            }
            this._Junction = junction;
            if (this.Junction != null)
            {
                this._flagJunction = true;
            }
        }

        /// <summary>
        /// Gets or Sets Campaigns
        /// </summary>
        [DataMember(Name = "campaigns", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsCampaigns Campaigns
        {
            get{ return _Campaigns;}
            set
            {
                _Campaigns = value;
                _flagCampaigns = true;
            }
        }
        private ParameterFiltersListCampaignsCampaigns _Campaigns;
        private bool _flagCampaigns;

        /// <summary>
        /// Returns false as Campaigns should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaigns()
        {
            return _flagCampaigns;
        }
        /// <summary>
        /// Gets or Sets CampaignsId
        /// </summary>
        [DataMember(Name = "campaigns_id", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsCampaignsId CampaignsId
        {
            get{ return _CampaignsId;}
            set
            {
                _CampaignsId = value;
                _flagCampaignsId = true;
            }
        }
        private ParameterFiltersListCampaignsCampaignsId _CampaignsId;
        private bool _flagCampaignsId;

        /// <summary>
        /// Returns false as CampaignsId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignsId()
        {
            return _flagCampaignsId;
        }
        /// <summary>
        /// Gets or Sets CampaignStatus
        /// </summary>
        [DataMember(Name = "campaign_status", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsCampaignStatus CampaignStatus
        {
            get{ return _CampaignStatus;}
            set
            {
                _CampaignStatus = value;
                _flagCampaignStatus = true;
            }
        }
        private ParameterFiltersListCampaignsCampaignStatus _CampaignStatus;
        private bool _flagCampaignStatus;

        /// <summary>
        /// Returns false as CampaignStatus should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignStatus()
        {
            return _flagCampaignStatus;
        }
        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsStatus Status
        {
            get{ return _Status;}
            set
            {
                _Status = value;
                _flagStatus = true;
            }
        }
        private ParameterFiltersListCampaignsStatus _Status;
        private bool _flagStatus;

        /// <summary>
        /// Returns false as Status should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeStatus()
        {
            return _flagStatus;
        }
        /// <summary>
        /// Gets or Sets Active
        /// </summary>
        [DataMember(Name = "active", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsActive Active
        {
            get{ return _Active;}
            set
            {
                _Active = value;
                _flagActive = true;
            }
        }
        private ParameterFiltersListCampaignsActive _Active;
        private bool _flagActive;

        /// <summary>
        /// Returns false as Active should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeActive()
        {
            return _flagActive;
        }
        /// <summary>
        /// Gets or Sets IsReferralCode
        /// </summary>
        [DataMember(Name = "is_referral_code", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsIsReferralCode IsReferralCode
        {
            get{ return _IsReferralCode;}
            set
            {
                _IsReferralCode = value;
                _flagIsReferralCode = true;
            }
        }
        private ParameterFiltersListCampaignsIsReferralCode _IsReferralCode;
        private bool _flagIsReferralCode;

        /// <summary>
        /// Returns false as IsReferralCode should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIsReferralCode()
        {
            return _flagIsReferralCode;
        }
        /// <summary>
        /// Gets or Sets ValidityTimeframe
        /// </summary>
        [DataMember(Name = "validity_timeframe", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsValidityTimeframe ValidityTimeframe
        {
            get{ return _ValidityTimeframe;}
            set
            {
                _ValidityTimeframe = value;
                _flagValidityTimeframe = true;
            }
        }
        private ParameterFiltersListCampaignsValidityTimeframe _ValidityTimeframe;
        private bool _flagValidityTimeframe;

        /// <summary>
        /// Returns false as ValidityTimeframe should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeValidityTimeframe()
        {
            return _flagValidityTimeframe;
        }
        /// <summary>
        /// Gets or Sets VoucherType
        /// </summary>
        [DataMember(Name = "voucher_type", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsVoucherType VoucherType
        {
            get{ return _VoucherType;}
            set
            {
                _VoucherType = value;
                _flagVoucherType = true;
            }
        }
        private ParameterFiltersListCampaignsVoucherType _VoucherType;
        private bool _flagVoucherType;

        /// <summary>
        /// Returns false as VoucherType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeVoucherType()
        {
            return _flagVoucherType;
        }
        /// <summary>
        /// Gets or Sets Categories
        /// </summary>
        [DataMember(Name = "categories", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsCategories Categories
        {
            get{ return _Categories;}
            set
            {
                _Categories = value;
                _flagCategories = true;
            }
        }
        private ParameterFiltersListCampaignsCategories _Categories;
        private bool _flagCategories;

        /// <summary>
        /// Returns false as Categories should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCategories()
        {
            return _flagCategories;
        }
        /// <summary>
        /// Gets or Sets CategoryIds
        /// </summary>
        [DataMember(Name = "category_ids", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsCategoryIds CategoryIds
        {
            get{ return _CategoryIds;}
            set
            {
                _CategoryIds = value;
                _flagCategoryIds = true;
            }
        }
        private ParameterFiltersListCampaignsCategoryIds _CategoryIds;
        private bool _flagCategoryIds;

        /// <summary>
        /// Returns false as CategoryIds should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCategoryIds()
        {
            return _flagCategoryIds;
        }
        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsType Type
        {
            get{ return _Type;}
            set
            {
                _Type = value;
                _flagType = true;
            }
        }
        private ParameterFiltersListCampaignsType _Type;
        private bool _flagType;

        /// <summary>
        /// Returns false as Type should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeType()
        {
            return _flagType;
        }
        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name = "created_date", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsCreatedDate CreatedDate
        {
            get{ return _CreatedDate;}
            set
            {
                _CreatedDate = value;
                _flagCreatedDate = true;
            }
        }
        private ParameterFiltersListCampaignsCreatedDate _CreatedDate;
        private bool _flagCreatedDate;

        /// <summary>
        /// Returns false as CreatedDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedDate()
        {
            return _flagCreatedDate;
        }
        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updated_at", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsUpdatedAt UpdatedAt
        {
            get{ return _UpdatedAt;}
            set
            {
                _UpdatedAt = value;
                _flagUpdatedAt = true;
            }
        }
        private ParameterFiltersListCampaignsUpdatedAt _UpdatedAt;
        private bool _flagUpdatedAt;

        /// <summary>
        /// Returns false as UpdatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUpdatedAt()
        {
            return _flagUpdatedAt;
        }
        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name = "start_date", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsStartDate StartDate
        {
            get{ return _StartDate;}
            set
            {
                _StartDate = value;
                _flagStartDate = true;
            }
        }
        private ParameterFiltersListCampaignsStartDate _StartDate;
        private bool _flagStartDate;

        /// <summary>
        /// Returns false as StartDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeStartDate()
        {
            return _flagStartDate;
        }
        /// <summary>
        /// Gets or Sets ExpirationDate
        /// </summary>
        [DataMember(Name = "expiration_date", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsExpirationDate ExpirationDate
        {
            get{ return _ExpirationDate;}
            set
            {
                _ExpirationDate = value;
                _flagExpirationDate = true;
            }
        }
        private ParameterFiltersListCampaignsExpirationDate _ExpirationDate;
        private bool _flagExpirationDate;

        /// <summary>
        /// Returns false as ExpirationDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeExpirationDate()
        {
            return _flagExpirationDate;
        }
        /// <summary>
        /// Gets or Sets ValidityDayOfWeek
        /// </summary>
        [DataMember(Name = "validity_day_of_week", EmitDefaultValue = true)]
        public ParameterFiltersListCampaignsValidityDayOfWeek ValidityDayOfWeek
        {
            get{ return _ValidityDayOfWeek;}
            set
            {
                _ValidityDayOfWeek = value;
                _flagValidityDayOfWeek = true;
            }
        }
        private ParameterFiltersListCampaignsValidityDayOfWeek _ValidityDayOfWeek;
        private bool _flagValidityDayOfWeek;

        /// <summary>
        /// Returns false as ValidityDayOfWeek should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeValidityDayOfWeek()
        {
            return _flagValidityDayOfWeek;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ParameterFiltersListCampaigns {\n");
            sb.Append("  Campaigns: ").Append(Campaigns).Append("\n");
            sb.Append("  CampaignsId: ").Append(CampaignsId).Append("\n");
            sb.Append("  CampaignStatus: ").Append(CampaignStatus).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Active: ").Append(Active).Append("\n");
            sb.Append("  IsReferralCode: ").Append(IsReferralCode).Append("\n");
            sb.Append("  ValidityTimeframe: ").Append(ValidityTimeframe).Append("\n");
            sb.Append("  VoucherType: ").Append(VoucherType).Append("\n");
            sb.Append("  Categories: ").Append(Categories).Append("\n");
            sb.Append("  CategoryIds: ").Append(CategoryIds).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  ValidityDayOfWeek: ").Append(ValidityDayOfWeek).Append("\n");
            sb.Append("  Junction: ").Append(Junction).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
