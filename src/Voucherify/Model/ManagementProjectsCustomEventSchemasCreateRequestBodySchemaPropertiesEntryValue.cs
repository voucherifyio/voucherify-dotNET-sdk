/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Custom event metadata name.
    /// </summary>
    [DataContract(Name = "ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntry_value")]
    public partial class ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntryValue : IValidatableObject
    {
        /// <summary>
        /// Indicates the type of the custom event.
        /// </summary>
        /// <value>Indicates the type of the custom event.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum String for value: string
            /// </summary>
            [EnumMember(Value = "string")]
            String = 1,

            /// <summary>
            /// Enum Number for value: number
            /// </summary>
            [EnumMember(Value = "number")]
            Number = 2,

            /// <summary>
            /// Enum Date for value: date
            /// </summary>
            [EnumMember(Value = "date")]
            Date = 3,

            /// <summary>
            /// Enum Datetime for value: datetime
            /// </summary>
            [EnumMember(Value = "datetime")]
            Datetime = 4,

            /// <summary>
            /// Enum Boolean for value: boolean
            /// </summary>
            [EnumMember(Value = "boolean")]
            Boolean = 5
        }


        /// <summary>
        /// Indicates the type of the custom event.
        /// </summary>
        /// <value>Indicates the type of the custom event.</value>

        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public TypeEnum Type
        {
            get{ return _Type;}
            set
            {
                _Type = value;
                _flagType = true;
            }
        }
        private TypeEnum _Type;
        private bool _flagType;

        /// <summary>
        /// Returns false as Type should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeType()
        {
            return _flagType;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntryValue" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntryValue() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntryValue" /> class.
        /// </summary>
        /// <param name="type">Indicates the type of the custom event. (required).</param>
        /// <param name="optional">Indicates if this property is optional or not for the resource. (required).</param>
        /// <param name="deleted">Indicates if the property has been deleted from the schema. A deleted schema is inactive, but it can be restored..</param>
        public ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntryValue(TypeEnum type = default(TypeEnum), bool optional = default(bool), bool deleted = default(bool))
        {
            this._Type = type;
            this._Optional = optional;
            this._Deleted = deleted;
            if (this.Deleted != null)
            {
                this._flagDeleted = true;
            }
        }

        /// <summary>
        /// Indicates if this property is optional or not for the resource.
        /// </summary>
        /// <value>Indicates if this property is optional or not for the resource.</value>
        [DataMember(Name = "optional", IsRequired = true, EmitDefaultValue = true)]
        public bool Optional
        {
            get{ return _Optional;}
            set
            {
                _Optional = value;
                _flagOptional = true;
            }
        }
        private bool _Optional;
        private bool _flagOptional;

        /// <summary>
        /// Returns false as Optional should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeOptional()
        {
            return _flagOptional;
        }
        /// <summary>
        /// Indicates if the property has been deleted from the schema. A deleted schema is inactive, but it can be restored.
        /// </summary>
        /// <value>Indicates if the property has been deleted from the schema. A deleted schema is inactive, but it can be restored.</value>
        [DataMember(Name = "deleted", EmitDefaultValue = true)]
        public bool Deleted
        {
            get{ return _Deleted;}
            set
            {
                _Deleted = value;
                _flagDeleted = true;
            }
        }
        private bool _Deleted;
        private bool _flagDeleted;

        /// <summary>
        /// Returns false as Deleted should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDeleted()
        {
            return _flagDeleted;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManagementProjectsCustomEventSchemasCreateRequestBodySchemaPropertiesEntryValue {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Optional: ").Append(Optional).Append("\n");
            sb.Append("  Deleted: ").Append(Deleted).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
