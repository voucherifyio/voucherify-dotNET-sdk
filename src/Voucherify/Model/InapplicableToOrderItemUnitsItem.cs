/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// InapplicableToOrderItemUnitsItem
    /// </summary>
    [DataContract(Name = "InapplicableToOrderItemUnitsItem")]
    public partial class InapplicableToOrderItemUnitsItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InapplicableToOrderItemUnitsItem" /> class.
        /// </summary>
        /// <param name="index">Number assigned to the order line item in accordance with the order sent in the request..</param>
        /// <param name="units">Numbers of units in the order line covered by the discount; e.g. &#x60;2, 5, 8&#x60; for 10 units with the setting &#x60;\&quot;skip_initially\&quot;: 1&#x60;, &#x60;\&quot;repeat\&quot;: 3&#x60;. The counting of units starts from &#x60;1&#x60;..</param>
        public InapplicableToOrderItemUnitsItem(int index = default(int), List<int> units = default(List<int>))
        {
            this._Index = index;
            if (this.Index != null)
            {
                this._flagIndex = true;
            }
            this._Units = units;
            if (this.Units != null)
            {
                this._flagUnits = true;
            }
        }

        /// <summary>
        /// Number assigned to the order line item in accordance with the order sent in the request.
        /// </summary>
        /// <value>Number assigned to the order line item in accordance with the order sent in the request.</value>
        [DataMember(Name = "index", EmitDefaultValue = true)]
        public int Index
        {
            get{ return _Index;}
            set
            {
                _Index = value;
                _flagIndex = true;
            }
        }
        private int _Index;
        private bool _flagIndex;

        /// <summary>
        /// Returns false as Index should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeIndex()
        {
            return _flagIndex;
        }
        /// <summary>
        /// Numbers of units in the order line covered by the discount; e.g. &#x60;2, 5, 8&#x60; for 10 units with the setting &#x60;\&quot;skip_initially\&quot;: 1&#x60;, &#x60;\&quot;repeat\&quot;: 3&#x60;. The counting of units starts from &#x60;1&#x60;.
        /// </summary>
        /// <value>Numbers of units in the order line covered by the discount; e.g. &#x60;2, 5, 8&#x60; for 10 units with the setting &#x60;\&quot;skip_initially\&quot;: 1&#x60;, &#x60;\&quot;repeat\&quot;: 3&#x60;. The counting of units starts from &#x60;1&#x60;.</value>
        [DataMember(Name = "units", EmitDefaultValue = true)]
        public List<int> Units
        {
            get{ return _Units;}
            set
            {
                _Units = value;
                _flagUnits = true;
            }
        }
        private List<int> _Units;
        private bool _flagUnits;

        /// <summary>
        /// Returns false as Units should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUnits()
        {
            return _flagUnits;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InapplicableToOrderItemUnitsItem {\n");
            sb.Append("  Index: ").Append(Index).Append("\n");
            sb.Append("  Units: ").Append(Units).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Index (int) minimum
            if (this.Index < (int)0)
            {
                yield return new ValidationResult("Invalid value for Index, must be a value greater than or equal to 0.", new [] { "Index" });
            }

            yield break;
        }
    }

}
