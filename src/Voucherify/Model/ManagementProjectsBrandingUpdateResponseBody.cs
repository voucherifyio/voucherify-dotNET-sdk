/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Response body schema for **PUT** &#x60;/management/v1/projects/{projectId}/branding/{brandingId}&#x60;.
    /// </summary>
    [DataContract(Name = "ManagementProjectsBrandingUpdateResponseBody")]
    public partial class ManagementProjectsBrandingUpdateResponseBody : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ManagementProjectsBrandingUpdateResponseBody" /> class.
        /// </summary>
        /// <param name="id">Unique identifier of the brand configuration..</param>
        /// <param name="brand">brand.</param>
        /// <param name="address">address.</param>
        /// <param name="contact">contact.</param>
        /// <param name="cockpits">cockpits.</param>
        public ManagementProjectsBrandingUpdateResponseBody(string id = default(string), ManagementProjectsBrandingUpdateResponseBodyBrand brand = default(ManagementProjectsBrandingUpdateResponseBodyBrand), ManagementProjectsBrandingUpdateResponseBodyAddress address = default(ManagementProjectsBrandingUpdateResponseBodyAddress), ManagementProjectsBrandingUpdateResponseBodyContact contact = default(ManagementProjectsBrandingUpdateResponseBodyContact), ManagementProjectsBrandingUpdateResponseBodyCockpits cockpits = default(ManagementProjectsBrandingUpdateResponseBodyCockpits))
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._Brand = brand;
            if (this.Brand != null)
            {
                this._flagBrand = true;
            }
            this._Address = address;
            if (this.Address != null)
            {
                this._flagAddress = true;
            }
            this._Contact = contact;
            if (this.Contact != null)
            {
                this._flagContact = true;
            }
            this._Cockpits = cockpits;
            if (this.Cockpits != null)
            {
                this._flagCockpits = true;
            }
        }

        /// <summary>
        /// Unique identifier of the brand configuration.
        /// </summary>
        /// <value>Unique identifier of the brand configuration.</value>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Gets or Sets Brand
        /// </summary>
        [DataMember(Name = "brand", EmitDefaultValue = true)]
        public ManagementProjectsBrandingUpdateResponseBodyBrand Brand
        {
            get{ return _Brand;}
            set
            {
                _Brand = value;
                _flagBrand = true;
            }
        }
        private ManagementProjectsBrandingUpdateResponseBodyBrand _Brand;
        private bool _flagBrand;

        /// <summary>
        /// Returns false as Brand should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeBrand()
        {
            return _flagBrand;
        }
        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name = "address", EmitDefaultValue = true)]
        public ManagementProjectsBrandingUpdateResponseBodyAddress Address
        {
            get{ return _Address;}
            set
            {
                _Address = value;
                _flagAddress = true;
            }
        }
        private ManagementProjectsBrandingUpdateResponseBodyAddress _Address;
        private bool _flagAddress;

        /// <summary>
        /// Returns false as Address should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAddress()
        {
            return _flagAddress;
        }
        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name = "contact", EmitDefaultValue = true)]
        public ManagementProjectsBrandingUpdateResponseBodyContact Contact
        {
            get{ return _Contact;}
            set
            {
                _Contact = value;
                _flagContact = true;
            }
        }
        private ManagementProjectsBrandingUpdateResponseBodyContact _Contact;
        private bool _flagContact;

        /// <summary>
        /// Returns false as Contact should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeContact()
        {
            return _flagContact;
        }
        /// <summary>
        /// Gets or Sets Cockpits
        /// </summary>
        [DataMember(Name = "cockpits", EmitDefaultValue = true)]
        public ManagementProjectsBrandingUpdateResponseBodyCockpits Cockpits
        {
            get{ return _Cockpits;}
            set
            {
                _Cockpits = value;
                _flagCockpits = true;
            }
        }
        private ManagementProjectsBrandingUpdateResponseBodyCockpits _Cockpits;
        private bool _flagCockpits;

        /// <summary>
        /// Returns false as Cockpits should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCockpits()
        {
            return _flagCockpits;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ManagementProjectsBrandingUpdateResponseBody {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Brand: ").Append(Brand).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  Cockpits: ").Append(Cockpits).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
