/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Defines loyalty tier expiration date.
    /// </summary>
    [DataContract(Name = "LoyaltyTierExpiration")]
    public partial class LoyaltyTierExpiration : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LoyaltyTierExpiration" /> class.
        /// </summary>
        /// <param name="customerId">Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify..</param>
        /// <param name="campaignId">Unique campaign ID, assigned by Voucherify..</param>
        /// <param name="tierId">Unique tier ID, assigned by Voucherify..</param>
        /// <param name="startDate">Activation timestamp defines when the loyalty tier starts to be active in ISO 8601 format. Loyalty tier is inactive before this date..</param>
        /// <param name="expirationDate">Expiration timestamp defines when the loyalty tier expires in ISO 8601 format. Loyalty tier is inactive after this date..</param>
        /// <param name="createdAt">Timestamp representing the date and time when the loyalty tier was created. The value is shown in the ISO 8601 format..</param>
        /// <param name="updatedAt">Timestamp representing the date and time when the loyalty tier was updated. The value is shown in the ISO 8601 format..</param>
        public LoyaltyTierExpiration(string customerId = default(string), string campaignId = default(string), string tierId = default(string), string startDate = default(string), string expirationDate = default(string), DateTimeOffset? createdAt = default(DateTimeOffset?), DateTimeOffset? updatedAt = default(DateTimeOffset?))
        {
            this._CustomerId = customerId;
            if (this.CustomerId != null)
            {
                this._flagCustomerId = true;
            }
            this._CampaignId = campaignId;
            if (this.CampaignId != null)
            {
                this._flagCampaignId = true;
            }
            this._TierId = tierId;
            if (this.TierId != null)
            {
                this._flagTierId = true;
            }
            this._StartDate = startDate;
            if (this.StartDate != null)
            {
                this._flagStartDate = true;
            }
            this._ExpirationDate = expirationDate;
            if (this.ExpirationDate != null)
            {
                this._flagExpirationDate = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
            this._UpdatedAt = updatedAt;
            if (this.UpdatedAt != null)
            {
                this._flagUpdatedAt = true;
            }
        }

        /// <summary>
        /// Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.
        /// </summary>
        /// <value>Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.</value>
        /*
        <example>cust_7iUa6ICKyU6gH40dBU25kQU1</example>
        */
        [DataMember(Name = "customer_id", EmitDefaultValue = true)]
        public string CustomerId
        {
            get{ return _CustomerId;}
            set
            {
                _CustomerId = value;
                _flagCustomerId = true;
            }
        }
        private string _CustomerId;
        private bool _flagCustomerId;

        /// <summary>
        /// Returns false as CustomerId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCustomerId()
        {
            return _flagCustomerId;
        }
        /// <summary>
        /// Unique campaign ID, assigned by Voucherify.
        /// </summary>
        /// <value>Unique campaign ID, assigned by Voucherify.</value>
        /*
        <example>camp_rRsfatlwN7unSeUIJDCYedal</example>
        */
        [DataMember(Name = "campaign_id", EmitDefaultValue = true)]
        public string CampaignId
        {
            get{ return _CampaignId;}
            set
            {
                _CampaignId = value;
                _flagCampaignId = true;
            }
        }
        private string _CampaignId;
        private bool _flagCampaignId;

        /// <summary>
        /// Returns false as CampaignId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCampaignId()
        {
            return _flagCampaignId;
        }
        /// <summary>
        /// Unique tier ID, assigned by Voucherify.
        /// </summary>
        /// <value>Unique tier ID, assigned by Voucherify.</value>
        [DataMember(Name = "tier_id", EmitDefaultValue = true)]
        public string TierId
        {
            get{ return _TierId;}
            set
            {
                _TierId = value;
                _flagTierId = true;
            }
        }
        private string _TierId;
        private bool _flagTierId;

        /// <summary>
        /// Returns false as TierId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTierId()
        {
            return _flagTierId;
        }
        /// <summary>
        /// Activation timestamp defines when the loyalty tier starts to be active in ISO 8601 format. Loyalty tier is inactive before this date.
        /// </summary>
        /// <value>Activation timestamp defines when the loyalty tier starts to be active in ISO 8601 format. Loyalty tier is inactive before this date.</value>
        [DataMember(Name = "start_date", EmitDefaultValue = true)]
        public string StartDate
        {
            get{ return _StartDate;}
            set
            {
                _StartDate = value;
                _flagStartDate = true;
            }
        }
        private string _StartDate;
        private bool _flagStartDate;

        /// <summary>
        /// Returns false as StartDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeStartDate()
        {
            return _flagStartDate;
        }
        /// <summary>
        /// Expiration timestamp defines when the loyalty tier expires in ISO 8601 format. Loyalty tier is inactive after this date.
        /// </summary>
        /// <value>Expiration timestamp defines when the loyalty tier expires in ISO 8601 format. Loyalty tier is inactive after this date.</value>
        [DataMember(Name = "expiration_date", EmitDefaultValue = true)]
        public string ExpirationDate
        {
            get{ return _ExpirationDate;}
            set
            {
                _ExpirationDate = value;
                _flagExpirationDate = true;
            }
        }
        private string _ExpirationDate;
        private bool _flagExpirationDate;

        /// <summary>
        /// Returns false as ExpirationDate should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeExpirationDate()
        {
            return _flagExpirationDate;
        }
        /// <summary>
        /// Timestamp representing the date and time when the loyalty tier was created. The value is shown in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the loyalty tier was created. The value is shown in the ISO 8601 format.</value>
        /*
        <example>2021-12-22T10:13:06.487Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public DateTimeOffset? CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private DateTimeOffset? _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Timestamp representing the date and time when the loyalty tier was updated. The value is shown in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the loyalty tier was updated. The value is shown in the ISO 8601 format.</value>
        /*
        <example>2021-12-22T10:13:06.487Z</example>
        */
        [DataMember(Name = "updated_at", EmitDefaultValue = true)]
        public DateTimeOffset? UpdatedAt
        {
            get{ return _UpdatedAt;}
            set
            {
                _UpdatedAt = value;
                _flagUpdatedAt = true;
            }
        }
        private DateTimeOffset? _UpdatedAt;
        private bool _flagUpdatedAt;

        /// <summary>
        /// Returns false as UpdatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUpdatedAt()
        {
            return _flagUpdatedAt;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LoyaltyTierExpiration {\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  CampaignId: ").Append(CampaignId).Append("\n");
            sb.Append("  TierId: ").Append(TierId).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
