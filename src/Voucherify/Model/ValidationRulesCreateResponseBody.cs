/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Response body schema for **POST** &#x60;v1/validation-rules&#x60;.
    /// </summary>
    [DataContract(Name = "ValidationRulesCreateResponseBody")]
    public partial class ValidationRulesCreateResponseBody : IValidatableObject
    {
        /// <summary>
        /// Type of validation rule.
        /// </summary>
        /// <value>Type of validation rule.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum Expression for value: expression
            /// </summary>
            [EnumMember(Value = "expression")]
            Expression = 1,

            /// <summary>
            /// Enum Basic for value: basic
            /// </summary>
            [EnumMember(Value = "basic")]
            Basic = 2,

            /// <summary>
            /// Enum Advanced for value: advanced
            /// </summary>
            [EnumMember(Value = "advanced")]
            Advanced = 3,

            /// <summary>
            /// Enum Complex for value: complex
            /// </summary>
            [EnumMember(Value = "complex")]
            Complex = 4
        }


        /// <summary>
        /// Type of validation rule.
        /// </summary>
        /// <value>Type of validation rule.</value>

        [DataMember(Name = "type", EmitDefaultValue = true)]
        public TypeEnum? Type
        {
            get{ return _Type;}
            set
            {
                _Type = value;
                _flagType = true;
            }
        }
        private TypeEnum? _Type;
        private bool _flagType;

        /// <summary>
        /// Returns false as Type should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeType()
        {
            return _flagType;
        }
        /// <summary>
        /// Validation rule context type.    | **Context Type** | **Definition** | |:- --|:- --| | earning_rule.order.paid |  | | earning_rule.custom_event |  | | earning_rule.customer.segment.entered |  | | campaign.discount_coupons |  | | campaign.discount_coupons.discount.apply_to_order |  | | campaign.discount_coupons.discount.apply_to_items |  | | campaign.discount_coupons.discount.apply_to_items_proportionally |  | | campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  | | campaign.discount_coupons.discount.fixed.apply_to_items |  | | campaign.gift_vouchers |  | | campaign.gift_vouchers.gift.apply_to_order |  | | campaign.gift_vouchers.gift.apply_to_items |  | | campaign.referral_program |  | | campaign.referral_program.discount.apply_to_order |  | | campaign.referral_program.discount.apply_to_items |  | | campaign.referral_program.discount.apply_to_items_proportionally |  | | campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  | | campaign.referral_program.discount.fixed.apply_to_items |  | | campaign.promotion |  | | campaign.promotion.discount.apply_to_order |  | | campaign.promotion.discount.apply_to_items |  | | campaign.promotion.discount.apply_to_items_proportionally |  | | campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  | | campaign.promotion.discount.fixed.apply_to_items |  | | campaign.loyalty_program |  | | voucher.discount_voucher |  | | voucher.discount_voucher.discount.apply_to_order |  | | voucher.discount_voucher.discount.apply_to_items |  | | voucher.discount_voucher.discount.apply_to_items_proportionally |  | | voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  | | voucher.discount_voucher.discount.fixed.apply_to_items |  | | voucher.gift_voucher |  | | voucher.gift_voucher.gift.apply_to_order |  | | voucher.gift_voucher.gift.apply_to_items |  | | voucher.loyalty_card |  | | distribution.custom_event |  | | reward_assignment.pay_with_points |  | | global |  |
        /// </summary>
        /// <value>Validation rule context type.    | **Context Type** | **Definition** | |:- --|:- --| | earning_rule.order.paid |  | | earning_rule.custom_event |  | | earning_rule.customer.segment.entered |  | | campaign.discount_coupons |  | | campaign.discount_coupons.discount.apply_to_order |  | | campaign.discount_coupons.discount.apply_to_items |  | | campaign.discount_coupons.discount.apply_to_items_proportionally |  | | campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  | | campaign.discount_coupons.discount.fixed.apply_to_items |  | | campaign.gift_vouchers |  | | campaign.gift_vouchers.gift.apply_to_order |  | | campaign.gift_vouchers.gift.apply_to_items |  | | campaign.referral_program |  | | campaign.referral_program.discount.apply_to_order |  | | campaign.referral_program.discount.apply_to_items |  | | campaign.referral_program.discount.apply_to_items_proportionally |  | | campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  | | campaign.referral_program.discount.fixed.apply_to_items |  | | campaign.promotion |  | | campaign.promotion.discount.apply_to_order |  | | campaign.promotion.discount.apply_to_items |  | | campaign.promotion.discount.apply_to_items_proportionally |  | | campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  | | campaign.promotion.discount.fixed.apply_to_items |  | | campaign.loyalty_program |  | | voucher.discount_voucher |  | | voucher.discount_voucher.discount.apply_to_order |  | | voucher.discount_voucher.discount.apply_to_items |  | | voucher.discount_voucher.discount.apply_to_items_proportionally |  | | voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  | | voucher.discount_voucher.discount.fixed.apply_to_items |  | | voucher.gift_voucher |  | | voucher.gift_voucher.gift.apply_to_order |  | | voucher.gift_voucher.gift.apply_to_items |  | | voucher.loyalty_card |  | | distribution.custom_event |  | | reward_assignment.pay_with_points |  | | global |  |</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ContextTypeEnum
        {
            /// <summary>
            /// Enum EarningRuleOrderPaid for value: earning_rule.order.paid
            /// </summary>
            [EnumMember(Value = "earning_rule.order.paid")]
            EarningRuleOrderPaid = 1,

            /// <summary>
            /// Enum EarningRuleCustomEvent for value: earning_rule.custom_event
            /// </summary>
            [EnumMember(Value = "earning_rule.custom_event")]
            EarningRuleCustomEvent = 2,

            /// <summary>
            /// Enum EarningRuleCustomerSegmentEntered for value: earning_rule.customer.segment.entered
            /// </summary>
            [EnumMember(Value = "earning_rule.customer.segment.entered")]
            EarningRuleCustomerSegmentEntered = 3,

            /// <summary>
            /// Enum EarningRuleCustomerTierJoined for value: earning_rule.customer.tier.joined
            /// </summary>
            [EnumMember(Value = "earning_rule.customer.tier.joined")]
            EarningRuleCustomerTierJoined = 4,

            /// <summary>
            /// Enum EarningRuleCustomerTierLeft for value: earning_rule.customer.tier.left
            /// </summary>
            [EnumMember(Value = "earning_rule.customer.tier.left")]
            EarningRuleCustomerTierLeft = 5,

            /// <summary>
            /// Enum EarningRuleCustomerTierUpgraded for value: earning_rule.customer.tier.upgraded
            /// </summary>
            [EnumMember(Value = "earning_rule.customer.tier.upgraded")]
            EarningRuleCustomerTierUpgraded = 6,

            /// <summary>
            /// Enum EarningRuleCustomerTierDowngraded for value: earning_rule.customer.tier.downgraded
            /// </summary>
            [EnumMember(Value = "earning_rule.customer.tier.downgraded")]
            EarningRuleCustomerTierDowngraded = 7,

            /// <summary>
            /// Enum EarningRuleCustomerTierProlonged for value: earning_rule.customer.tier.prolonged
            /// </summary>
            [EnumMember(Value = "earning_rule.customer.tier.prolonged")]
            EarningRuleCustomerTierProlonged = 8,

            /// <summary>
            /// Enum CampaignDiscountCoupons for value: campaign.discount_coupons
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons")]
            CampaignDiscountCoupons = 9,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountApplyToOrder for value: campaign.discount_coupons.discount.apply_to_order
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.apply_to_order")]
            CampaignDiscountCouponsDiscountApplyToOrder = 10,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountApplyToItems for value: campaign.discount_coupons.discount.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.apply_to_items")]
            CampaignDiscountCouponsDiscountApplyToItems = 11,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountApplyToItemsProportionally for value: campaign.discount_coupons.discount.apply_to_items_proportionally
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.apply_to_items_proportionally")]
            CampaignDiscountCouponsDiscountApplyToItemsProportionally = 12,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountApplyToItemsProportionallyByQuantity for value: campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity")]
            CampaignDiscountCouponsDiscountApplyToItemsProportionallyByQuantity = 13,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountApplyToItemsByQuantity for value: campaign.discount_coupons.discount.apply_to_items_by_quantity
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.apply_to_items_by_quantity")]
            CampaignDiscountCouponsDiscountApplyToItemsByQuantity = 14,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountFixedApplyToItems for value: campaign.discount_coupons.discount.fixed.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.fixed.apply_to_items")]
            CampaignDiscountCouponsDiscountFixedApplyToItems = 15,

            /// <summary>
            /// Enum CampaignDiscountCouponsDiscountPercentApplyToItems for value: campaign.discount_coupons.discount.percent.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.discount_coupons.discount.percent.apply_to_items")]
            CampaignDiscountCouponsDiscountPercentApplyToItems = 16,

            /// <summary>
            /// Enum CampaignGiftVouchers for value: campaign.gift_vouchers
            /// </summary>
            [EnumMember(Value = "campaign.gift_vouchers")]
            CampaignGiftVouchers = 17,

            /// <summary>
            /// Enum CampaignGiftVouchersGiftApplyToOrder for value: campaign.gift_vouchers.gift.apply_to_order
            /// </summary>
            [EnumMember(Value = "campaign.gift_vouchers.gift.apply_to_order")]
            CampaignGiftVouchersGiftApplyToOrder = 18,

            /// <summary>
            /// Enum CampaignGiftVouchersGiftApplyToItems for value: campaign.gift_vouchers.gift.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.gift_vouchers.gift.apply_to_items")]
            CampaignGiftVouchersGiftApplyToItems = 19,

            /// <summary>
            /// Enum CampaignReferralProgram for value: campaign.referral_program
            /// </summary>
            [EnumMember(Value = "campaign.referral_program")]
            CampaignReferralProgram = 20,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountApplyToOrder for value: campaign.referral_program.discount.apply_to_order
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.apply_to_order")]
            CampaignReferralProgramDiscountApplyToOrder = 21,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountApplyToItems for value: campaign.referral_program.discount.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.apply_to_items")]
            CampaignReferralProgramDiscountApplyToItems = 22,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountApplyToItemsProportionally for value: campaign.referral_program.discount.apply_to_items_proportionally
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.apply_to_items_proportionally")]
            CampaignReferralProgramDiscountApplyToItemsProportionally = 23,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountApplyToItemsProportionallyByQuantity for value: campaign.referral_program.discount.apply_to_items_proportionally_by_quantity
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.apply_to_items_proportionally_by_quantity")]
            CampaignReferralProgramDiscountApplyToItemsProportionallyByQuantity = 24,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountApplyToItemsByQuantity for value: campaign.referral_program.discount.apply_to_items_by_quantity
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.apply_to_items_by_quantity")]
            CampaignReferralProgramDiscountApplyToItemsByQuantity = 25,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountFixedApplyToItems for value: campaign.referral_program.discount.fixed.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.fixed.apply_to_items")]
            CampaignReferralProgramDiscountFixedApplyToItems = 26,

            /// <summary>
            /// Enum CampaignReferralProgramDiscountPercentApplyToItems for value: campaign.referral_program.discount.percent.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.referral_program.discount.percent.apply_to_items")]
            CampaignReferralProgramDiscountPercentApplyToItems = 27,

            /// <summary>
            /// Enum CampaignPromotion for value: campaign.promotion
            /// </summary>
            [EnumMember(Value = "campaign.promotion")]
            CampaignPromotion = 28,

            /// <summary>
            /// Enum CampaignPromotionDiscountApplyToOrder for value: campaign.promotion.discount.apply_to_order
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.apply_to_order")]
            CampaignPromotionDiscountApplyToOrder = 29,

            /// <summary>
            /// Enum CampaignPromotionDiscountApplyToItems for value: campaign.promotion.discount.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.apply_to_items")]
            CampaignPromotionDiscountApplyToItems = 30,

            /// <summary>
            /// Enum CampaignPromotionDiscountApplyToItemsProportionally for value: campaign.promotion.discount.apply_to_items_proportionally
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.apply_to_items_proportionally")]
            CampaignPromotionDiscountApplyToItemsProportionally = 31,

            /// <summary>
            /// Enum CampaignPromotionDiscountApplyToItemsProportionallyByQuantity for value: campaign.promotion.discount.apply_to_items_proportionally_by_quantity
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.apply_to_items_proportionally_by_quantity")]
            CampaignPromotionDiscountApplyToItemsProportionallyByQuantity = 32,

            /// <summary>
            /// Enum CampaignPromotionDiscountApplyToItemsByQuantity for value: campaign.promotion.discount.apply_to_items_by_quantity
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.apply_to_items_by_quantity")]
            CampaignPromotionDiscountApplyToItemsByQuantity = 33,

            /// <summary>
            /// Enum CampaignPromotionDiscountFixedApplyToItems for value: campaign.promotion.discount.fixed.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.fixed.apply_to_items")]
            CampaignPromotionDiscountFixedApplyToItems = 34,

            /// <summary>
            /// Enum CampaignPromotionDiscountPercentApplyToItems for value: campaign.promotion.discount.percent.apply_to_items
            /// </summary>
            [EnumMember(Value = "campaign.promotion.discount.percent.apply_to_items")]
            CampaignPromotionDiscountPercentApplyToItems = 35,

            /// <summary>
            /// Enum CampaignLoyaltyProgram for value: campaign.loyalty_program
            /// </summary>
            [EnumMember(Value = "campaign.loyalty_program")]
            CampaignLoyaltyProgram = 36,

            /// <summary>
            /// Enum VoucherDiscountVoucher for value: voucher.discount_voucher
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher")]
            VoucherDiscountVoucher = 37,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountApplyToOrder for value: voucher.discount_voucher.discount.apply_to_order
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.apply_to_order")]
            VoucherDiscountVoucherDiscountApplyToOrder = 38,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountApplyToItems for value: voucher.discount_voucher.discount.apply_to_items
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.apply_to_items")]
            VoucherDiscountVoucherDiscountApplyToItems = 39,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountApplyToItemsProportionally for value: voucher.discount_voucher.discount.apply_to_items_proportionally
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.apply_to_items_proportionally")]
            VoucherDiscountVoucherDiscountApplyToItemsProportionally = 40,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountApplyToItemsProportionallyByQuantity for value: voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity")]
            VoucherDiscountVoucherDiscountApplyToItemsProportionallyByQuantity = 41,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountApplyToItemsByQuantity for value: voucher.discount_voucher.discount.apply_to_items_by_quantity
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.apply_to_items_by_quantity")]
            VoucherDiscountVoucherDiscountApplyToItemsByQuantity = 42,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountFixedApplyToItems for value: voucher.discount_voucher.discount.fixed.apply_to_items
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.fixed.apply_to_items")]
            VoucherDiscountVoucherDiscountFixedApplyToItems = 43,

            /// <summary>
            /// Enum VoucherDiscountVoucherDiscountPercentApplyToItems for value: voucher.discount_voucher.discount.percent.apply_to_items
            /// </summary>
            [EnumMember(Value = "voucher.discount_voucher.discount.percent.apply_to_items")]
            VoucherDiscountVoucherDiscountPercentApplyToItems = 44,

            /// <summary>
            /// Enum VoucherGiftVoucher for value: voucher.gift_voucher
            /// </summary>
            [EnumMember(Value = "voucher.gift_voucher")]
            VoucherGiftVoucher = 45,

            /// <summary>
            /// Enum VoucherGiftVoucherGiftApplyToOrder for value: voucher.gift_voucher.gift.apply_to_order
            /// </summary>
            [EnumMember(Value = "voucher.gift_voucher.gift.apply_to_order")]
            VoucherGiftVoucherGiftApplyToOrder = 46,

            /// <summary>
            /// Enum VoucherGiftVoucherGiftApplyToItems for value: voucher.gift_voucher.gift.apply_to_items
            /// </summary>
            [EnumMember(Value = "voucher.gift_voucher.gift.apply_to_items")]
            VoucherGiftVoucherGiftApplyToItems = 47,

            /// <summary>
            /// Enum VoucherLoyaltyCard for value: voucher.loyalty_card
            /// </summary>
            [EnumMember(Value = "voucher.loyalty_card")]
            VoucherLoyaltyCard = 48,

            /// <summary>
            /// Enum DistributionCustomEvent for value: distribution.custom_event
            /// </summary>
            [EnumMember(Value = "distribution.custom_event")]
            DistributionCustomEvent = 49,

            /// <summary>
            /// Enum DistributionOrderPaid for value: distribution.order.paid
            /// </summary>
            [EnumMember(Value = "distribution.order.paid")]
            DistributionOrderPaid = 50,

            /// <summary>
            /// Enum DistributionOrderCreated for value: distribution.order.created
            /// </summary>
            [EnumMember(Value = "distribution.order.created")]
            DistributionOrderCreated = 51,

            /// <summary>
            /// Enum DistributionOrderCanceled for value: distribution.order.canceled
            /// </summary>
            [EnumMember(Value = "distribution.order.canceled")]
            DistributionOrderCanceled = 52,

            /// <summary>
            /// Enum DistributionOrderUpdated for value: distribution.order.updated
            /// </summary>
            [EnumMember(Value = "distribution.order.updated")]
            DistributionOrderUpdated = 53,

            /// <summary>
            /// Enum RewardAssignmentPayWithPoints for value: reward_assignment.pay_with_points
            /// </summary>
            [EnumMember(Value = "reward_assignment.pay_with_points")]
            RewardAssignmentPayWithPoints = 54,

            /// <summary>
            /// Enum Global for value: global
            /// </summary>
            [EnumMember(Value = "global")]
            Global = 55
        }


        /// <summary>
        /// Validation rule context type.    | **Context Type** | **Definition** | |:- --|:- --| | earning_rule.order.paid |  | | earning_rule.custom_event |  | | earning_rule.customer.segment.entered |  | | campaign.discount_coupons |  | | campaign.discount_coupons.discount.apply_to_order |  | | campaign.discount_coupons.discount.apply_to_items |  | | campaign.discount_coupons.discount.apply_to_items_proportionally |  | | campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  | | campaign.discount_coupons.discount.fixed.apply_to_items |  | | campaign.gift_vouchers |  | | campaign.gift_vouchers.gift.apply_to_order |  | | campaign.gift_vouchers.gift.apply_to_items |  | | campaign.referral_program |  | | campaign.referral_program.discount.apply_to_order |  | | campaign.referral_program.discount.apply_to_items |  | | campaign.referral_program.discount.apply_to_items_proportionally |  | | campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  | | campaign.referral_program.discount.fixed.apply_to_items |  | | campaign.promotion |  | | campaign.promotion.discount.apply_to_order |  | | campaign.promotion.discount.apply_to_items |  | | campaign.promotion.discount.apply_to_items_proportionally |  | | campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  | | campaign.promotion.discount.fixed.apply_to_items |  | | campaign.loyalty_program |  | | voucher.discount_voucher |  | | voucher.discount_voucher.discount.apply_to_order |  | | voucher.discount_voucher.discount.apply_to_items |  | | voucher.discount_voucher.discount.apply_to_items_proportionally |  | | voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  | | voucher.discount_voucher.discount.fixed.apply_to_items |  | | voucher.gift_voucher |  | | voucher.gift_voucher.gift.apply_to_order |  | | voucher.gift_voucher.gift.apply_to_items |  | | voucher.loyalty_card |  | | distribution.custom_event |  | | reward_assignment.pay_with_points |  | | global |  |
        /// </summary>
        /// <value>Validation rule context type.    | **Context Type** | **Definition** | |:- --|:- --| | earning_rule.order.paid |  | | earning_rule.custom_event |  | | earning_rule.customer.segment.entered |  | | campaign.discount_coupons |  | | campaign.discount_coupons.discount.apply_to_order |  | | campaign.discount_coupons.discount.apply_to_items |  | | campaign.discount_coupons.discount.apply_to_items_proportionally |  | | campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  | | campaign.discount_coupons.discount.fixed.apply_to_items |  | | campaign.gift_vouchers |  | | campaign.gift_vouchers.gift.apply_to_order |  | | campaign.gift_vouchers.gift.apply_to_items |  | | campaign.referral_program |  | | campaign.referral_program.discount.apply_to_order |  | | campaign.referral_program.discount.apply_to_items |  | | campaign.referral_program.discount.apply_to_items_proportionally |  | | campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  | | campaign.referral_program.discount.fixed.apply_to_items |  | | campaign.promotion |  | | campaign.promotion.discount.apply_to_order |  | | campaign.promotion.discount.apply_to_items |  | | campaign.promotion.discount.apply_to_items_proportionally |  | | campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  | | campaign.promotion.discount.fixed.apply_to_items |  | | campaign.loyalty_program |  | | voucher.discount_voucher |  | | voucher.discount_voucher.discount.apply_to_order |  | | voucher.discount_voucher.discount.apply_to_items |  | | voucher.discount_voucher.discount.apply_to_items_proportionally |  | | voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  | | voucher.discount_voucher.discount.fixed.apply_to_items |  | | voucher.gift_voucher |  | | voucher.gift_voucher.gift.apply_to_order |  | | voucher.gift_voucher.gift.apply_to_items |  | | voucher.loyalty_card |  | | distribution.custom_event |  | | reward_assignment.pay_with_points |  | | global |  |</value>

        [DataMember(Name = "context_type", EmitDefaultValue = true)]
        public ContextTypeEnum? ContextType
        {
            get{ return _ContextType;}
            set
            {
                _ContextType = value;
                _flagContextType = true;
            }
        }
        private ContextTypeEnum? _ContextType;
        private bool _flagContextType;

        /// <summary>
        /// Returns false as ContextType should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeContextType()
        {
            return _flagContextType;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="ValidationRulesCreateResponseBody" /> class.
        /// </summary>
        /// <param name="name">Custom, unique name for set of validation rules..</param>
        /// <param name="rules">Contains all the rule definitions for the validation rule. It is a set of key value pairs representing the rules and logic between the rules. The keys are numbered consecutively beginning from &#x60;1&#x60;. The values are objects containing the rule conditions..</param>
        /// <param name="bundleRules">Contains all the definitions for the bundle rules. It is a set of key value pairs representing the rules and logic between them. The keys are numbered consecutively beginning from &#x60;1&#x60;. The values are objects containing the rule conditions.  While updating with the PUT method, you can pass &#x60;\&quot;bundle_rules\&quot;: null&#x60; to delete the configuration; in the response, an empty object is then returned..</param>
        /// <param name="error">error.</param>
        /// <param name="applicableTo">applicableTo.</param>
        /// <param name="type">Type of validation rule..</param>
        /// <param name="contextType">Validation rule context type.    | **Context Type** | **Definition** | |:- --|:- --| | earning_rule.order.paid |  | | earning_rule.custom_event |  | | earning_rule.customer.segment.entered |  | | campaign.discount_coupons |  | | campaign.discount_coupons.discount.apply_to_order |  | | campaign.discount_coupons.discount.apply_to_items |  | | campaign.discount_coupons.discount.apply_to_items_proportionally |  | | campaign.discount_coupons.discount.apply_to_items_proportionally_by_quantity |  | | campaign.discount_coupons.discount.fixed.apply_to_items |  | | campaign.gift_vouchers |  | | campaign.gift_vouchers.gift.apply_to_order |  | | campaign.gift_vouchers.gift.apply_to_items |  | | campaign.referral_program |  | | campaign.referral_program.discount.apply_to_order |  | | campaign.referral_program.discount.apply_to_items |  | | campaign.referral_program.discount.apply_to_items_proportionally |  | | campaign.referral_program.discount.apply_to_items_proportionally_by_quantity |  | | campaign.referral_program.discount.fixed.apply_to_items |  | | campaign.promotion |  | | campaign.promotion.discount.apply_to_order |  | | campaign.promotion.discount.apply_to_items |  | | campaign.promotion.discount.apply_to_items_proportionally |  | | campaign.promotion.discount.apply_to_items_proportionally_by_quantity |  | | campaign.promotion.discount.fixed.apply_to_items |  | | campaign.loyalty_program |  | | voucher.discount_voucher |  | | voucher.discount_voucher.discount.apply_to_order |  | | voucher.discount_voucher.discount.apply_to_items |  | | voucher.discount_voucher.discount.apply_to_items_proportionally |  | | voucher.discount_voucher.discount.apply_to_items_proportionally_by_quantity |  | | voucher.discount_voucher.discount.fixed.apply_to_items |  | | voucher.gift_voucher |  | | voucher.gift_voucher.gift.apply_to_order |  | | voucher.gift_voucher.gift.apply_to_items |  | | voucher.loyalty_card |  | | distribution.custom_event |  | | reward_assignment.pay_with_points |  | | global |  |.</param>
        /// <param name="id">Unique validation rule ID..</param>
        /// <param name="createdAt">Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format..</param>
        /// <param name="updatedAt">Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format..</param>
        /// <param name="assignmentsCount">The number of instances the validation rule has been assigned to different types of redeemables..</param>
        /// <param name="varObject">The type of the object represented by JSON. This object stores information about the validation rule..</param>
        public ValidationRulesCreateResponseBody(string name = default(string), Object rules = default(Object), Object bundleRules = default(Object), ValidationRulesCreateResponseBodyError error = default(ValidationRulesCreateResponseBodyError), ValidationRulesCreateResponseBodyApplicableTo applicableTo = default(ValidationRulesCreateResponseBodyApplicableTo), TypeEnum? type = default(TypeEnum?), ContextTypeEnum? contextType = default(ContextTypeEnum?), string id = default(string), DateTimeOffset? createdAt = default(DateTimeOffset?), DateTimeOffset? updatedAt = default(DateTimeOffset?), int? assignmentsCount = default(int?), string varObject = default(string))
        {
            this._Name = name;
            if (this.Name != null)
            {
                this._flagName = true;
            }
            this._Rules = rules;
            if (this.Rules != null)
            {
                this._flagRules = true;
            }
            this._BundleRules = bundleRules;
            if (this.BundleRules != null)
            {
                this._flagBundleRules = true;
            }
            this._Error = error;
            if (this.Error != null)
            {
                this._flagError = true;
            }
            this._ApplicableTo = applicableTo;
            if (this.ApplicableTo != null)
            {
                this._flagApplicableTo = true;
            }
            this._Type = type;
            if (this.Type != null)
            {
                this._flagType = true;
            }
            this._ContextType = contextType;
            if (this.ContextType != null)
            {
                this._flagContextType = true;
            }
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
            this._UpdatedAt = updatedAt;
            if (this.UpdatedAt != null)
            {
                this._flagUpdatedAt = true;
            }
            this._AssignmentsCount = assignmentsCount;
            if (this.AssignmentsCount != null)
            {
                this._flagAssignmentsCount = true;
            }
            this._Object = varObject;
            if (this.Object != null)
            {
                this._flagObject = true;
            }
        }

        /// <summary>
        /// Custom, unique name for set of validation rules.
        /// </summary>
        /// <value>Custom, unique name for set of validation rules.</value>
        /*
        <example>Business Validation Rule</example>
        */
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name
        {
            get{ return _Name;}
            set
            {
                _Name = value;
                _flagName = true;
            }
        }
        private string _Name;
        private bool _flagName;

        /// <summary>
        /// Returns false as Name should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeName()
        {
            return _flagName;
        }
        /// <summary>
        /// Contains all the rule definitions for the validation rule. It is a set of key value pairs representing the rules and logic between the rules. The keys are numbered consecutively beginning from &#x60;1&#x60;. The values are objects containing the rule conditions.
        /// </summary>
        /// <value>Contains all the rule definitions for the validation rule. It is a set of key value pairs representing the rules and logic between the rules. The keys are numbered consecutively beginning from &#x60;1&#x60;. The values are objects containing the rule conditions.</value>
        [DataMember(Name = "rules", EmitDefaultValue = true)]
        public Object Rules
        {
            get{ return _Rules;}
            set
            {
                _Rules = value;
                _flagRules = true;
            }
        }
        private Object _Rules;
        private bool _flagRules;

        /// <summary>
        /// Returns false as Rules should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRules()
        {
            return _flagRules;
        }
        /// <summary>
        /// Contains all the definitions for the bundle rules. It is a set of key value pairs representing the rules and logic between them. The keys are numbered consecutively beginning from &#x60;1&#x60;. The values are objects containing the rule conditions.  While updating with the PUT method, you can pass &#x60;\&quot;bundle_rules\&quot;: null&#x60; to delete the configuration; in the response, an empty object is then returned.
        /// </summary>
        /// <value>Contains all the definitions for the bundle rules. It is a set of key value pairs representing the rules and logic between them. The keys are numbered consecutively beginning from &#x60;1&#x60;. The values are objects containing the rule conditions.  While updating with the PUT method, you can pass &#x60;\&quot;bundle_rules\&quot;: null&#x60; to delete the configuration; in the response, an empty object is then returned.</value>
        [DataMember(Name = "bundle_rules", EmitDefaultValue = true)]
        public Object BundleRules
        {
            get{ return _BundleRules;}
            set
            {
                _BundleRules = value;
                _flagBundleRules = true;
            }
        }
        private Object _BundleRules;
        private bool _flagBundleRules;

        /// <summary>
        /// Returns false as BundleRules should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeBundleRules()
        {
            return _flagBundleRules;
        }
        /// <summary>
        /// Gets or Sets Error
        /// </summary>
        [DataMember(Name = "error", EmitDefaultValue = true)]
        public ValidationRulesCreateResponseBodyError Error
        {
            get{ return _Error;}
            set
            {
                _Error = value;
                _flagError = true;
            }
        }
        private ValidationRulesCreateResponseBodyError _Error;
        private bool _flagError;

        /// <summary>
        /// Returns false as Error should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeError()
        {
            return _flagError;
        }
        /// <summary>
        /// Gets or Sets ApplicableTo
        /// </summary>
        [DataMember(Name = "applicable_to", EmitDefaultValue = true)]
        public ValidationRulesCreateResponseBodyApplicableTo ApplicableTo
        {
            get{ return _ApplicableTo;}
            set
            {
                _ApplicableTo = value;
                _flagApplicableTo = true;
            }
        }
        private ValidationRulesCreateResponseBodyApplicableTo _ApplicableTo;
        private bool _flagApplicableTo;

        /// <summary>
        /// Returns false as ApplicableTo should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeApplicableTo()
        {
            return _flagApplicableTo;
        }
        /// <summary>
        /// Unique validation rule ID.
        /// </summary>
        /// <value>Unique validation rule ID.</value>
        /*
        <example>val_eR1c41hu0vUU</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the validation rule was created. The value is shown in the ISO 8601 format.</value>
        /*
        <example>2022-03-23T07:44:00.444Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public DateTimeOffset? CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private DateTimeOffset? _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the validation rule was updated. The value is shown in the ISO 8601 format.</value>
        /*
        <example>2022-04-26T08:35:54.960Z</example>
        */
        [DataMember(Name = "updated_at", EmitDefaultValue = true)]
        public DateTimeOffset? UpdatedAt
        {
            get{ return _UpdatedAt;}
            set
            {
                _UpdatedAt = value;
                _flagUpdatedAt = true;
            }
        }
        private DateTimeOffset? _UpdatedAt;
        private bool _flagUpdatedAt;

        /// <summary>
        /// Returns false as UpdatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeUpdatedAt()
        {
            return _flagUpdatedAt;
        }
        /// <summary>
        /// The number of instances the validation rule has been assigned to different types of redeemables.
        /// </summary>
        /// <value>The number of instances the validation rule has been assigned to different types of redeemables.</value>
        [DataMember(Name = "assignments_count", EmitDefaultValue = true)]
        public int? AssignmentsCount
        {
            get{ return _AssignmentsCount;}
            set
            {
                _AssignmentsCount = value;
                _flagAssignmentsCount = true;
            }
        }
        private int? _AssignmentsCount;
        private bool _flagAssignmentsCount;

        /// <summary>
        /// Returns false as AssignmentsCount should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAssignmentsCount()
        {
            return _flagAssignmentsCount;
        }
        /// <summary>
        /// The type of the object represented by JSON. This object stores information about the validation rule.
        /// </summary>
        /// <value>The type of the object represented by JSON. This object stores information about the validation rule.</value>
        [DataMember(Name = "object", EmitDefaultValue = true)]
        public string Object
        {
            get{ return _Object;}
            set
            {
                _Object = value;
                _flagObject = true;
            }
        }
        private string _Object;
        private bool _flagObject;

        /// <summary>
        /// Returns false as Object should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObject()
        {
            return _flagObject;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ValidationRulesCreateResponseBody {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Rules: ").Append(Rules).Append("\n");
            sb.Append("  BundleRules: ").Append(BundleRules).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  ApplicableTo: ").Append(ApplicableTo).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  ContextType: ").Append(ContextType).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  AssignmentsCount: ").Append(AssignmentsCount).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
