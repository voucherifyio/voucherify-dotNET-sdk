/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Response body schema for **POST** &#x60;v1/customers/{customerId}/permanent-deletion&#x60;.
    /// </summary>
    [DataContract(Name = "CustomersPermanentDeletionCreateResponseBody")]
    public partial class CustomersPermanentDeletionCreateResponseBody : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomersPermanentDeletionCreateResponseBody" /> class.
        /// </summary>
        /// <param name="id">Unique permanent deletion object ID..</param>
        /// <param name="createdAt">Timestamp representing the date and time when the customer was requested to be deleted in ISO 8601 format..</param>
        /// <param name="relatedObjectId">Unique customer ID that is being deleted..</param>
        /// <param name="relatedObject">Object being deleted. (default to &quot;customer&quot;).</param>
        /// <param name="status">Deletion status. (default to &quot;DONE&quot;).</param>
        /// <param name="dataJson">dataJson.</param>
        /// <param name="varObject">The type of the object represented by JSON. (default to &quot;pernament_deletion&quot;).</param>
        public CustomersPermanentDeletionCreateResponseBody(string id = default(string), DateTimeOffset? createdAt = default(DateTimeOffset?), string relatedObjectId = default(string), string relatedObject = @"customer", string status = @"DONE", CustomersPermanentDeletionCreateResponseBodyDataJson dataJson = default(CustomersPermanentDeletionCreateResponseBodyDataJson), string varObject = @"pernament_deletion")
        {
            this._Id = id;
            if (this.Id != null)
            {
                this._flagId = true;
            }
            this._CreatedAt = createdAt;
            if (this.CreatedAt != null)
            {
                this._flagCreatedAt = true;
            }
            this._RelatedObjectId = relatedObjectId;
            if (this.RelatedObjectId != null)
            {
                this._flagRelatedObjectId = true;
            }
            this._DataJson = dataJson;
            if (this.DataJson != null)
            {
                this._flagDataJson = true;
            }
        }

        /// <summary>
        /// Unique permanent deletion object ID.
        /// </summary>
        /// <value>Unique permanent deletion object ID.</value>
        /*
        <example>del_mgzqZNwUnwnt1Ddw6phEG90Q</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id
        {
            get{ return _Id;}
            set
            {
                _Id = value;
                _flagId = true;
            }
        }
        private string _Id;
        private bool _flagId;

        /// <summary>
        /// Returns false as Id should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeId()
        {
            return _flagId;
        }
        /// <summary>
        /// Timestamp representing the date and time when the customer was requested to be deleted in ISO 8601 format.
        /// </summary>
        /// <value>Timestamp representing the date and time when the customer was requested to be deleted in ISO 8601 format.</value>
        /*
        <example>2022-09-02T17:55:47.865Z</example>
        */
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public DateTimeOffset? CreatedAt
        {
            get{ return _CreatedAt;}
            set
            {
                _CreatedAt = value;
                _flagCreatedAt = true;
            }
        }
        private DateTimeOffset? _CreatedAt;
        private bool _flagCreatedAt;

        /// <summary>
        /// Returns false as CreatedAt should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeCreatedAt()
        {
            return _flagCreatedAt;
        }
        /// <summary>
        /// Unique customer ID that is being deleted.
        /// </summary>
        /// <value>Unique customer ID that is being deleted.</value>
        /*
        <example>cust_m557pDDl4IGXexkU6KOQ2Dwi</example>
        */
        [DataMember(Name = "related_object_id", EmitDefaultValue = true)]
        public string RelatedObjectId
        {
            get{ return _RelatedObjectId;}
            set
            {
                _RelatedObjectId = value;
                _flagRelatedObjectId = true;
            }
        }
        private string _RelatedObjectId;
        private bool _flagRelatedObjectId;

        /// <summary>
        /// Returns false as RelatedObjectId should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObjectId()
        {
            return _flagRelatedObjectId;
        }
        /// <summary>
        /// Object being deleted.
        /// </summary>
        /// <value>Object being deleted.</value>
        [DataMember(Name = "related_object", EmitDefaultValue = true)]
        public string RelatedObject
        {
            get{ return _RelatedObject;}
            set
            {
                _RelatedObject = value;
                _flagRelatedObject = true;
            }
        }
        private string _RelatedObject;
        private bool _flagRelatedObject;

        /// <summary>
        /// Returns false as RelatedObject should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeRelatedObject()
        {
            return _flagRelatedObject;
        }
        /// <summary>
        /// Deletion status.
        /// </summary>
        /// <value>Deletion status.</value>
        [DataMember(Name = "status", EmitDefaultValue = true)]
        public string Status
        {
            get{ return _Status;}
            set
            {
                _Status = value;
                _flagStatus = true;
            }
        }
        private string _Status;
        private bool _flagStatus;

        /// <summary>
        /// Returns false as Status should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeStatus()
        {
            return _flagStatus;
        }
        /// <summary>
        /// Gets or Sets DataJson
        /// </summary>
        [DataMember(Name = "data_json", EmitDefaultValue = true)]
        public CustomersPermanentDeletionCreateResponseBodyDataJson DataJson
        {
            get{ return _DataJson;}
            set
            {
                _DataJson = value;
                _flagDataJson = true;
            }
        }
        private CustomersPermanentDeletionCreateResponseBodyDataJson _DataJson;
        private bool _flagDataJson;

        /// <summary>
        /// Returns false as DataJson should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeDataJson()
        {
            return _flagDataJson;
        }
        /// <summary>
        /// The type of the object represented by JSON.
        /// </summary>
        /// <value>The type of the object represented by JSON.</value>
        [DataMember(Name = "object", EmitDefaultValue = true)]
        public string Object
        {
            get{ return _Object;}
            set
            {
                _Object = value;
                _flagObject = true;
            }
        }
        private string _Object;
        private bool _flagObject;

        /// <summary>
        /// Returns false as Object should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeObject()
        {
            return _flagObject;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomersPermanentDeletionCreateResponseBody {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  RelatedObjectId: ").Append(RelatedObjectId).Append("\n");
            sb.Append("  RelatedObject: ").Append(RelatedObject).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  DataJson: ").Append(DataJson).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
