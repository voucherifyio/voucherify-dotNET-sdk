/*
 * Voucherify API
 *
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Voucherify.Client.OpenAPIDateConverter;

namespace Voucherify.Model
{
    /// <summary>
    /// Contains statistics about orders related to the promotion tier.
    /// </summary>
    [DataContract(Name = "PromotionTierSummaryOrders")]
    public partial class PromotionTierSummaryOrders : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PromotionTierSummaryOrders" /> class.
        /// </summary>
        /// <param name="totalAmount">Sum of order totals..</param>
        /// <param name="totalDiscountAmount">Sum of total discount applied using the promotion tier..</param>
        public PromotionTierSummaryOrders(int? totalAmount = default(int?), int? totalDiscountAmount = default(int?))
        {
            this._TotalAmount = totalAmount;
            if (this.TotalAmount != null)
            {
                this._flagTotalAmount = true;
            }
            this._TotalDiscountAmount = totalDiscountAmount;
            if (this.TotalDiscountAmount != null)
            {
                this._flagTotalDiscountAmount = true;
            }
        }

        /// <summary>
        /// Sum of order totals.
        /// </summary>
        /// <value>Sum of order totals.</value>
        [DataMember(Name = "total_amount", EmitDefaultValue = true)]
        public int? TotalAmount
        {
            get{ return _TotalAmount;}
            set
            {
                _TotalAmount = value;
                _flagTotalAmount = true;
            }
        }
        private int? _TotalAmount;
        private bool _flagTotalAmount;

        /// <summary>
        /// Returns false as TotalAmount should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTotalAmount()
        {
            return _flagTotalAmount;
        }
        /// <summary>
        /// Sum of total discount applied using the promotion tier.
        /// </summary>
        /// <value>Sum of total discount applied using the promotion tier.</value>
        [DataMember(Name = "total_discount_amount", EmitDefaultValue = true)]
        public int? TotalDiscountAmount
        {
            get{ return _TotalDiscountAmount;}
            set
            {
                _TotalDiscountAmount = value;
                _flagTotalDiscountAmount = true;
            }
        }
        private int? _TotalDiscountAmount;
        private bool _flagTotalDiscountAmount;

        /// <summary>
        /// Returns false as TotalDiscountAmount should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeTotalDiscountAmount()
        {
            return _flagTotalDiscountAmount;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PromotionTierSummaryOrders {\n");
            sb.Append("  TotalAmount: ").Append(TotalAmount).Append("\n");
            sb.Append("  TotalDiscountAmount: ").Append(TotalDiscountAmount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
